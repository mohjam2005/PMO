webpackJsonp([0],{

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/Alert.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('Alert', ['message', 'errors', 'color'])),
    created: function created() {
        // Code...
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('Alert', ['resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/BackButton.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },
    created: function created() {
        // Code...
    },

    methods: {
        routerBack: function routerBack() {
            this.$router.go(-1);
        }
    }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/ChangePassword.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ChangePassword', ['current_password', 'new_password', 'new_password_confirmation', 'loading'])),
    created: function created() {
        // Code...
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ChangePassword', ['storeData', 'resetState', 'setCurrentPassword', 'setNewPassword', 'setNewPasswordConfirmation']), {
        updateCurrentPassword: function updateCurrentPassword(e) {
            this.setCurrentPassword(e.target.value);
        },
        updateNewPassword: function updateNewPassword(e) {
            this.setNewPassword(e.target.value);
        },
        updateNewPasswordConfirmation: function updateNewPasswordConfirmation(e) {
            this.setNewPasswordConfirmation(e.target.value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.storeData().then(function () {
                _this.$eventHub.$emit('update-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/EventHub.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('Rules', ['rules'])),
    created: function created() {
        this.$eventHub.$on('create-success', this.itemCreated);
        this.$eventHub.$on('update-success', this.itemUpdated);
        this.$eventHub.$on('delete-success', this.itemDeleted);
        this.$eventHub.$on('rules-update', this.rulesUpdate);
    },

    methods: {
        itemCreated: function itemCreated() {
            this.$awn.success('Your item has been successfully saved.');
        },
        itemUpdated: function itemUpdated() {
            this.$awn.success('Your item has been successfully updated.');
        },
        itemDeleted: function itemDeleted() {
            this.$awn.success('Your item has been successfully deleted.');
        },
        rulesUpdate: function rulesUpdate() {
            this.$ability.update([{ subject: 'all', actions: this.rules }]);
        }
    }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    isLoading: {
      type: Boolean,
      default: false
    },
    status: {
      type: String | Boolean,
      default: ''
    },
    type: {
      type: String,
      default: 'submit'
    }
  },
  computed: {
    getSpinnerClass: function getSpinnerClass() {
      return {
        'spinner fa fa-circle-o-notch fa-spin': this.loading,
        'check': !this.emptyStatus && this.isSuccess && !this.loading,
        'cross': !this.emptyStatus && !this.isSuccess && !this.loading
      };
    },
    getBackgroundClass: function getBackgroundClass() {
      return {
        'vue-btn-loader-error': !this.emptyStatus && !this.isSuccess,
        'vue-btn-loader-success': this.isSuccess,
        'is-loading': this.loading
      };
    },
    loading: function loading() {
      return this.isLoading;
    },
    getType: function getType() {
      return this.type;
    },
    isSuccess: function isSuccess() {
      return this.status === 'success' || this.status === true;
    },
    emptyStatus: function emptyStatus() {
      return this.status === '';
    },
    showSlot: function showSlot() {
      return this.loading || !this.loading && this.emptyStatus;
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'PermissionsIndex',
                route: 'permissions',
                permission_prefix: 'permission_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('PermissionsSingle', ['item', 'loading'])),
    created: function created() {
        // Code ...
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('PermissionsSingle', ['storeData', 'resetState', 'setTitle']), {
        updateTitle: function updateTitle(e) {
            this.setTitle(e.target.value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.storeData().then(function () {
                _this.$router.push({ name: 'permissions.index' });
                _this.$eventHub.$emit('create-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'PermissionsIndex',
                route: 'permissions',
                permission_prefix: 'permission_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('PermissionsSingle', ['item', 'loading'])),
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('PermissionsSingle', ['fetchData', 'updateData', 'resetState', 'setTitle']), {
        updateTitle: function updateTitle(e) {
            this.setTitle(e.target.value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.updateData().then(function () {
                _this.$router.push({ name: 'permissions.index' });
                _this.$eventHub.$emit('update-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableActions.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableSingle.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableList.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            columns: [{ title: '#', field: 'id', sortable: true, colStyle: 'width: 50px;' }, { title: 'Title', field: 'title', sortable: true }, { title: 'Actions', tdComp: __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default.a, visible: true, thClass: 'text-right', tdClass: 'text-right', colStyle: 'width: 130px;' }],
            query: { sort: 'id', order: 'desc' },
            xprops: {
                module: 'PermissionsIndex',
                route: 'permissions',
                permission_prefix: 'permission_'
            }
        };
    },
    created: function created() {
        this.$root.relationships = this.relationships;
        this.fetchData();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('PermissionsIndex', ['data', 'total', 'loading', 'relationships'])),
    watch: {
        query: {
            handler: function handler(query) {
                this.setQuery(query);
            },

            deep: true
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('PermissionsIndex', ['fetchData', 'setQuery', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'PermissionsIndex',
                route: 'permissions',
                permission_prefix: 'permission_'
            }
        };
    },
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('PermissionsSingle', ['item'])),
    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('PermissionsSingle', ['fetchData', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'ProductCategoriesIndex',
                route: 'product_categories',
                permission_prefix: 'product_category_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductCategoriesSingle', ['item', 'loading'])),
    created: function created() {
        // Code ...
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductCategoriesSingle', ['storeData', 'resetState', 'setName', 'setDescription', 'setPhoto']), {
        updateName: function updateName(e) {
            this.setName(e.target.value);
        },
        updateDescription: function updateDescription(e) {
            this.setDescription(e.target.value);
        },
        removePhoto: function removePhoto(e, id) {
            var _this = this;

            this.$swal({
                title: 'Are you sure?',
                text: "To fully delete the file submit the form.",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Delete',
                confirmButtonColor: '#dd4b39',
                focusCancel: true,
                reverseButtons: true
            }).then(function (result) {
                if (typeof result.dismiss === "undefined") {
                    _this.setPhoto('');
                }
            });
        },
        updatePhoto: function updatePhoto(e) {
            this.setPhoto(e.target.files[0]);
            this.$forceUpdate();
        },
        submitForm: function submitForm() {
            var _this2 = this;

            this.storeData().then(function () {
                _this2.$router.push({ name: 'product_categories.index' });
                _this2.$eventHub.$emit('create-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            xprops: {
                module: 'ProductCategoriesIndex',
                route: 'product_categories',
                permission_prefix: 'product_category_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductCategoriesSingle', ['item', 'loading'])),
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductCategoriesSingle', ['fetchData', 'updateData', 'resetState', 'setName', 'setDescription', 'setPhoto']), {
        updateName: function updateName(e) {
            this.setName(e.target.value);
        },
        updateDescription: function updateDescription(e) {
            this.setDescription(e.target.value);
        },
        removePhoto: function removePhoto(e, id) {
            var _this = this;

            this.$swal({
                title: 'Are you sure?',
                text: "To fully delete the file submit the form.",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Delete',
                confirmButtonColor: '#dd4b39',
                focusCancel: true,
                reverseButtons: true
            }).then(function (result) {
                if (typeof result.dismiss === "undefined") {
                    _this.setPhoto('');
                }
            });
        },
        updatePhoto: function updatePhoto(e) {
            this.setPhoto(e.target.files[0]);
            this.$forceUpdate();
        },
        submitForm: function submitForm() {
            var _this2 = this;

            this.updateData().then(function () {
                _this2.$router.push({ name: 'product_categories.index' });
                _this2.$eventHub.$emit('update-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableActions.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableSingle.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableList.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dtmodules_DatatablePhotoField__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dtmodules_DatatablePhotoField___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__dtmodules_DatatablePhotoField__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__vue_translations_json__ = __webpack_require__("./resources/client/assets/js/vue-translations.json");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__vue_translations_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__vue_translations_json__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








var Vue = __webpack_require__("./node_modules/vue/dist/vue.common.js");
var Lang = __webpack_require__("./node_modules/lang.js/src/lang.js");


var lang = new Lang({
    messages: __WEBPACK_IMPORTED_MODULE_6__vue_translations_json___default.a
});

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            columns: [{ title: '#', field: 'id', sortable: true, colStyle: 'width: 50px;' }, { title: lang.get('global.product-categories.fields.name'), field: 'name', sortable: true }, { title: lang.get('global.product-categories.fields.description'), field: 'description', sortable: true }, { title: lang.get('global.product-categories.fields.photo'), tdComp: __WEBPACK_IMPORTED_MODULE_5__dtmodules_DatatablePhotoField___default.a, sortable: false }, { title: lang.get('global.app_action'), tdComp: __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default.a, visible: true, thClass: 'text-right', tdClass: 'text-right', colStyle: 'width: 20%;' }],
            query: { sort: 'id', order: 'desc' },
            xprops: {
                module: 'ProductCategoriesIndex',
                route: 'product_categories',
                permission_prefix: 'product_category_'
            }
        };
    },
    created: function created() {
        this.$root.relationships = this.relationships;
        this.fetchData();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductCategoriesIndex', ['data', 'total', 'loading', 'relationships'])),
    watch: {
        query: {
            handler: function handler(query) {
                this.setQuery(query);
            },

            deep: true
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductCategoriesIndex', ['fetchData', 'setQuery', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            xprops: {
                module: 'ProductCategoriesIndex',
                route: 'product_categories',
                permission_prefix: 'product_category_'
            }
        };
    },
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductCategoriesSingle', ['item'])),
    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductCategoriesSingle', ['fetchData', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    props: ['row']
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'ProductTagsIndex',
                route: 'product_tags',
                permission_prefix: 'product_tag_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductTagsSingle', ['item', 'loading'])),
    created: function created() {
        // Code ...
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductTagsSingle', ['storeData', 'resetState', 'setName']), {
        updateName: function updateName(e) {
            this.setName(e.target.value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.storeData().then(function () {
                _this.$router.push({ name: 'product_tags.index' });
                _this.$eventHub.$emit('create-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'ProductTagsIndex',
                route: 'product_tags',
                permission_prefix: 'product_tag_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductTagsSingle', ['item', 'loading'])),
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductTagsSingle', ['fetchData', 'updateData', 'resetState', 'setName']), {
        updateName: function updateName(e) {
            this.setName(e.target.value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.updateData().then(function () {
                _this.$router.push({ name: 'product_tags.index' });
                _this.$eventHub.$emit('update-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableActions.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableSingle.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableList.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__vue_translations_json__ = __webpack_require__("./resources/client/assets/js/vue-translations.json");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__vue_translations_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__vue_translations_json__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







var Vue = __webpack_require__("./node_modules/vue/dist/vue.common.js");
var Lang = __webpack_require__("./node_modules/lang.js/src/lang.js");


var lang = new Lang({
    messages: __WEBPACK_IMPORTED_MODULE_5__vue_translations_json___default.a
});

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            columns: [{ title: '#', field: 'id', sortable: true, colStyle: 'width: 50px;' }, { title: lang.get('global.product-tags.fields.name'), field: 'name', sortable: true }, { title: lang.get('global.app_action'), tdComp: __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default.a, visible: true, thClass: 'text-right', tdClass: 'text-right', colStyle: 'width: 20%;' }],
            query: { sort: 'id', order: 'desc' },
            xprops: {
                module: 'ProductTagsIndex',
                route: 'product_tags',
                permission_prefix: 'product_tag_'
            }
        };
    },
    created: function created() {
        this.$root.relationships = this.relationships;
        this.fetchData();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductTagsIndex', ['data', 'total', 'loading', 'relationships'])),
    watch: {
        query: {
            handler: function handler(query) {
                this.setQuery(query);
            },

            deep: true
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductTagsIndex', ['fetchData', 'setQuery', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'ProductTagsIndex',
                route: 'product_tags',
                permission_prefix: 'product_tag_'
            }
        };
    },
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('ProductTagsSingle', ['item'])),
    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('ProductTagsSingle', ['fetchData', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'RolesIndex',
                route: 'roles',
                role_prefix: 'role_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('RolesSingle', ['item', 'loading', 'permissionsAll'])),
    created: function created() {
        this.fetchPermissionsAll();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('RolesSingle', ['storeData', 'resetState', 'setTitle', 'setPermission', 'fetchPermissionsAll']), {
        updateTitle: function updateTitle(e) {
            this.setTitle(e.target.value);
        },
        updatePermission: function updatePermission(value) {
            this.setPermission(value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.storeData().then(function () {
                _this.$router.push({ name: 'roles.index' });
                _this.$eventHub.$emit('create-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
            xprops: {
                module: 'RoleIndex',
                route: 'roles',
                permission_prefix: 'role_'
            }
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('RolesSingle', ['item', 'loading', 'permissionsAll'])),
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('RolesSingle', ['fetchData', 'updateData', 'resetState', 'setTitle', 'setPermission']), {
        updateTitle: function updateTitle(e) {
            this.setTitle(e.target.value);
        },
        updatePermission: function updatePermission(value) {
            this.setPermission(value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.updateData().then(function () {
                _this.$router.push({ name: 'roles.index' });
                _this.$eventHub.$emit('update-success');
            }).catch(function (error) {
                console.error(error);
            });
        },
        selectAll: function selectAll() {
            //alert('Select all')
            // this.item.permission = permissionsAll
            //console.log( this.permissionsAll.get('id') );
            //console.log( this.item.permission );

            //console.log( this.$refs.select );
            //foreach( this.permissionsAll )
            /*
            const select = this.$refs.select;
              select.options.forEach(option => {
                select.select(option);
              });
              
              // bug caused by onAfterSelect
              select.open = false
              */
        },
        deselectAll: function deselectAll() {
            // alert('De-Select all')
            // clearSelection();
            // this.mutableValue = this.multiple ? [] : null
            // this.onInput(this.mutableValue)
            // document.getElemen
            // this.item.permission = null
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableActions.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableSingle.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableList.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__vue_translations_json__ = __webpack_require__("./resources/client/assets/js/vue-translations.json");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__vue_translations_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__vue_translations_json__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







var Vue = __webpack_require__("./node_modules/vue/dist/vue.common.js");
var Lang = __webpack_require__("./node_modules/lang.js/src/lang.js");


var lang = new Lang({
    messages: __WEBPACK_IMPORTED_MODULE_5__vue_translations_json___default.a
});

/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            columns: [{ title: '#', field: 'id', sortable: true, colStyle: 'width: 50px;' }, { title: lang.get('global.roles.fields.title'), field: 'title', sortable: true }, { title: lang.get('global.roles.fields.permission'), field: 'permission', tdComp: __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default.a }, { title: lang.get('global.app_action'), tdComp: __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default.a, visible: true, thClass: 'text-right', tdClass: 'text-right', colStyle: 'width: 130px;' }],
            query: { sort: 'id', order: 'desc' },
            xprops: {
                module: 'RolesIndex',
                route: 'roles',
                permission_prefix: 'role_'
            }
        };
    },
    created: function created() {
        this.$root.relationships = this.relationships;
        this.fetchData();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('RolesIndex', ['data', 'total', 'loading', 'relationships'])),
    watch: {
        query: {
            handler: function handler(query) {
                this.setQuery(query);
            },

            deep: true
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('RolesIndex', ['fetchData', 'setQuery', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('RolesSingle', ['item'])),
    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('RolesSingle', ['fetchData', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('UsersSingle', ['item', 'loading', 'rolesAll'])),
    created: function created() {
        this.fetchRolesAll();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('UsersSingle', ['storeData', 'resetState', 'setName', 'setEmail', 'setPassword', 'setRole', 'fetchRolesAll']), {
        updateName: function updateName(e) {
            this.setName(e.target.value);
        },
        updateEmail: function updateEmail(e) {
            this.setEmail(e.target.value);
        },
        updatePassword: function updatePassword(e) {
            this.setPassword(e.target.value);
        },
        updateRole: function updateRole(value) {
            this.setRole(value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.storeData().then(function () {
                _this.$router.push({ name: 'users.index' });
                _this.$eventHub.$emit('create-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('UsersSingle', ['item', 'loading', 'rolesAll'])),
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('UsersSingle', ['fetchData', 'updateData', 'resetState', 'setName', 'setEmail', 'setPassword', 'setRole']), {
        updateName: function updateName(e) {
            this.setName(e.target.value);
        },
        updateEmail: function updateEmail(e) {
            this.setEmail(e.target.value);
        },
        updatePassword: function updatePassword(e) {
            this.setPassword(e.target.value);
        },
        updateRole: function updateRole(value) {
            this.setRole(value);
        },
        submitForm: function submitForm() {
            var _this = this;

            this.updateData().then(function () {
                _this.$router.push({ name: 'users.index' });
                _this.$eventHub.$emit('update-success');
            }).catch(function (error) {
                console.error(error);
            });
        }
    })
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableActions.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableSingle.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dtmodules_DatatableSingle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableList.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__ = __webpack_require__("./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__dtmodules_DatatableCheckbox__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            columns: [{ title: '#', field: 'id', sortable: true, colStyle: 'width: 50px;' }, { title: 'Name', field: 'name', sortable: true }, { title: 'Email', field: 'email', sortable: true }, { title: 'Role', field: 'role', tdComp: __WEBPACK_IMPORTED_MODULE_3__dtmodules_DatatableList___default.a }, { title: 'Actions', tdComp: __WEBPACK_IMPORTED_MODULE_1__dtmodules_DatatableActions___default.a, visible: true, thClass: 'text-right', tdClass: 'text-right', colStyle: 'width: 130px;' }],
            query: { sort: 'id', order: 'desc' },
            xprops: {
                module: 'UsersIndex',
                route: 'users',
                permission_prefix: 'user_'
            }
        };
    },
    created: function created() {
        this.$root.relationships = this.relationships;
        this.fetchData();
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('UsersIndex', ['data', 'total', 'loading', 'relationships'])),
    watch: {
        query: {
            handler: function handler(query) {
                this.setQuery(query);
            },

            deep: true
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('UsersIndex', ['fetchData', 'setQuery', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    data: function data() {
        return {
            // Code...
        };
    },
    created: function created() {
        this.fetchData(this.$route.params.id);
    },
    destroyed: function destroyed() {
        this.resetState();
    },

    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapGetters"])('UsersSingle', ['item'])),
    watch: {
        "$route.params.id": function $routeParamsId() {
            this.resetState();
            this.fetchData(this.$route.params.id);
        }
    },
    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__["mapActions"])('UsersSingle', ['fetchData', 'resetState']))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    props: ['row', 'xprops'],
    data: function data() {
        return {
            // Code...
        };
    },
    created: function created() {
        // Code...
    },

    methods: {
        destroyData: function destroyData(id) {
            var _this = this;

            this.$swal({
                title: 'Are you sure?',
                text: 'You won\'t be able to revert this!',
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Delete',
                confirmButtonColor: '#dd4b39',
                focusCancel: true,
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    _this.$store.dispatch(_this.xprops.module + '/destroyData', id).then(function (result) {
                        _this.$eventHub.$emit('delete-success');
                    });
                }
            });
        }
    }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    props: ['value'],
    data: function data() {
        return {
            // Code...
        };
    },

    computed: {
        // Code...
    },
    created: function created() {
        // Code...
    },
    destroyed: function destroyed() {
        // Code...
    },

    methods: {
        // Code...
    }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    props: ['value', 'field'],
    data: function data() {
        return {
            // Code...
        };
    },
    created: function created() {
        // Code...
    },

    methods: {
        // Code...
    }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
    props: ['value', 'field'],
    data: function data() {
        return {
            // Code...
        };
    },
    created: function created() {
        // Code...
    },

    methods: {
        // Code...
    }
});

/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "/*!\n * Datetimepicker for Bootstrap 3\n * version : 4.17.47\n * https://github.com/Eonasdan/bootstrap-datetimepicker/\n */\n.bootstrap-datetimepicker-widget {\n  list-style: none;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu {\n  display: block;\n  margin: 2px 0;\n  padding: 4px;\n  width: 19em;\n}\n@media (min-width: 768px) {\n  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {\n    width: 38em;\n  }\n}\n@media (min-width: 992px) {\n  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {\n    width: 38em;\n  }\n}\n@media (min-width: 1200px) {\n  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {\n    width: 38em;\n  }\n}\n.bootstrap-datetimepicker-widget.dropdown-menu:before,\n.bootstrap-datetimepicker-widget.dropdown-menu:after {\n  content: '';\n  display: inline-block;\n  position: absolute;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu.bottom:before {\n  border-left: 7px solid transparent;\n  border-right: 7px solid transparent;\n  border-bottom: 7px solid #ccc;\n  border-bottom-color: rgba(0, 0, 0, 0.2);\n  top: -7px;\n  left: 7px;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu.bottom:after {\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid white;\n  top: -6px;\n  left: 8px;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu.top:before {\n  border-left: 7px solid transparent;\n  border-right: 7px solid transparent;\n  border-top: 7px solid #ccc;\n  border-top-color: rgba(0, 0, 0, 0.2);\n  bottom: -7px;\n  left: 6px;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu.top:after {\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  border-top: 6px solid white;\n  bottom: -6px;\n  left: 7px;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:before {\n  left: auto;\n  right: 6px;\n}\n.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:after {\n  left: auto;\n  right: 7px;\n}\n.bootstrap-datetimepicker-widget .list-unstyled {\n  margin: 0;\n}\n.bootstrap-datetimepicker-widget a[data-action] {\n  padding: 6px 0;\n}\n.bootstrap-datetimepicker-widget a[data-action]:active {\n  box-shadow: none;\n}\n.bootstrap-datetimepicker-widget .timepicker-hour,\n.bootstrap-datetimepicker-widget .timepicker-minute,\n.bootstrap-datetimepicker-widget .timepicker-second {\n  width: 54px;\n  font-weight: bold;\n  font-size: 1.2em;\n  margin: 0;\n}\n.bootstrap-datetimepicker-widget button[data-action] {\n  padding: 6px;\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"incrementHours\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Increment Hours\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"incrementMinutes\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Increment Minutes\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"decrementHours\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Decrement Hours\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"decrementMinutes\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Decrement Minutes\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"showHours\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Show Hours\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"showMinutes\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Show Minutes\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"togglePeriod\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Toggle AM/PM\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"clear\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Clear the picker\";\n}\n.bootstrap-datetimepicker-widget .btn[data-action=\"today\"]::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Set the date to today\";\n}\n.bootstrap-datetimepicker-widget .picker-switch {\n  text-align: center;\n}\n.bootstrap-datetimepicker-widget .picker-switch::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Toggle Date and Time Screens\";\n}\n.bootstrap-datetimepicker-widget .picker-switch td {\n  padding: 0;\n  margin: 0;\n  height: auto;\n  width: auto;\n  line-height: inherit;\n}\n.bootstrap-datetimepicker-widget .picker-switch td span {\n  line-height: 2.5;\n  height: 2.5em;\n  width: 100%;\n}\n.bootstrap-datetimepicker-widget table {\n  width: 100%;\n  margin: 0;\n}\n.bootstrap-datetimepicker-widget table td,\n.bootstrap-datetimepicker-widget table th {\n  text-align: center;\n  border-radius: 4px;\n}\n.bootstrap-datetimepicker-widget table th {\n  height: 20px;\n  line-height: 20px;\n  width: 20px;\n}\n.bootstrap-datetimepicker-widget table th.picker-switch {\n  width: 145px;\n}\n.bootstrap-datetimepicker-widget table th.disabled,\n.bootstrap-datetimepicker-widget table th.disabled:hover {\n  background: none;\n  color: #777777;\n  cursor: not-allowed;\n}\n.bootstrap-datetimepicker-widget table th.prev::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Previous Month\";\n}\n.bootstrap-datetimepicker-widget table th.next::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  content: \"Next Month\";\n}\n.bootstrap-datetimepicker-widget table thead tr:first-child th {\n  cursor: pointer;\n}\n.bootstrap-datetimepicker-widget table thead tr:first-child th:hover {\n  background: #eeeeee;\n}\n.bootstrap-datetimepicker-widget table td {\n  height: 54px;\n  line-height: 54px;\n  width: 54px;\n}\n.bootstrap-datetimepicker-widget table td.cw {\n  font-size: .8em;\n  height: 20px;\n  line-height: 20px;\n  color: #777777;\n}\n.bootstrap-datetimepicker-widget table td.day {\n  height: 20px;\n  line-height: 20px;\n  width: 20px;\n}\n.bootstrap-datetimepicker-widget table td.day:hover,\n.bootstrap-datetimepicker-widget table td.hour:hover,\n.bootstrap-datetimepicker-widget table td.minute:hover,\n.bootstrap-datetimepicker-widget table td.second:hover {\n  background: #eeeeee;\n  cursor: pointer;\n}\n.bootstrap-datetimepicker-widget table td.old,\n.bootstrap-datetimepicker-widget table td.new {\n  color: #777777;\n}\n.bootstrap-datetimepicker-widget table td.today {\n  position: relative;\n}\n.bootstrap-datetimepicker-widget table td.today:before {\n  content: '';\n  display: inline-block;\n  border: solid transparent;\n  border-width: 0 0 7px 7px;\n  border-bottom-color: #337ab7;\n  border-top-color: rgba(0, 0, 0, 0.2);\n  position: absolute;\n  bottom: 4px;\n  right: 4px;\n}\n.bootstrap-datetimepicker-widget table td.active,\n.bootstrap-datetimepicker-widget table td.active:hover {\n  background-color: #337ab7;\n  color: #fff;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);\n}\n.bootstrap-datetimepicker-widget table td.active.today:before {\n  border-bottom-color: #fff;\n}\n.bootstrap-datetimepicker-widget table td.disabled,\n.bootstrap-datetimepicker-widget table td.disabled:hover {\n  background: none;\n  color: #777777;\n  cursor: not-allowed;\n}\n.bootstrap-datetimepicker-widget table td span {\n  display: inline-block;\n  width: 54px;\n  height: 54px;\n  line-height: 54px;\n  margin: 2px 1.5px;\n  cursor: pointer;\n  border-radius: 4px;\n}\n.bootstrap-datetimepicker-widget table td span:hover {\n  background: #eeeeee;\n}\n.bootstrap-datetimepicker-widget table td span.active {\n  background-color: #337ab7;\n  color: #fff;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);\n}\n.bootstrap-datetimepicker-widget table td span.old {\n  color: #777777;\n}\n.bootstrap-datetimepicker-widget table td span.disabled,\n.bootstrap-datetimepicker-widget table td span.disabled:hover {\n  background: none;\n  color: #777777;\n  cursor: not-allowed;\n}\n.bootstrap-datetimepicker-widget.usetwentyfour td.hour {\n  height: 27px;\n  line-height: 27px;\n}\n.bootstrap-datetimepicker-widget.wider {\n  width: 21em;\n}\n.bootstrap-datetimepicker-widget .datepicker-decades .decade {\n  line-height: 1.8em !important;\n}\n.input-group.date .input-group-addon {\n  cursor: pointer;\n}\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0422ebea\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-04997954\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.fade-enter-active[data-v-04997954],\n.fade-leave-active[data-v-04997954] {\n    -webkit-transition: opacity 1s;\n    transition: opacity 1s;\n}\n.fade-enter[data-v-04997954],\n.fade-leave-active[data-v-04997954] {\n    opacity: 0;\n    will-change: opacity;\n}\n.vue-btn[data-v-04997954] {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-pack: start;\n    -ms-flex-pack: start;\n    justify-content: flex-start;\n    position: relative;\n    vertical-align: top;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    text-align: center;\n    white-space: nowrap;\n    -webkit-transition: .3s all ease;\n    transition: .3s all ease;\n}\nbutton.vue-btn-loader-error[data-v-04997954]:not(.is-loading) {\n    width: 48px;\n    background-color: #F44336;\n    color: #fff;\n}\nbutton.vue-btn-loader-success[data-v-04997954]:not(.is-loading) {\n    width: 48px;\n    background-color: #8BC34A;\n    color: #fff;\n}\nbutton.vue-btn[data-v-04997954]:disabled {\n    cursor: not-allowed;\n}\n\n/**\n      Spinner Icon\n  **/\n.spinner[data-v-04997954] {\n    margin-right: 8px;\n    opacity: 1;\n    filter: alpha(opacity=100);\n    -webkit-transition: .3s all ease;\n    transition: .3s all ease;\n}\n\n/**\n      Check Icon\n  **/\n.check[data-v-04997954] {\n    display: inline-block;\n    width: 23px;\n    height: 24px;\n    border-radius: 50%;\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    color: white;\n    will-change: transform;\n}\n.check[data-v-04997954]:before {\n    content: \"\";\n    position: absolute;\n    width: 3px;\n    height: 9px;\n    background-color: #fff;\n    left: 11px;\n    top: 6px;\n}\n.check[data-v-04997954]:after {\n    content: \"\";\n    position: absolute;\n    width: 3px;\n    height: 3px;\n    background-color: #fff;\n    left: 8px;\n    top: 12px;\n}\n\n/**\n      Cross Icon\n  **/\n.cross[data-v-04997954] {\n    display: inline-block;\n    width: 17px;\n    height: 16px;\n    position: relative;\n}\n.cross[data-v-04997954]:before,\n.cross[data-v-04997954]:after {\n    position: absolute;\n    left: 8px;\n    content: ' ';\n    height: 16px;\n    width: 2px;\n    background-color: #fff;\n}\n.cross[data-v-04997954]:before {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    will-change: transform;\n}\n.cross[data-v-04997954]:after {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg);\n    will-change: transform;\n}\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0d1c0911\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15a01839\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/Alert.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.row-alert[data-v-15a01839] {\n    padding: 10px;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15e143d0\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1a272ffb\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1dfc2188\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1e1838de\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28e50c70\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-32b2c6a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-33382e5b\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3a94ad04\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-41b41ab2\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53b64a44\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/ChangePassword.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-58c7cd95\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-5faec504\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62d9ce0d\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-64b133c9\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6711dbbc\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f0664f1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-732cff23\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-758556d1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-808a5428\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/BackButton.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-80ee2c64\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94917fe4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-ab2e175e\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b02247d8\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b228ba68\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-e6de46a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/EventHub.vue":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.css":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.css");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../css-loader/index.js!./bootstrap-datetimepicker.css", function() {
			var newContent = require("!!../../../css-loader/index.js!./bootstrap-datetimepicker.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/eonasdan-bootstrap-datetimepicker/src/js/bootstrap-datetimepicker.js":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! version : 4.17.47
 =========================================================
 bootstrap-datetimejs
 https://github.com/Eonasdan/bootstrap-datetimepicker
 Copyright (c) 2015 Jonathan Peterson
 =========================================================
 */
/*
 The MIT License (MIT)

 Copyright (c) 2015 Jonathan Peterson

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
/*global define:false */
/*global exports:false */
/*global require:false */
/*global jQuery:false */
/*global moment:false */
(function (factory) {
    'use strict';
    if (true) {
        // AMD is used - Register as an anonymous module.
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__("./node_modules/jquery/dist/jquery.js"), __webpack_require__("./node_modules/moment/moment.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof exports === 'object') {
        module.exports = factory(require('jquery'), require('moment'));
    } else {
        // Neither AMD nor CommonJS used. Use global variables.
        if (typeof jQuery === 'undefined') {
            throw 'bootstrap-datetimepicker requires jQuery to be loaded first';
        }
        if (typeof moment === 'undefined') {
            throw 'bootstrap-datetimepicker requires Moment.js to be loaded first';
        }
        factory(jQuery, moment);
    }
}(function ($, moment) {
    'use strict';
    if (!moment) {
        throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');
    }

    var dateTimePicker = function (element, options) {
        var picker = {},
            date,
            viewDate,
            unset = true,
            input,
            component = false,
            widget = false,
            use24Hours,
            minViewModeNumber = 0,
            actualFormat,
            parseFormats,
            currentViewMode,
            datePickerModes = [
                {
                    clsName: 'days',
                    navFnc: 'M',
                    navStep: 1
                },
                {
                    clsName: 'months',
                    navFnc: 'y',
                    navStep: 1
                },
                {
                    clsName: 'years',
                    navFnc: 'y',
                    navStep: 10
                },
                {
                    clsName: 'decades',
                    navFnc: 'y',
                    navStep: 100
                }
            ],
            viewModes = ['days', 'months', 'years', 'decades'],
            verticalModes = ['top', 'bottom', 'auto'],
            horizontalModes = ['left', 'right', 'auto'],
            toolbarPlacements = ['default', 'top', 'bottom'],
            keyMap = {
                'up': 38,
                38: 'up',
                'down': 40,
                40: 'down',
                'left': 37,
                37: 'left',
                'right': 39,
                39: 'right',
                'tab': 9,
                9: 'tab',
                'escape': 27,
                27: 'escape',
                'enter': 13,
                13: 'enter',
                'pageUp': 33,
                33: 'pageUp',
                'pageDown': 34,
                34: 'pageDown',
                'shift': 16,
                16: 'shift',
                'control': 17,
                17: 'control',
                'space': 32,
                32: 'space',
                't': 84,
                84: 't',
                'delete': 46,
                46: 'delete'
            },
            keyState = {},

            /********************************************************************************
             *
             * Private functions
             *
             ********************************************************************************/

            hasTimeZone = function () {
                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';
            },

            getMoment = function (d) {
                var returnMoment;

                if (d === undefined || d === null) {
                    returnMoment = moment(); //TODO should this use format? and locale?
                } else if (moment.isDate(d) || moment.isMoment(d)) {
                    // If the date that is passed in is already a Date() or moment() object,
                    // pass it directly to moment.
                    returnMoment = moment(d);
                } else if (hasTimeZone()) { // There is a string to parse and a default time zone
                    // parse with the tz function which takes a default time zone if it is not in the format string
                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);
                } else {
                    returnMoment = moment(d, parseFormats, options.useStrict);
                }

                if (hasTimeZone()) {
                    returnMoment.tz(options.timeZone);
                }

                return returnMoment;
            },

            isEnabled = function (granularity) {
                if (typeof granularity !== 'string' || granularity.length > 1) {
                    throw new TypeError('isEnabled expects a single character string parameter');
                }
                switch (granularity) {
                    case 'y':
                        return actualFormat.indexOf('Y') !== -1;
                    case 'M':
                        return actualFormat.indexOf('M') !== -1;
                    case 'd':
                        return actualFormat.toLowerCase().indexOf('d') !== -1;
                    case 'h':
                    case 'H':
                        return actualFormat.toLowerCase().indexOf('h') !== -1;
                    case 'm':
                        return actualFormat.indexOf('m') !== -1;
                    case 's':
                        return actualFormat.indexOf('s') !== -1;
                    default:
                        return false;
                }
            },

            hasTime = function () {
                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));
            },

            hasDate = function () {
                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));
            },

            getDatePickerTemplate = function () {
                var headTemplate = $('<thead>')
                        .append($('<tr>')
                            .append($('<th>').addClass('prev').attr('data-action', 'previous')
                                .append($('<span>').addClass(options.icons.previous))
                                )
                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))
                            .append($('<th>').addClass('next').attr('data-action', 'next')
                                .append($('<span>').addClass(options.icons.next))
                                )
                            ),
                    contTemplate = $('<tbody>')
                        .append($('<tr>')
                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))
                            );

                return [
                    $('<div>').addClass('datepicker-days')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate)
                            .append($('<tbody>'))
                            ),
                    $('<div>').addClass('datepicker-months')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate.clone())
                            .append(contTemplate.clone())
                            ),
                    $('<div>').addClass('datepicker-years')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate.clone())
                            .append(contTemplate.clone())
                            ),
                    $('<div>').addClass('datepicker-decades')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate.clone())
                            .append(contTemplate.clone())
                            )
                ];
            },

            getTimePickerMainTemplate = function () {
                var topRow = $('<tr>'),
                    middleRow = $('<tr>'),
                    bottomRow = $('<tr>');

                if (isEnabled('h')) {
                    topRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));
                    middleRow.append($('<td>')
                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));
                    bottomRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));
                }
                if (isEnabled('m')) {
                    if (isEnabled('h')) {
                        topRow.append($('<td>').addClass('separator'));
                        middleRow.append($('<td>').addClass('separator').html(':'));
                        bottomRow.append($('<td>').addClass('separator'));
                    }
                    topRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')
                            .append($('<span>').addClass(options.icons.up))));
                    middleRow.append($('<td>')
                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));
                    bottomRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')
                            .append($('<span>').addClass(options.icons.down))));
                }
                if (isEnabled('s')) {
                    if (isEnabled('m')) {
                        topRow.append($('<td>').addClass('separator'));
                        middleRow.append($('<td>').addClass('separator').html(':'));
                        bottomRow.append($('<td>').addClass('separator'));
                    }
                    topRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')
                            .append($('<span>').addClass(options.icons.up))));
                    middleRow.append($('<td>')
                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));
                    bottomRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')
                            .append($('<span>').addClass(options.icons.down))));
                }

                if (!use24Hours) {
                    topRow.append($('<td>').addClass('separator'));
                    middleRow.append($('<td>')
                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));
                    bottomRow.append($('<td>').addClass('separator'));
                }

                return $('<div>').addClass('timepicker-picker')
                    .append($('<table>').addClass('table-condensed')
                        .append([topRow, middleRow, bottomRow]));
            },

            getTimePickerTemplate = function () {
                var hoursView = $('<div>').addClass('timepicker-hours')
                        .append($('<table>').addClass('table-condensed')),
                    minutesView = $('<div>').addClass('timepicker-minutes')
                        .append($('<table>').addClass('table-condensed')),
                    secondsView = $('<div>').addClass('timepicker-seconds')
                        .append($('<table>').addClass('table-condensed')),
                    ret = [getTimePickerMainTemplate()];

                if (isEnabled('h')) {
                    ret.push(hoursView);
                }
                if (isEnabled('m')) {
                    ret.push(minutesView);
                }
                if (isEnabled('s')) {
                    ret.push(secondsView);
                }

                return ret;
            },

            getToolbar = function () {
                var row = [];
                if (options.showTodayButton) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<span>').addClass(options.icons.today))));
                }
                if (!options.sideBySide && hasDate() && hasTime()) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<span>').addClass(options.icons.time))));
                }
                if (options.showClear) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<span>').addClass(options.icons.clear))));
                }
                if (options.showClose) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<span>').addClass(options.icons.close))));
                }
                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));
            },

            getTemplate = function () {
                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),
                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),
                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),
                    content = $('<ul>').addClass('list-unstyled'),
                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());

                if (options.inline) {
                    template.removeClass('dropdown-menu');
                }

                if (use24Hours) {
                    template.addClass('usetwentyfour');
                }

                if (isEnabled('s') && !use24Hours) {
                    template.addClass('wider');
                }

                if (options.sideBySide && hasDate() && hasTime()) {
                    template.addClass('timepicker-sbs');
                    if (options.toolbarPlacement === 'top') {
                        template.append(toolbar);
                    }
                    template.append(
                        $('<div>').addClass('row')
                            .append(dateView.addClass('col-md-6'))
                            .append(timeView.addClass('col-md-6'))
                    );
                    if (options.toolbarPlacement === 'bottom') {
                        template.append(toolbar);
                    }
                    return template;
                }

                if (options.toolbarPlacement === 'top') {
                    content.append(toolbar);
                }
                if (hasDate()) {
                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse in' : '')).append(dateView));
                }
                if (options.toolbarPlacement === 'default') {
                    content.append(toolbar);
                }
                if (hasTime()) {
                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));
                }
                if (options.toolbarPlacement === 'bottom') {
                    content.append(toolbar);
                }
                return template.append(content);
            },

            dataToOptions = function () {
                var eData,
                    dataOptions = {};

                if (element.is('input') || options.inline) {
                    eData = element.data();
                } else {
                    eData = element.find('input').data();
                }

                if (eData.dateOptions && eData.dateOptions instanceof Object) {
                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);
                }

                $.each(options, function (key) {
                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);
                    if (eData[attributeName] !== undefined) {
                        dataOptions[key] = eData[attributeName];
                    }
                });
                return dataOptions;
            },

            place = function () {
                var position = (component || element).position(),
                    offset = (component || element).offset(),
                    vertical = options.widgetPositioning.vertical,
                    horizontal = options.widgetPositioning.horizontal,
                    parent;

                if (options.widgetParent) {
                    parent = options.widgetParent.append(widget);
                } else if (element.is('input')) {
                    parent = element.after(widget).parent();
                } else if (options.inline) {
                    parent = element.append(widget);
                    return;
                } else {
                    parent = element;
                    element.children().first().after(widget);
                }

                // Top and bottom logic
                if (vertical === 'auto') {
                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&
                        widget.height() + element.outerHeight() < offset.top) {
                        vertical = 'top';
                    } else {
                        vertical = 'bottom';
                    }
                }

                // Left and right logic
                if (horizontal === 'auto') {
                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&
                        offset.left + widget.outerWidth() > $(window).width()) {
                        horizontal = 'right';
                    } else {
                        horizontal = 'left';
                    }
                }

                if (vertical === 'top') {
                    widget.addClass('top').removeClass('bottom');
                } else {
                    widget.addClass('bottom').removeClass('top');
                }

                if (horizontal === 'right') {
                    widget.addClass('pull-right');
                } else {
                    widget.removeClass('pull-right');
                }

                // find the first parent element that has a non-static css positioning
                if (parent.css('position') === 'static') {
                    parent = parent.parents().filter(function () {
                        return $(this).css('position') !== 'static';
                    }).first();
                }

                if (parent.length === 0) {
                    throw new Error('datetimepicker component should be placed within a non-static positioned container');
                }

                widget.css({
                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),
                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',
                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',
                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)
                });
            },

            notifyEvent = function (e) {
                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {
                    return;
                }
                element.trigger(e);
            },

            viewUpdate = function (e) {
                if (e === 'y') {
                    e = 'YYYY';
                }
                notifyEvent({
                    type: 'dp.update',
                    change: e,
                    viewDate: viewDate.clone()
                });
            },

            showMode = function (dir) {
                if (!widget) {
                    return;
                }
                if (dir) {
                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));
                }
                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();
            },

            fillDow = function () {
                var row = $('<tr>'),
                    currentDate = viewDate.clone().startOf('w').startOf('d');

                if (options.calendarWeeks === true) {
                    row.append($('<th>').addClass('cw').text('#'));
                }

                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {
                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));
                    currentDate.add(1, 'd');
                }
                widget.find('.datepicker-days thead').append(row);
            },

            isInDisabledDates = function (testDate) {
                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;
            },

            isInEnabledDates = function (testDate) {
                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;
            },

            isInDisabledHours = function (testDate) {
                return options.disabledHours[testDate.format('H')] === true;
            },

            isInEnabledHours = function (testDate) {
                return options.enabledHours[testDate.format('H')] === true;
            },

            isValid = function (targetMoment, granularity) {
                if (!targetMoment.isValid()) {
                    return false;
                }
                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {
                    return false;
                }
                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {
                    return false;
                }
                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {
                    return false;
                }
                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {
                    return false;
                }
                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {
                    return false;
                }
                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {
                    return false;
                }
                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {
                    return false;
                }
                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {
                    var found = false;
                    $.each(options.disabledTimeIntervals, function () {
                        if (targetMoment.isBetween(this[0], this[1])) {
                            found = true;
                            return false;
                        }
                    });
                    if (found) {
                        return false;
                    }
                }
                return true;
            },

            fillMonths = function () {
                var spans = [],
                    monthsShort = viewDate.clone().startOf('y').startOf('d');
                while (monthsShort.isSame(viewDate, 'y')) {
                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));
                    monthsShort.add(1, 'M');
                }
                widget.find('.datepicker-months td').empty().append(spans);
            },

            updateMonths = function () {
                var monthsView = widget.find('.datepicker-months'),
                    monthsViewHeader = monthsView.find('th'),
                    months = monthsView.find('tbody').find('span');

                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);
                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);
                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);

                monthsView.find('.disabled').removeClass('disabled');

                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {
                    monthsViewHeader.eq(0).addClass('disabled');
                }

                monthsViewHeader.eq(1).text(viewDate.year());

                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {
                    monthsViewHeader.eq(2).addClass('disabled');
                }

                months.removeClass('active');
                if (date.isSame(viewDate, 'y') && !unset) {
                    months.eq(date.month()).addClass('active');
                }

                months.each(function (index) {
                    if (!isValid(viewDate.clone().month(index), 'M')) {
                        $(this).addClass('disabled');
                    }
                });
            },

            updateYears = function () {
                var yearsView = widget.find('.datepicker-years'),
                    yearsViewHeader = yearsView.find('th'),
                    startYear = viewDate.clone().subtract(5, 'y'),
                    endYear = viewDate.clone().add(6, 'y'),
                    html = '';

                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);
                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);
                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);

                yearsView.find('.disabled').removeClass('disabled');

                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {
                    yearsViewHeader.eq(0).addClass('disabled');
                }

                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());

                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {
                    yearsViewHeader.eq(2).addClass('disabled');
                }

                while (!startYear.isAfter(endYear, 'y')) {
                    html += '<span data-action="selectYear" class="year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '">' + startYear.year() + '</span>';
                    startYear.add(1, 'y');
                }

                yearsView.find('td').html(html);
            },

            updateDecades = function () {
                var decadesView = widget.find('.datepicker-decades'),
                    decadesViewHeader = decadesView.find('th'),
                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),
                    endDecade = startDecade.clone().add(100, 'y'),
                    startedAt = startDecade.clone(),
                    minDateDecade = false,
                    maxDateDecade = false,
                    endDecadeYear,
                    html = '';

                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);
                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);

                decadesView.find('.disabled').removeClass('disabled');

                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {
                    decadesViewHeader.eq(0).addClass('disabled');
                }

                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());

                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {
                    decadesViewHeader.eq(2).addClass('disabled');
                }

                while (!startDecade.isAfter(endDecade, 'y')) {
                    endDecadeYear = startDecade.year() + 12;
                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;
                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;
                    html += '<span data-action="selectDecade" class="decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +
                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '" data-selection="' + (startDecade.year() + 6) + '">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';
                    startDecade.add(12, 'y');
                }
                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even

                decadesView.find('td').html(html);
                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));
            },

            fillDate = function () {
                var daysView = widget.find('.datepicker-days'),
                    daysViewHeader = daysView.find('th'),
                    currentDate,
                    html = [],
                    row,
                    clsNames = [],
                    i;

                if (!hasDate()) {
                    return;
                }

                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);
                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);
                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);

                daysView.find('.disabled').removeClass('disabled');
                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));

                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {
                    daysViewHeader.eq(0).addClass('disabled');
                }
                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {
                    daysViewHeader.eq(2).addClass('disabled');
                }

                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');

                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)
                    if (currentDate.weekday() === 0) {
                        row = $('<tr>');
                        if (options.calendarWeeks) {
                            row.append('<td class="cw">' + currentDate.week() + '</td>');
                        }
                        html.push(row);
                    }
                    clsNames = ['day'];
                    if (currentDate.isBefore(viewDate, 'M')) {
                        clsNames.push('old');
                    }
                    if (currentDate.isAfter(viewDate, 'M')) {
                        clsNames.push('new');
                    }
                    if (currentDate.isSame(date, 'd') && !unset) {
                        clsNames.push('active');
                    }
                    if (!isValid(currentDate, 'd')) {
                        clsNames.push('disabled');
                    }
                    if (currentDate.isSame(getMoment(), 'd')) {
                        clsNames.push('today');
                    }
                    if (currentDate.day() === 0 || currentDate.day() === 6) {
                        clsNames.push('weekend');
                    }
                    notifyEvent({
                        type: 'dp.classify',
                        date: currentDate,
                        classNames: clsNames
                    });
                    row.append('<td data-action="selectDay" data-day="' + currentDate.format('L') + '" class="' + clsNames.join(' ') + '">' + currentDate.date() + '</td>');
                    currentDate.add(1, 'd');
                }

                daysView.find('tbody').empty().append(html);

                updateMonths();

                updateYears();

                updateDecades();
            },

            fillHours = function () {
                var table = widget.find('.timepicker-hours table'),
                    currentHour = viewDate.clone().startOf('d'),
                    html = [],
                    row = $('<tr>');

                if (viewDate.hour() > 11 && !use24Hours) {
                    currentHour.hour(12);
                }
                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {
                    if (currentHour.hour() % 4 === 0) {
                        row = $('<tr>');
                        html.push(row);
                    }
                    row.append('<td data-action="selectHour" class="hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');
                    currentHour.add(1, 'h');
                }
                table.empty().append(html);
            },

            fillMinutes = function () {
                var table = widget.find('.timepicker-minutes table'),
                    currentMinute = viewDate.clone().startOf('h'),
                    html = [],
                    row = $('<tr>'),
                    step = options.stepping === 1 ? 5 : options.stepping;

                while (viewDate.isSame(currentMinute, 'h')) {
                    if (currentMinute.minute() % (step * 4) === 0) {
                        row = $('<tr>');
                        html.push(row);
                    }
                    row.append('<td data-action="selectMinute" class="minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '">' + currentMinute.format('mm') + '</td>');
                    currentMinute.add(step, 'm');
                }
                table.empty().append(html);
            },

            fillSeconds = function () {
                var table = widget.find('.timepicker-seconds table'),
                    currentSecond = viewDate.clone().startOf('m'),
                    html = [],
                    row = $('<tr>');

                while (viewDate.isSame(currentSecond, 'm')) {
                    if (currentSecond.second() % 20 === 0) {
                        row = $('<tr>');
                        html.push(row);
                    }
                    row.append('<td data-action="selectSecond" class="second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '">' + currentSecond.format('ss') + '</td>');
                    currentSecond.add(5, 's');
                }

                table.empty().append(html);
            },

            fillTime = function () {
                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');

                if (!use24Hours) {
                    toggle = widget.find('.timepicker [data-action=togglePeriod]');
                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');

                    toggle.text(date.format('A'));

                    if (isValid(newDate, 'h')) {
                        toggle.removeClass('disabled');
                    } else {
                        toggle.addClass('disabled');
                    }
                }
                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));
                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));
                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));

                fillHours();
                fillMinutes();
                fillSeconds();
            },

            update = function () {
                if (!widget) {
                    return;
                }
                fillDate();
                fillTime();
            },

            setValue = function (targetMoment) {
                var oldDate = unset ? null : date;

                // case of calling setValue(null or false)
                if (!targetMoment) {
                    unset = true;
                    input.val('');
                    element.data('date', '');
                    notifyEvent({
                        type: 'dp.change',
                        date: false,
                        oldDate: oldDate
                    });
                    update();
                    return;
                }

                targetMoment = targetMoment.clone().locale(options.locale);

                if (hasTimeZone()) {
                    targetMoment.tz(options.timeZone);
                }

                if (options.stepping !== 1) {
                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);

                    while (options.minDate && targetMoment.isBefore(options.minDate)) {
                        targetMoment.add(options.stepping, 'minutes');
                    }
                }

                if (isValid(targetMoment)) {
                    date = targetMoment;
                    viewDate = date.clone();
                    input.val(date.format(actualFormat));
                    element.data('date', date.format(actualFormat));
                    unset = false;
                    update();
                    notifyEvent({
                        type: 'dp.change',
                        date: date.clone(),
                        oldDate: oldDate
                    });
                } else {
                    if (!options.keepInvalid) {
                        input.val(unset ? '' : date.format(actualFormat));
                    } else {
                        notifyEvent({
                            type: 'dp.change',
                            date: targetMoment,
                            oldDate: oldDate
                        });
                    }
                    notifyEvent({
                        type: 'dp.error',
                        date: targetMoment,
                        oldDate: oldDate
                    });
                }
            },

            /**
             * Hides the widget. Possibly will emit dp.hide
             */
            hide = function () {
                var transitioning = false;
                if (!widget) {
                    return picker;
                }
                // Ignore event if in the middle of a picker transition
                widget.find('.collapse').each(function () {
                    var collapseData = $(this).data('collapse');
                    if (collapseData && collapseData.transitioning) {
                        transitioning = true;
                        return false;
                    }
                    return true;
                });
                if (transitioning) {
                    return picker;
                }
                if (component && component.hasClass('btn')) {
                    component.toggleClass('active');
                }
                widget.hide();

                $(window).off('resize', place);
                widget.off('click', '[data-action]');
                widget.off('mousedown', false);

                widget.remove();
                widget = false;

                notifyEvent({
                    type: 'dp.hide',
                    date: date.clone()
                });

                input.blur();

                viewDate = date.clone();

                return picker;
            },

            clear = function () {
                setValue(null);
            },

            parseInputDate = function (inputDate) {
                if (options.parseInputDate === undefined) {
                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {
                        inputDate = getMoment(inputDate);
                    }
                } else {
                    inputDate = options.parseInputDate(inputDate);
                }
                //inputDate.locale(options.locale);
                return inputDate;
            },

            /********************************************************************************
             *
             * Widget UI interaction functions
             *
             ********************************************************************************/
            actions = {
                next: function () {
                    var navFnc = datePickerModes[currentViewMode].navFnc;
                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);
                    fillDate();
                    viewUpdate(navFnc);
                },

                previous: function () {
                    var navFnc = datePickerModes[currentViewMode].navFnc;
                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);
                    fillDate();
                    viewUpdate(navFnc);
                },

                pickerSwitch: function () {
                    showMode(1);
                },

                selectMonth: function (e) {
                    var month = $(e.target).closest('tbody').find('span').index($(e.target));
                    viewDate.month(month);
                    if (currentViewMode === minViewModeNumber) {
                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));
                        if (!options.inline) {
                            hide();
                        }
                    } else {
                        showMode(-1);
                        fillDate();
                    }
                    viewUpdate('M');
                },

                selectYear: function (e) {
                    var year = parseInt($(e.target).text(), 10) || 0;
                    viewDate.year(year);
                    if (currentViewMode === minViewModeNumber) {
                        setValue(date.clone().year(viewDate.year()));
                        if (!options.inline) {
                            hide();
                        }
                    } else {
                        showMode(-1);
                        fillDate();
                    }
                    viewUpdate('YYYY');
                },

                selectDecade: function (e) {
                    var year = parseInt($(e.target).data('selection'), 10) || 0;
                    viewDate.year(year);
                    if (currentViewMode === minViewModeNumber) {
                        setValue(date.clone().year(viewDate.year()));
                        if (!options.inline) {
                            hide();
                        }
                    } else {
                        showMode(-1);
                        fillDate();
                    }
                    viewUpdate('YYYY');
                },

                selectDay: function (e) {
                    var day = viewDate.clone();
                    if ($(e.target).is('.old')) {
                        day.subtract(1, 'M');
                    }
                    if ($(e.target).is('.new')) {
                        day.add(1, 'M');
                    }
                    setValue(day.date(parseInt($(e.target).text(), 10)));
                    if (!hasTime() && !options.keepOpen && !options.inline) {
                        hide();
                    }
                },

                incrementHours: function () {
                    var newDate = date.clone().add(1, 'h');
                    if (isValid(newDate, 'h')) {
                        setValue(newDate);
                    }
                },

                incrementMinutes: function () {
                    var newDate = date.clone().add(options.stepping, 'm');
                    if (isValid(newDate, 'm')) {
                        setValue(newDate);
                    }
                },

                incrementSeconds: function () {
                    var newDate = date.clone().add(1, 's');
                    if (isValid(newDate, 's')) {
                        setValue(newDate);
                    }
                },

                decrementHours: function () {
                    var newDate = date.clone().subtract(1, 'h');
                    if (isValid(newDate, 'h')) {
                        setValue(newDate);
                    }
                },

                decrementMinutes: function () {
                    var newDate = date.clone().subtract(options.stepping, 'm');
                    if (isValid(newDate, 'm')) {
                        setValue(newDate);
                    }
                },

                decrementSeconds: function () {
                    var newDate = date.clone().subtract(1, 's');
                    if (isValid(newDate, 's')) {
                        setValue(newDate);
                    }
                },

                togglePeriod: function () {
                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));
                },

                togglePicker: function (e) {
                    var $this = $(e.target),
                        $parent = $this.closest('ul'),
                        expanded = $parent.find('.in'),
                        closed = $parent.find('.collapse:not(.in)'),
                        collapseData;

                    if (expanded && expanded.length) {
                        collapseData = expanded.data('collapse');
                        if (collapseData && collapseData.transitioning) {
                            return;
                        }
                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it
                            expanded.collapse('hide');
                            closed.collapse('show');
                        } else { // otherwise just toggle in class on the two views
                            expanded.removeClass('in');
                            closed.addClass('in');
                        }
                        if ($this.is('span')) {
                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);
                        } else {
                            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);
                        }

                        // NOTE: uncomment if toggled state will be restored in show()
                        //if (component) {
                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);
                        //}
                    }
                },

                showPicker: function () {
                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();
                    widget.find('.timepicker .timepicker-picker').show();
                },

                showHours: function () {
                    widget.find('.timepicker .timepicker-picker').hide();
                    widget.find('.timepicker .timepicker-hours').show();
                },

                showMinutes: function () {
                    widget.find('.timepicker .timepicker-picker').hide();
                    widget.find('.timepicker .timepicker-minutes').show();
                },

                showSeconds: function () {
                    widget.find('.timepicker .timepicker-picker').hide();
                    widget.find('.timepicker .timepicker-seconds').show();
                },

                selectHour: function (e) {
                    var hour = parseInt($(e.target).text(), 10);

                    if (!use24Hours) {
                        if (date.hours() >= 12) {
                            if (hour !== 12) {
                                hour += 12;
                            }
                        } else {
                            if (hour === 12) {
                                hour = 0;
                            }
                        }
                    }
                    setValue(date.clone().hours(hour));
                    actions.showPicker.call(picker);
                },

                selectMinute: function (e) {
                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));
                    actions.showPicker.call(picker);
                },

                selectSecond: function (e) {
                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));
                    actions.showPicker.call(picker);
                },

                clear: clear,

                today: function () {
                    var todaysDate = getMoment();
                    if (isValid(todaysDate, 'd')) {
                        setValue(todaysDate);
                    }
                },

                close: hide
            },

            doAction = function (e) {
                if ($(e.currentTarget).is('.disabled')) {
                    return false;
                }
                actions[$(e.currentTarget).data('action')].apply(picker, arguments);
                return false;
            },

            /**
             * Shows the widget. Possibly will emit dp.show and dp.change
             */
            show = function () {
                var currentMoment,
                    useCurrentGranularity = {
                        'year': function (m) {
                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);
                        },
                        'month': function (m) {
                            return m.date(1).hours(0).seconds(0).minutes(0);
                        },
                        'day': function (m) {
                            return m.hours(0).seconds(0).minutes(0);
                        },
                        'hour': function (m) {
                            return m.seconds(0).minutes(0);
                        },
                        'minute': function (m) {
                            return m.seconds(0);
                        }
                    };

                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {
                    return picker;
                }
                if (input.val() !== undefined && input.val().trim().length !== 0) {
                    setValue(parseInputDate(input.val().trim()));
                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {
                    currentMoment = getMoment();
                    if (typeof options.useCurrent === 'string') {
                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);
                    }
                    setValue(currentMoment);
                }
                widget = getTemplate();

                fillDow();
                fillMonths();

                widget.find('.timepicker-hours').hide();
                widget.find('.timepicker-minutes').hide();
                widget.find('.timepicker-seconds').hide();

                update();
                showMode();

                $(window).on('resize', place);
                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget
                widget.on('mousedown', false);

                if (component && component.hasClass('btn')) {
                    component.toggleClass('active');
                }
                place();
                widget.show();
                if (options.focusOnShow && !input.is(':focus')) {
                    input.focus();
                }

                notifyEvent({
                    type: 'dp.show'
                });
                return picker;
            },

            /**
             * Shows or hides the widget
             */
            toggle = function () {
                return (widget ? hide() : show());
            },

            keydown = function (e) {
                var handler = null,
                    index,
                    index2,
                    pressedKeys = [],
                    pressedModifiers = {},
                    currentKey = e.which,
                    keyBindKeys,
                    allModifiersPressed,
                    pressed = 'p';

                keyState[currentKey] = pressed;

                for (index in keyState) {
                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {
                        pressedKeys.push(index);
                        if (parseInt(index, 10) !== currentKey) {
                            pressedModifiers[index] = true;
                        }
                    }
                }

                for (index in options.keyBinds) {
                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {
                        keyBindKeys = index.split(' ');
                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {
                            allModifiersPressed = true;
                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {
                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {
                                    allModifiersPressed = false;
                                    break;
                                }
                            }
                            if (allModifiersPressed) {
                                handler = options.keyBinds[index];
                                break;
                            }
                        }
                    }
                }

                if (handler) {
                    handler.call(picker, widget);
                    e.stopPropagation();
                    e.preventDefault();
                }
            },

            keyup = function (e) {
                keyState[e.which] = 'r';
                e.stopPropagation();
                e.preventDefault();
            },

            change = function (e) {
                var val = $(e.target).val().trim(),
                    parsedDate = val ? parseInputDate(val) : null;
                setValue(parsedDate);
                e.stopImmediatePropagation();
                return false;
            },

            attachDatePickerElementEvents = function () {
                input.on({
                    'change': change,
                    'blur': options.debug ? '' : hide,
                    'keydown': keydown,
                    'keyup': keyup,
                    'focus': options.allowInputToggle ? show : ''
                });

                if (element.is('input')) {
                    input.on({
                        'focus': show
                    });
                } else if (component) {
                    component.on('click', toggle);
                    component.on('mousedown', false);
                }
            },

            detachDatePickerElementEvents = function () {
                input.off({
                    'change': change,
                    'blur': blur,
                    'keydown': keydown,
                    'keyup': keyup,
                    'focus': options.allowInputToggle ? hide : ''
                });

                if (element.is('input')) {
                    input.off({
                        'focus': show
                    });
                } else if (component) {
                    component.off('click', toggle);
                    component.off('mousedown', false);
                }
            },

            indexGivenDates = function (givenDatesArray) {
                // Store given enabledDates and disabledDates as keys.
                // This way we can check their existence in O(1) time instead of looping through whole array.
                // (for example: options.enabledDates['2014-02-27'] === true)
                var givenDatesIndexed = {};
                $.each(givenDatesArray, function () {
                    var dDate = parseInputDate(this);
                    if (dDate.isValid()) {
                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;
                    }
                });
                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;
            },

            indexGivenHours = function (givenHoursArray) {
                // Store given enabledHours and disabledHours as keys.
                // This way we can check their existence in O(1) time instead of looping through whole array.
                // (for example: options.enabledHours['2014-02-27'] === true)
                var givenHoursIndexed = {};
                $.each(givenHoursArray, function () {
                    givenHoursIndexed[this] = true;
                });
                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;
            },

            initFormatting = function () {
                var format = options.format || 'L LT';

                actualFormat = format.replace(/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {
                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;
                    return newinput.replace(/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740
                        return date.localeData().longDateFormat(formatInput2) || formatInput2;
                    });
                });


                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];
                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {
                    parseFormats.push(actualFormat);
                }

                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\[.*?\]/g, '').indexOf('h') < 1);

                if (isEnabled('y')) {
                    minViewModeNumber = 2;
                }
                if (isEnabled('M')) {
                    minViewModeNumber = 1;
                }
                if (isEnabled('d')) {
                    minViewModeNumber = 0;
                }

                currentViewMode = Math.max(minViewModeNumber, currentViewMode);

                if (!unset) {
                    setValue(date);
                }
            };

        /********************************************************************************
         *
         * Public API functions
         * =====================
         *
         * Important: Do not expose direct references to private objects or the options
         * object to the outer world. Always return a clone when returning values or make
         * a clone when setting a private variable.
         *
         ********************************************************************************/
        picker.destroy = function () {
            ///<summary>Destroys the widget and removes all attached event listeners</summary>
            hide();
            detachDatePickerElementEvents();
            element.removeData('DateTimePicker');
            element.removeData('date');
        };

        picker.toggle = toggle;

        picker.show = show;

        picker.hide = hide;

        picker.disable = function () {
            ///<summary>Disables the input element, the component is attached to, by adding a disabled="true" attribute to it.
            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>
            hide();
            if (component && component.hasClass('btn')) {
                component.addClass('disabled');
            }
            input.prop('disabled', true);
            return picker;
        };

        picker.enable = function () {
            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>
            if (component && component.hasClass('btn')) {
                component.removeClass('disabled');
            }
            input.prop('disabled', false);
            return picker;
        };

        picker.ignoreReadonly = function (ignoreReadonly) {
            if (arguments.length === 0) {
                return options.ignoreReadonly;
            }
            if (typeof ignoreReadonly !== 'boolean') {
                throw new TypeError('ignoreReadonly () expects a boolean parameter');
            }
            options.ignoreReadonly = ignoreReadonly;
            return picker;
        };

        picker.options = function (newOptions) {
            if (arguments.length === 0) {
                return $.extend(true, {}, options);
            }

            if (!(newOptions instanceof Object)) {
                throw new TypeError('options() options parameter should be an object');
            }
            $.extend(true, options, newOptions);
            $.each(options, function (key, value) {
                if (picker[key] !== undefined) {
                    picker[key](value);
                } else {
                    throw new TypeError('option ' + key + ' is not recognized!');
                }
            });
            return picker;
        };

        picker.date = function (newDate) {
            ///<signature helpKeyword="$.fn.datetimepicker.date">
            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>
            ///<returns type="Moment">date.clone()</returns>
            ///</signature>
            ///<signature>
            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>
            ///<param name="newDate" locid="$.fn.datetimepicker.date_p:newDate">Takes string, Date, moment, null parameter.</param>
            ///</signature>
            if (arguments.length === 0) {
                if (unset) {
                    return null;
                }
                return date.clone();
            }

            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {
                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');
            }

            setValue(newDate === null ? null : parseInputDate(newDate));
            return picker;
        };

        picker.format = function (newFormat) {
            ///<summary>test su</summary>
            ///<param name="newFormat">info about para</param>
            ///<returns type="string|boolean">returns foo</returns>
            if (arguments.length === 0) {
                return options.format;
            }

            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {
                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);
            }

            options.format = newFormat;
            if (actualFormat) {
                initFormatting(); // reinit formatting
            }
            return picker;
        };

        picker.timeZone = function (newZone) {
            if (arguments.length === 0) {
                return options.timeZone;
            }

            if (typeof newZone !== 'string') {
                throw new TypeError('newZone() expects a string parameter');
            }

            options.timeZone = newZone;

            return picker;
        };

        picker.dayViewHeaderFormat = function (newFormat) {
            if (arguments.length === 0) {
                return options.dayViewHeaderFormat;
            }

            if (typeof newFormat !== 'string') {
                throw new TypeError('dayViewHeaderFormat() expects a string parameter');
            }

            options.dayViewHeaderFormat = newFormat;
            return picker;
        };

        picker.extraFormats = function (formats) {
            if (arguments.length === 0) {
                return options.extraFormats;
            }

            if (formats !== false && !(formats instanceof Array)) {
                throw new TypeError('extraFormats() expects an array or false parameter');
            }

            options.extraFormats = formats;
            if (parseFormats) {
                initFormatting(); // reinit formatting
            }
            return picker;
        };

        picker.disabledDates = function (dates) {
            ///<signature helpKeyword="$.fn.datetimepicker.disabledDates">
            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>
            ///<returns type="array">options.disabledDates</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of
            ///options.enabledDates if such exist.</summary>
            ///<param name="dates" locid="$.fn.datetimepicker.disabledDates_p:dates">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);
            }

            if (!dates) {
                options.disabledDates = false;
                update();
                return picker;
            }
            if (!(dates instanceof Array)) {
                throw new TypeError('disabledDates() expects an array parameter');
            }
            options.disabledDates = indexGivenDates(dates);
            options.enabledDates = false;
            update();
            return picker;
        };

        picker.enabledDates = function (dates) {
            ///<signature helpKeyword="$.fn.datetimepicker.enabledDates">
            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>
            ///<returns type="array">options.enabledDates</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>
            ///<param name="dates" locid="$.fn.datetimepicker.enabledDates_p:dates">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);
            }

            if (!dates) {
                options.enabledDates = false;
                update();
                return picker;
            }
            if (!(dates instanceof Array)) {
                throw new TypeError('enabledDates() expects an array parameter');
            }
            options.enabledDates = indexGivenDates(dates);
            options.disabledDates = false;
            update();
            return picker;
        };

        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {
            if (arguments.length === 0) {
                return options.daysOfWeekDisabled.splice(0);
            }

            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {
                options.daysOfWeekDisabled = false;
                update();
                return picker;
            }

            if (!(daysOfWeekDisabled instanceof Array)) {
                throw new TypeError('daysOfWeekDisabled() expects an array parameter');
            }
            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {
                currentValue = parseInt(currentValue, 10);
                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {
                    return previousValue;
                }
                if (previousValue.indexOf(currentValue) === -1) {
                    previousValue.push(currentValue);
                }
                return previousValue;
            }, []).sort();
            if (options.useCurrent && !options.keepInvalid) {
                var tries = 0;
                while (!isValid(date, 'd')) {
                    date.add(1, 'd');
                    if (tries === 31) {
                        throw 'Tried 31 times to find a valid date';
                    }
                    tries++;
                }
                setValue(date);
            }
            update();
            return picker;
        };

        picker.maxDate = function (maxDate) {
            if (arguments.length === 0) {
                return options.maxDate ? options.maxDate.clone() : options.maxDate;
            }

            if ((typeof maxDate === 'boolean') && maxDate === false) {
                options.maxDate = false;
                update();
                return picker;
            }

            if (typeof maxDate === 'string') {
                if (maxDate === 'now' || maxDate === 'moment') {
                    maxDate = getMoment();
                }
            }

            var parsedDate = parseInputDate(maxDate);

            if (!parsedDate.isValid()) {
                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);
            }
            if (options.minDate && parsedDate.isBefore(options.minDate)) {
                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));
            }
            options.maxDate = parsedDate;
            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {
                setValue(options.maxDate);
            }
            if (viewDate.isAfter(parsedDate)) {
                viewDate = parsedDate.clone().subtract(options.stepping, 'm');
            }
            update();
            return picker;
        };

        picker.minDate = function (minDate) {
            if (arguments.length === 0) {
                return options.minDate ? options.minDate.clone() : options.minDate;
            }

            if ((typeof minDate === 'boolean') && minDate === false) {
                options.minDate = false;
                update();
                return picker;
            }

            if (typeof minDate === 'string') {
                if (minDate === 'now' || minDate === 'moment') {
                    minDate = getMoment();
                }
            }

            var parsedDate = parseInputDate(minDate);

            if (!parsedDate.isValid()) {
                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);
            }
            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {
                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));
            }
            options.minDate = parsedDate;
            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {
                setValue(options.minDate);
            }
            if (viewDate.isBefore(parsedDate)) {
                viewDate = parsedDate.clone().add(options.stepping, 'm');
            }
            update();
            return picker;
        };

        picker.defaultDate = function (defaultDate) {
            ///<signature helpKeyword="$.fn.datetimepicker.defaultDate">
            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>
            ///<returns type="Moment">date.clone()</returns>
            ///</signature>
            ///<signature>
            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>
            ///<param name="defaultDate" locid="$.fn.datetimepicker.defaultDate_p:defaultDate">Takes a string, Date, moment, boolean:false</param>
            ///</signature>
            if (arguments.length === 0) {
                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;
            }
            if (!defaultDate) {
                options.defaultDate = false;
                return picker;
            }

            if (typeof defaultDate === 'string') {
                if (defaultDate === 'now' || defaultDate === 'moment') {
                    defaultDate = getMoment();
                } else {
                    defaultDate = getMoment(defaultDate);
                }
            }

            var parsedDate = parseInputDate(defaultDate);
            if (!parsedDate.isValid()) {
                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);
            }
            if (!isValid(parsedDate)) {
                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');
            }

            options.defaultDate = parsedDate;

            if ((options.defaultDate && options.inline) || input.val().trim() === '') {
                setValue(options.defaultDate);
            }
            return picker;
        };

        picker.locale = function (locale) {
            if (arguments.length === 0) {
                return options.locale;
            }

            if (!moment.localeData(locale)) {
                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');
            }

            options.locale = locale;
            date.locale(options.locale);
            viewDate.locale(options.locale);

            if (actualFormat) {
                initFormatting(); // reinit formatting
            }
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.stepping = function (stepping) {
            if (arguments.length === 0) {
                return options.stepping;
            }

            stepping = parseInt(stepping, 10);
            if (isNaN(stepping) || stepping < 1) {
                stepping = 1;
            }
            options.stepping = stepping;
            return picker;
        };

        picker.useCurrent = function (useCurrent) {
            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];
            if (arguments.length === 0) {
                return options.useCurrent;
            }

            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {
                throw new TypeError('useCurrent() expects a boolean or string parameter');
            }
            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {
                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));
            }
            options.useCurrent = useCurrent;
            return picker;
        };

        picker.collapse = function (collapse) {
            if (arguments.length === 0) {
                return options.collapse;
            }

            if (typeof collapse !== 'boolean') {
                throw new TypeError('collapse() expects a boolean parameter');
            }
            if (options.collapse === collapse) {
                return picker;
            }
            options.collapse = collapse;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.icons = function (icons) {
            if (arguments.length === 0) {
                return $.extend({}, options.icons);
            }

            if (!(icons instanceof Object)) {
                throw new TypeError('icons() expects parameter to be an Object');
            }
            $.extend(options.icons, icons);
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.tooltips = function (tooltips) {
            if (arguments.length === 0) {
                return $.extend({}, options.tooltips);
            }

            if (!(tooltips instanceof Object)) {
                throw new TypeError('tooltips() expects parameter to be an Object');
            }
            $.extend(options.tooltips, tooltips);
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.useStrict = function (useStrict) {
            if (arguments.length === 0) {
                return options.useStrict;
            }

            if (typeof useStrict !== 'boolean') {
                throw new TypeError('useStrict() expects a boolean parameter');
            }
            options.useStrict = useStrict;
            return picker;
        };

        picker.sideBySide = function (sideBySide) {
            if (arguments.length === 0) {
                return options.sideBySide;
            }

            if (typeof sideBySide !== 'boolean') {
                throw new TypeError('sideBySide() expects a boolean parameter');
            }
            options.sideBySide = sideBySide;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.viewMode = function (viewMode) {
            if (arguments.length === 0) {
                return options.viewMode;
            }

            if (typeof viewMode !== 'string') {
                throw new TypeError('viewMode() expects a string parameter');
            }

            if (viewModes.indexOf(viewMode) === -1) {
                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');
            }

            options.viewMode = viewMode;
            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);

            showMode();
            return picker;
        };

        picker.toolbarPlacement = function (toolbarPlacement) {
            if (arguments.length === 0) {
                return options.toolbarPlacement;
            }

            if (typeof toolbarPlacement !== 'string') {
                throw new TypeError('toolbarPlacement() expects a string parameter');
            }
            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {
                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');
            }
            options.toolbarPlacement = toolbarPlacement;

            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.widgetPositioning = function (widgetPositioning) {
            if (arguments.length === 0) {
                return $.extend({}, options.widgetPositioning);
            }

            if (({}).toString.call(widgetPositioning) !== '[object Object]') {
                throw new TypeError('widgetPositioning() expects an object variable');
            }
            if (widgetPositioning.horizontal) {
                if (typeof widgetPositioning.horizontal !== 'string') {
                    throw new TypeError('widgetPositioning() horizontal variable must be a string');
                }
                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();
                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {
                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');
                }
                options.widgetPositioning.horizontal = widgetPositioning.horizontal;
            }
            if (widgetPositioning.vertical) {
                if (typeof widgetPositioning.vertical !== 'string') {
                    throw new TypeError('widgetPositioning() vertical variable must be a string');
                }
                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();
                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {
                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');
                }
                options.widgetPositioning.vertical = widgetPositioning.vertical;
            }
            update();
            return picker;
        };

        picker.calendarWeeks = function (calendarWeeks) {
            if (arguments.length === 0) {
                return options.calendarWeeks;
            }

            if (typeof calendarWeeks !== 'boolean') {
                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');
            }

            options.calendarWeeks = calendarWeeks;
            update();
            return picker;
        };

        picker.showTodayButton = function (showTodayButton) {
            if (arguments.length === 0) {
                return options.showTodayButton;
            }

            if (typeof showTodayButton !== 'boolean') {
                throw new TypeError('showTodayButton() expects a boolean parameter');
            }

            options.showTodayButton = showTodayButton;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.showClear = function (showClear) {
            if (arguments.length === 0) {
                return options.showClear;
            }

            if (typeof showClear !== 'boolean') {
                throw new TypeError('showClear() expects a boolean parameter');
            }

            options.showClear = showClear;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.widgetParent = function (widgetParent) {
            if (arguments.length === 0) {
                return options.widgetParent;
            }

            if (typeof widgetParent === 'string') {
                widgetParent = $(widgetParent);
            }

            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {
                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');
            }

            options.widgetParent = widgetParent;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.keepOpen = function (keepOpen) {
            if (arguments.length === 0) {
                return options.keepOpen;
            }

            if (typeof keepOpen !== 'boolean') {
                throw new TypeError('keepOpen() expects a boolean parameter');
            }

            options.keepOpen = keepOpen;
            return picker;
        };

        picker.focusOnShow = function (focusOnShow) {
            if (arguments.length === 0) {
                return options.focusOnShow;
            }

            if (typeof focusOnShow !== 'boolean') {
                throw new TypeError('focusOnShow() expects a boolean parameter');
            }

            options.focusOnShow = focusOnShow;
            return picker;
        };

        picker.inline = function (inline) {
            if (arguments.length === 0) {
                return options.inline;
            }

            if (typeof inline !== 'boolean') {
                throw new TypeError('inline() expects a boolean parameter');
            }

            options.inline = inline;
            return picker;
        };

        picker.clear = function () {
            clear();
            return picker;
        };

        picker.keyBinds = function (keyBinds) {
            if (arguments.length === 0) {
                return options.keyBinds;
            }

            options.keyBinds = keyBinds;
            return picker;
        };

        picker.getMoment = function (d) {
            return getMoment(d);
        };

        picker.debug = function (debug) {
            if (typeof debug !== 'boolean') {
                throw new TypeError('debug() expects a boolean parameter');
            }

            options.debug = debug;
            return picker;
        };

        picker.allowInputToggle = function (allowInputToggle) {
            if (arguments.length === 0) {
                return options.allowInputToggle;
            }

            if (typeof allowInputToggle !== 'boolean') {
                throw new TypeError('allowInputToggle() expects a boolean parameter');
            }

            options.allowInputToggle = allowInputToggle;
            return picker;
        };

        picker.showClose = function (showClose) {
            if (arguments.length === 0) {
                return options.showClose;
            }

            if (typeof showClose !== 'boolean') {
                throw new TypeError('showClose() expects a boolean parameter');
            }

            options.showClose = showClose;
            return picker;
        };

        picker.keepInvalid = function (keepInvalid) {
            if (arguments.length === 0) {
                return options.keepInvalid;
            }

            if (typeof keepInvalid !== 'boolean') {
                throw new TypeError('keepInvalid() expects a boolean parameter');
            }
            options.keepInvalid = keepInvalid;
            return picker;
        };

        picker.datepickerInput = function (datepickerInput) {
            if (arguments.length === 0) {
                return options.datepickerInput;
            }

            if (typeof datepickerInput !== 'string') {
                throw new TypeError('datepickerInput() expects a string parameter');
            }

            options.datepickerInput = datepickerInput;
            return picker;
        };

        picker.parseInputDate = function (parseInputDate) {
            if (arguments.length === 0) {
                return options.parseInputDate;
            }

            if (typeof parseInputDate !== 'function') {
                throw new TypeError('parseInputDate() sholud be as function');
            }

            options.parseInputDate = parseInputDate;

            return picker;
        };

        picker.disabledTimeIntervals = function (disabledTimeIntervals) {
            ///<signature helpKeyword="$.fn.datetimepicker.disabledTimeIntervals">
            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>
            ///<returns type="array">options.disabledTimeIntervals</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of
            ///options.enabledDates if such exist.</summary>
            ///<param name="dates" locid="$.fn.datetimepicker.disabledTimeIntervals_p:dates">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);
            }

            if (!disabledTimeIntervals) {
                options.disabledTimeIntervals = false;
                update();
                return picker;
            }
            if (!(disabledTimeIntervals instanceof Array)) {
                throw new TypeError('disabledTimeIntervals() expects an array parameter');
            }
            options.disabledTimeIntervals = disabledTimeIntervals;
            update();
            return picker;
        };

        picker.disabledHours = function (hours) {
            ///<signature helpKeyword="$.fn.datetimepicker.disabledHours">
            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>
            ///<returns type="array">options.disabledHours</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of
            ///options.enabledHours if such exist.</summary>
            ///<param name="hours" locid="$.fn.datetimepicker.disabledHours_p:hours">Takes an [ int ] of values and disallows the user to select only from those hours.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);
            }

            if (!hours) {
                options.disabledHours = false;
                update();
                return picker;
            }
            if (!(hours instanceof Array)) {
                throw new TypeError('disabledHours() expects an array parameter');
            }
            options.disabledHours = indexGivenHours(hours);
            options.enabledHours = false;
            if (options.useCurrent && !options.keepInvalid) {
                var tries = 0;
                while (!isValid(date, 'h')) {
                    date.add(1, 'h');
                    if (tries === 24) {
                        throw 'Tried 24 times to find a valid date';
                    }
                    tries++;
                }
                setValue(date);
            }
            update();
            return picker;
        };

        picker.enabledHours = function (hours) {
            ///<signature helpKeyword="$.fn.datetimepicker.enabledHours">
            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>
            ///<returns type="array">options.enabledHours</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>
            ///<param name="hours" locid="$.fn.datetimepicker.enabledHours_p:hours">Takes an [ int ] of values and allows the user to select only from those hours.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);
            }

            if (!hours) {
                options.enabledHours = false;
                update();
                return picker;
            }
            if (!(hours instanceof Array)) {
                throw new TypeError('enabledHours() expects an array parameter');
            }
            options.enabledHours = indexGivenHours(hours);
            options.disabledHours = false;
            if (options.useCurrent && !options.keepInvalid) {
                var tries = 0;
                while (!isValid(date, 'h')) {
                    date.add(1, 'h');
                    if (tries === 24) {
                        throw 'Tried 24 times to find a valid date';
                    }
                    tries++;
                }
                setValue(date);
            }
            update();
            return picker;
        };
        /**
         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.
         * @param {Takes string, viewDate, moment, null parameter.} newDate
         * @returns {viewDate.clone()}
         */
        picker.viewDate = function (newDate) {
            if (arguments.length === 0) {
                return viewDate.clone();
            }

            if (!newDate) {
                viewDate = date.clone();
                return picker;
            }

            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {
                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');
            }

            viewDate = parseInputDate(newDate);
            viewUpdate();
            return picker;
        };

        // initializing element and component attributes
        if (element.is('input')) {
            input = element;
        } else {
            input = element.find(options.datepickerInput);
            if (input.length === 0) {
                input = element.find('input');
            } else if (!input.is('input')) {
                throw new Error('CSS class "' + options.datepickerInput + '" cannot be applied to non input element');
            }
        }

        if (element.hasClass('input-group')) {
            // in case there is more then one 'input-group-addon' Issue #48
            if (element.find('.datepickerbutton').length === 0) {
                component = element.find('.input-group-addon');
            } else {
                component = element.find('.datepickerbutton');
            }
        }

        if (!options.inline && !input.is('input')) {
            throw new Error('Could not initialize DateTimePicker without an input element');
        }

        // Set defaults for date here now instead of in var declaration
        date = getMoment();
        viewDate = date.clone();

        $.extend(true, options, dataToOptions());

        picker.options(options);

        initFormatting();

        attachDatePickerElementEvents();

        if (input.prop('disabled')) {
            picker.disable();
        }
        if (input.is('input') && input.val().trim().length !== 0) {
            setValue(parseInputDate(input.val().trim()));
        }
        else if (options.defaultDate && input.attr('placeholder') === undefined) {
            setValue(options.defaultDate);
        }
        if (options.inline) {
            show();
        }
        return picker;
    };

    /********************************************************************************
     *
     * jQuery plugin constructor and defaults object
     *
     ********************************************************************************/

    /**
    * See (http://jquery.com/).
    * @name jQuery
    * @class
    * See the jQuery Library  (http://jquery.com/) for full details.  This just
    * documents the function and classes that are added to jQuery by this plug-in.
    */
    /**
     * See (http://jquery.com/)
     * @name fn
     * @class
     * See the jQuery Library  (http://jquery.com/) for full details.  This just
     * documents the function and classes that are added to jQuery by this plug-in.
     * @memberOf jQuery
     */
    /**
     * Show comments
     * @class datetimepicker
     * @memberOf jQuery.fn
     */
    $.fn.datetimepicker = function (options) {
        options = options || {};

        var args = Array.prototype.slice.call(arguments, 1),
            isInstance = true,
            thisMethods = ['destroy', 'hide', 'show', 'toggle'],
            returnValue;

        if (typeof options === 'object') {
            return this.each(function () {
                var $this = $(this),
                    _options;
                if (!$this.data('DateTimePicker')) {
                    // create a private copy of the defaults object
                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);
                    $this.data('DateTimePicker', dateTimePicker($this, _options));
                }
            });
        } else if (typeof options === 'string') {
            this.each(function () {
                var $this = $(this),
                    instance = $this.data('DateTimePicker');
                if (!instance) {
                    throw new Error('bootstrap-datetimepicker("' + options + '") method was called on an element that is not using DateTimePicker');
                }

                returnValue = instance[options].apply(instance, args);
                isInstance = returnValue === instance;
            });

            if (isInstance || $.inArray(options, thisMethods) > -1) {
                return this;
            }

            return returnValue;
        }

        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);
    };

    $.fn.datetimepicker.defaults = {
        timeZone: '',
        format: false,
        dayViewHeaderFormat: 'MMMM YYYY',
        extraFormats: false,
        stepping: 1,
        minDate: false,
        maxDate: false,
        useCurrent: true,
        collapse: true,
        locale: moment.locale(),
        defaultDate: false,
        disabledDates: false,
        enabledDates: false,
        icons: {
            time: 'glyphicon glyphicon-time',
            date: 'glyphicon glyphicon-calendar',
            up: 'glyphicon glyphicon-chevron-up',
            down: 'glyphicon glyphicon-chevron-down',
            previous: 'glyphicon glyphicon-chevron-left',
            next: 'glyphicon glyphicon-chevron-right',
            today: 'glyphicon glyphicon-screenshot',
            clear: 'glyphicon glyphicon-trash',
            close: 'glyphicon glyphicon-remove'
        },
        tooltips: {
            today: 'Go to today',
            clear: 'Clear selection',
            close: 'Close the picker',
            selectMonth: 'Select Month',
            prevMonth: 'Previous Month',
            nextMonth: 'Next Month',
            selectYear: 'Select Year',
            prevYear: 'Previous Year',
            nextYear: 'Next Year',
            selectDecade: 'Select Decade',
            prevDecade: 'Previous Decade',
            nextDecade: 'Next Decade',
            prevCentury: 'Previous Century',
            nextCentury: 'Next Century',
            pickHour: 'Pick Hour',
            incrementHour: 'Increment Hour',
            decrementHour: 'Decrement Hour',
            pickMinute: 'Pick Minute',
            incrementMinute: 'Increment Minute',
            decrementMinute: 'Decrement Minute',
            pickSecond: 'Pick Second',
            incrementSecond: 'Increment Second',
            decrementSecond: 'Decrement Second',
            togglePeriod: 'Toggle Period',
            selectTime: 'Select Time'
        },
        useStrict: false,
        sideBySide: false,
        daysOfWeekDisabled: false,
        calendarWeeks: false,
        viewMode: 'days',
        toolbarPlacement: 'default',
        showTodayButton: false,
        showClear: false,
        showClose: false,
        widgetPositioning: {
            horizontal: 'auto',
            vertical: 'auto'
        },
        widgetParent: null,
        ignoreReadonly: false,
        keepOpen: false,
        focusOnShow: true,
        inline: false,
        keepInvalid: false,
        datepickerInput: '.datepickerinput',
        keyBinds: {
            up: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(7, 'd'));
                } else {
                    this.date(d.clone().add(this.stepping(), 'm'));
                }
            },
            down: function (widget) {
                if (!widget) {
                    this.show();
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(7, 'd'));
                } else {
                    this.date(d.clone().subtract(this.stepping(), 'm'));
                }
            },
            'control up': function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(1, 'y'));
                } else {
                    this.date(d.clone().add(1, 'h'));
                }
            },
            'control down': function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(1, 'y'));
                } else {
                    this.date(d.clone().subtract(1, 'h'));
                }
            },
            left: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(1, 'd'));
                }
            },
            right: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(1, 'd'));
                }
            },
            pageUp: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(1, 'M'));
                }
            },
            pageDown: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(1, 'M'));
                }
            },
            enter: function () {
                this.hide();
            },
            escape: function () {
                this.hide();
            },
            //tab: function (widget) { //this break the flow of the form. disabling for now
            //    var toggle = widget.find('.picker-switch a[data-action="togglePicker"]');
            //    if(toggle.length > 0) toggle.click();
            //},
            'control space': function (widget) {
                if (!widget) {
                    return;
                }
                if (widget.find('.timepicker').is(':visible')) {
                    widget.find('.btn[data-action="togglePeriod"]').click();
                }
            },
            t: function () {
                this.date(this.getMoment());
            },
            'delete': function () {
                this.clear();
            }
        },
        debug: false,
        allowInputToggle: false,
        disabledTimeIntervals: false,
        disabledHours: false,
        enabledHours: false,
        viewDate: false
    };

    return $.fn.datetimepicker;
}));


/***/ }),

/***/ "./node_modules/lang.js/src/lang.js":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 *  Lang.js for Laravel localization in JavaScript.
 *
 *  @version 1.1.12
 *  @license MIT https://github.com/rmariuzzo/Lang.js/blob/master/LICENSE
 *  @site    https://github.com/rmariuzzo/Lang.js
 *  @author  Rubens Mariuzzo <rubens@mariuzzo.com>
 */

(function(root, factory) {
    'use strict';

    if (true) {
        // AMD support.
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof exports === 'object') {
        // NodeJS support.
        module.exports = factory();
    } else {
        // Browser global support.
        root.Lang = factory();
    }

}(this, function() {
    'use strict';

    function inferLocale() {
        if (typeof document !== 'undefined' && document.documentElement) {
            return document.documentElement.lang;
        }
    };

    function convertNumber(str) {
        if (str === '-Inf') {
            return -Infinity;
        } else if (str === '+Inf' || str === 'Inf' || str === '*') {
            return Infinity;
        }
        return parseInt(str, 10);
    }

    // Derived from: https://github.com/symfony/translation/blob/460390765eb7bb9338a4a323b8a4e815a47541ba/Interval.php
    var intervalRegexp = /^({\s*(\-?\d+(\.\d+)?[\s*,\s*\-?\d+(\.\d+)?]*)\s*})|([\[\]])\s*(-Inf|\*|\-?\d+(\.\d+)?)\s*,\s*(\+?Inf|\*|\-?\d+(\.\d+)?)\s*([\[\]])$/;
    var anyIntervalRegexp = /({\s*(\-?\d+(\.\d+)?[\s*,\s*\-?\d+(\.\d+)?]*)\s*})|([\[\]])\s*(-Inf|\*|\-?\d+(\.\d+)?)\s*,\s*(\+?Inf|\*|\-?\d+(\.\d+)?)\s*([\[\]])/;

    // Default options //

    var defaults = {
        locale: 'en'/** The default locale if not set. */
    };

    // Constructor //

    var Lang = function(options) {
        options = options || {};
        this.locale = options.locale || inferLocale() || defaults.locale;
        this.fallback = options.fallback;
        this.messages = options.messages;
    };

    // Methods //

    /**
     * Set messages source.
     *
     * @param messages {object} The messages source.
     *
     * @return void
     */
    Lang.prototype.setMessages = function(messages) {
        this.messages = messages;
    };

    /**
     * Get the current locale.
     *
     * @return {string} The current locale.
     */
    Lang.prototype.getLocale = function() {
        return this.locale || this.fallback;
    };

    /**
     * Set the current locale.
     *
     * @param locale {string} The locale to set.
     *
     * @return void
     */
    Lang.prototype.setLocale = function(locale) {
        this.locale = locale;
    };

    /**
     * Get the fallback locale being used.
     *
     * @return void
     */
    Lang.prototype.getFallback = function() {
        return this.fallback;
    };

    /**
     * Set the fallback locale being used.
     *
     * @param fallback {string} The fallback locale.
     *
     * @return void
     */
    Lang.prototype.setFallback = function(fallback) {
        this.fallback = fallback;
    };

    /**
     * This method act as an alias to get() method.
     *
     * @param key {string} The key of the message.
     * @param locale {string} The locale of the message
     *
     * @return {boolean} true if the given key is defined on the messages source, otherwise false.
     */
    Lang.prototype.has = function(key, locale) {
        if (typeof key !== 'string' || !this.messages) {
            return false;
        }

        return this._getMessage(key, locale) !== null;
    };

    /**
     * Get a translation message.
     *
     * @param key {string} The key of the message.
     * @param replacements {object} The replacements to be done in the message.
     * @param locale {string} The locale to use, if not passed use the default locale.
     *
     * @return {string} The translation message, if not found the given key.
     */
    Lang.prototype.get = function(key, replacements, locale) {
        if (!this.has(key, locale)) {
            return key;
        }

        var message = this._getMessage(key, locale);
        if (message === null) {
            return key;
        }

        if (replacements) {
            message = this._applyReplacements(message, replacements);
        }

        return message;
    };

    /**
     * This method act as an alias to get() method.
     *
     * @param key {string} The key of the message.
     * @param replacements {object} The replacements to be done in the message.
     *
     * @return {string} The translation message, if not found the given key.
     */
    Lang.prototype.trans = function(key, replacements) {
        return this.get(key, replacements);
    };

    /**
     * Gets the plural or singular form of the message specified based on an integer value.
     *
     * @param key {string} The key of the message.
     * @param count {number} The number of elements.
     * @param replacements {object} The replacements to be done in the message.
     * @param locale {string} The locale to use, if not passed use the default locale.
     *
     * @return {string} The translation message according to an integer value.
     */
    Lang.prototype.choice = function(key, number, replacements, locale) {
        // Set default values for parameters replace and locale
        replacements = typeof replacements !== 'undefined'
            ? replacements
            : {};

        // The count must be replaced if found in the message
        replacements.count = number;

        // Message to get the plural or singular
        var message = this.get(key, replacements, locale);

        // Check if message is not null or undefined
        if (message === null || message === undefined) {
            return message;
        }

        // Separate the plural from the singular, if any
        var messageParts = message.split('|');

        // Get the explicit rules, If any
        var explicitRules = [];

        for (var i = 0; i < messageParts.length; i++) {
            messageParts[i] = messageParts[i].trim();

            if (anyIntervalRegexp.test(messageParts[i])) {
                var messageSpaceSplit = messageParts[i].split(/\s/);
                explicitRules.push(messageSpaceSplit.shift());
                messageParts[i] = messageSpaceSplit.join(' ');
            }
        }

        // Check if there's only one message
        if (messageParts.length === 1) {
            // Nothing to do here
            return message;
        }

        // Check the explicit rules
        for (var j = 0; j < explicitRules.length; j++) {
            if (this._testInterval(number, explicitRules[j])) {
                return messageParts[j];
            }
        }

        locale = locale || this._getLocale(key);
        var pluralForm = this._getPluralForm(number, locale);

        return messageParts[pluralForm];
    };

    /**
     * This method act as an alias to choice() method.
     *
     * @param key {string} The key of the message.
     * @param count {number} The number of elements.
     * @param replacements {object} The replacements to be done in the message.
     *
     * @return {string} The translation message according to an integer value.
     */
    Lang.prototype.transChoice = function(key, count, replacements) {
        return this.choice(key, count, replacements);
    };

    /**
     * Parse a message key into components.
     *
     * @param key {string} The message key to parse.
     * @param key {string} The message locale to parse
     * @return {object} A key object with source and entries properties.
     */
    Lang.prototype._parseKey = function(key, locale) {
        if (typeof key !== 'string' || typeof locale !== 'string') {
            return null;
        }

        var segments = key.split('.');
        var source = segments[0].replace(/\//g, '.');

        return {
            source: locale + '.' + source,
            sourceFallback: this.getFallback() + '.' + source,
            entries: segments.slice(1)
        };
    };

    /**
     * Returns a translation message. Use `Lang.get()` method instead, this methods assumes the key exists.
     *
     * @param key {string} The key of the message.
     * @param locale {string} The locale of the message
     *
     * @return {string} The translation message for the given key.
     */
    Lang.prototype._getMessage = function(key, locale) {
        locale = locale || this.getLocale();
        
        key = this._parseKey(key, locale);

        // Ensure message source exists.
        if (this.messages[key.source] === undefined && this.messages[key.sourceFallback] === undefined) {
            return null;
        }

        // Get message from default locale.
        var message = this.messages[key.source];
        var entries = key.entries.slice();
        var subKey = entries.join('.');
        message = message !== undefined ? this._getValueInKey(message, subKey) : undefined;


        // Get message from fallback locale.
        if (typeof message !== 'string' && this.messages[key.sourceFallback]) {
            message = this.messages[key.sourceFallback];
            entries = key.entries.slice();
            subKey = '';
            while (entries.length && message !== undefined) {
                var subKey = !subKey ? entries.shift() : subKey.concat('.', entries.shift());
                if (message[subKey]) {
                    message = message[subKey]
                    subKey = '';
                }
            }
        }

        if (typeof message !== 'string') {
            return null;
        }

        return message;
    };

    Lang.prototype._getValueInKey = function(obj, str) {
        // If the full key exists just return the value
        if (typeof obj[str] === 'string') {
            return obj[str]
        }

        str = str.replace(/\[(\w+)\]/g, '.$1'); // convert indexes to properties
        str = str.replace(/^\./, '');           // strip a leading dot

        var parts = str.split('.');

        for (var i = 0, n = parts.length; i < n; ++i) {
            var currentKey = parts.slice(0, i + 1).join('.');
            var restOfTheKey = parts.slice(i + 1, parts.length).join('.')
            
            if (obj[currentKey]) {
                return this._getValueInKey(obj[currentKey], restOfTheKey)
            }
        }

        return obj;
    };

    /**
     * Return the locale to be used between default and fallback.
     * @param {String} key
     * @return {String}
     */
    Lang.prototype._getLocale = function(key) {
        key = this._parseKey(key, this.locale)
        if (this.messages[key.source]) {
            return this.locale;
        }
        if (this.messages[key.sourceFallback]) {
            return this.fallback;
        }
        return null;
    };

    /**
     * Find a message in a translation tree using both dotted keys and regular ones
     *
     * @param pathSegments {array} An array of path segments such as ['family', 'father']
     * @param tree {object} The translation tree
     */
    Lang.prototype._findMessageInTree = function(pathSegments, tree) {
        while (pathSegments.length && tree !== undefined) {
            var dottedKey = pathSegments.join('.');
            if (tree[dottedKey]) {
                tree = tree[dottedKey];
                break;
            }

            tree = tree[pathSegments.shift()]
        }

        return tree;
    };

    /**
     * Sort replacement keys by length in descending order.
     *
     * @param a {string} Replacement key
     * @param b {string} Sibling replacement key
     * @return {number}
     * @private
     */
    Lang.prototype._sortReplacementKeys = function(a, b) {
        return b.length - a.length;
    };

    /**
     * Apply replacements to a string message containing placeholders.
     *
     * @param message {string} The text message.
     * @param replacements {object} The replacements to be done in the message.
     *
     * @return {string} The string message with replacements applied.
     */
    Lang.prototype._applyReplacements = function(message, replacements) {
        var keys = Object.keys(replacements).sort(this._sortReplacementKeys);

        keys.forEach(function(replace) {
            message = message.replace(new RegExp(':' + replace, 'gi'), function (match) {
                var value = replacements[replace];

                // Capitalize all characters.
                var allCaps = match === match.toUpperCase();
                if (allCaps) {
                    return value.toUpperCase();
                }

                // Capitalize first letter.
                var firstCap = match === match.replace(/\w/i, function(letter) {
                    return letter.toUpperCase();
                });
                if (firstCap) {
                    return value.charAt(0).toUpperCase() + value.slice(1);
                }

                return value;
            })
        });
        return message;
    };

    /**
     * Checks if the given `count` is within the interval defined by the {string} `interval`
     *
     * @param  count     {int}    The amount of items.
     * @param  interval  {string} The interval to be compared with the count.
     * @return {boolean}          Returns true if count is within interval; false otherwise.
     */
    Lang.prototype._testInterval = function(count, interval) {
        /**
         * From the Symfony\Component\Translation\Interval Docs
         *
         * Tests if a given number belongs to a given math interval.
         *
         * An interval can represent a finite set of numbers:
         *
         *  {1,2,3,4}
         *
         * An interval can represent numbers between two numbers:
         *
         *  [1, +Inf]
         *  ]-1,2[
         *
         * The left delimiter can be [ (inclusive) or ] (exclusive).
         * The right delimiter can be [ (exclusive) or ] (inclusive).
         * Beside numbers, you can use -Inf and +Inf for the infinite.
         */

        if (typeof interval !== 'string') {
            throw 'Invalid interval: should be a string.';
        }

        interval = interval.trim();

        var matches = interval.match(intervalRegexp);
        if (!matches) {
            throw 'Invalid interval: ' + interval;
        }

        if (matches[2]) {
            var items = matches[2].split(',');
            for (var i = 0; i < items.length; i++) {
                if (parseInt(items[i], 10) === count) {
                    return true;
                }
            }
        } else {
            // Remove falsy values.
            matches = matches.filter(function(match) {
                return !!match;
            });

            var leftDelimiter = matches[1];
            var leftNumber = convertNumber(matches[2]);
            if (leftNumber === Infinity) {
                leftNumber = -Infinity;
            }
            var rightNumber = convertNumber(matches[3]);
            var rightDelimiter = matches[4];

            return (leftDelimiter === '[' ? count >= leftNumber : count > leftNumber)
                && (rightDelimiter === ']' ? count <= rightNumber : count < rightNumber);
        }

        return false;
    };

    /**
     * Returns the plural position to use for the given locale and number.
     *
     * The plural rules are derived from code of the Zend Framework (2010-09-25),
     * which is subject to the new BSD license (http://framework.zend.com/license/new-bsd).
     * Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
     *
     * @param {Number} count
     * @param {String} locale
     * @return {Number}
     */
    Lang.prototype._getPluralForm = function(count, locale) {
        switch (locale) {
            case 'az':
            case 'bo':
            case 'dz':
            case 'id':
            case 'ja':
            case 'jv':
            case 'ka':
            case 'km':
            case 'kn':
            case 'ko':
            case 'ms':
            case 'th':
            case 'tr':
            case 'vi':
            case 'zh':
                return 0;

            case 'af':
            case 'bn':
            case 'bg':
            case 'ca':
            case 'da':
            case 'de':
            case 'el':
            case 'en':
            case 'eo':
            case 'es':
            case 'et':
            case 'eu':
            case 'fa':
            case 'fi':
            case 'fo':
            case 'fur':
            case 'fy':
            case 'gl':
            case 'gu':
            case 'ha':
            case 'he':
            case 'hu':
            case 'is':
            case 'it':
            case 'ku':
            case 'lb':
            case 'ml':
            case 'mn':
            case 'mr':
            case 'nah':
            case 'nb':
            case 'ne':
            case 'nl':
            case 'nn':
            case 'no':
            case 'om':
            case 'or':
            case 'pa':
            case 'pap':
            case 'ps':
            case 'pt':
            case 'so':
            case 'sq':
            case 'sv':
            case 'sw':
            case 'ta':
            case 'te':
            case 'tk':
            case 'ur':
            case 'zu':
                return (count == 1)
                    ? 0
                    : 1;

            case 'am':
            case 'bh':
            case 'fil':
            case 'fr':
            case 'gun':
            case 'hi':
            case 'hy':
            case 'ln':
            case 'mg':
            case 'nso':
            case 'xbr':
            case 'ti':
            case 'wa':
                return ((count === 0) || (count === 1))
                    ? 0
                    : 1;

            case 'be':
            case 'bs':
            case 'hr':
            case 'ru':
            case 'sr':
            case 'uk':
                return ((count % 10 == 1) && (count % 100 != 11))
                    ? 0
                    : (((count % 10 >= 2) && (count % 10 <= 4) && ((count % 100 < 10) || (count % 100 >= 20)))
                        ? 1
                        : 2);

            case 'cs':
            case 'sk':
                return (count == 1)
                    ? 0
                    : (((count >= 2) && (count <= 4))
                        ? 1
                        : 2);

            case 'ga':
                return (count == 1)
                    ? 0
                    : ((count == 2)
                        ? 1
                        : 2);

            case 'lt':
                return ((count % 10 == 1) && (count % 100 != 11))
                    ? 0
                    : (((count % 10 >= 2) && ((count % 100 < 10) || (count % 100 >= 20)))
                        ? 1
                        : 2);

            case 'sl':
                return (count % 100 == 1)
                    ? 0
                    : ((count % 100 == 2)
                        ? 1
                        : (((count % 100 == 3) || (count % 100 == 4))
                            ? 2
                            : 3));

            case 'mk':
                return (count % 10 == 1)
                    ? 0
                    : 1;

            case 'mt':
                return (count == 1)
                    ? 0
                    : (((count === 0) || ((count % 100 > 1) && (count % 100 < 11)))
                        ? 1
                        : (((count % 100 > 10) && (count % 100 < 20))
                            ? 2
                            : 3));

            case 'lv':
                return (count === 0)
                    ? 0
                    : (((count % 10 == 1) && (count % 100 != 11))
                        ? 1
                        : 2);

            case 'pl':
                return (count == 1)
                    ? 0
                    : (((count % 10 >= 2) && (count % 10 <= 4) && ((count % 100 < 12) || (count % 100 > 14)))
                        ? 1
                        : 2);

            case 'cy':
                return (count == 1)
                    ? 0
                    : ((count == 2)
                        ? 1
                        : (((count == 8) || (count == 11))
                            ? 2
                            : 3));

            case 'ro':
                return (count == 1)
                    ? 0
                    : (((count === 0) || ((count % 100 > 0) && (count % 100 < 20)))
                        ? 1
                        : 2);

            case 'ar':
                return (count === 0)
                    ? 0
                    : ((count == 1)
                        ? 1
                        : ((count == 2)
                            ? 2
                            : (((count % 100 >= 3) && (count % 100 <= 10))
                                ? 3
                                : (((count % 100 >= 11) && (count % 100 <= 99))
                                    ? 4
                                    : 5))));

            default:
                return 0;
        }
    };

    return Lang;

}));


/***/ }),

/***/ "./node_modules/moment/locale recursive ^\\.\\/.*$":
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/moment/locale/af.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var af = moment.defineLocale('af', {
        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM : function (input) {
            return /^nm$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Vandag om] LT',
            nextDay : '[Môre om] LT',
            nextWeek : 'dddd [om] LT',
            lastDay : '[Gister om] LT',
            lastWeek : '[Laas] dddd [om] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'oor %s',
            past : '%s gelede',
            s : '\'n paar sekondes',
            ss : '%d sekondes',
            m : '\'n minuut',
            mm : '%d minute',
            h : '\'n uur',
            hh : '%d ure',
            d : '\'n dag',
            dd : '%d dae',
            M : '\'n maand',
            MM : '%d maande',
            y : '\'n jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week : {
            dow : 1, // Maandag is die eerste dag van die week.
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        }
    });

    return af;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-dz.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arDz = moment.defineLocale('ar-dz', {
        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arDz;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-kw.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arKw = moment.defineLocale('ar-kw', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arKw;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-ly.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var arLy = moment.defineLocale('ar-ly', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arLy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-ma.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arMa = moment.defineLocale('ar-ma', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arMa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-sa.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var arSa = moment.defineLocale('ar-sa', {
        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return arSa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-tn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss : '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arTn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var ar = moment.defineLocale('ar', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ar;

})));


/***/ }),

/***/ "./node_modules/moment/locale/az.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment.defineLocale('az', {
        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[sabah saat] LT',
            nextWeek : '[gələn həftə] dddd [saat] LT',
            lastDay : '[dünən] LT',
            lastWeek : '[keçən həftə] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s əvvəl',
            s : 'birneçə saniyə',
            ss : '%d saniyə',
            m : 'bir dəqiqə',
            mm : '%d dəqiqə',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir il',
            yy : '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM : function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return az;

})));


/***/ }),

/***/ "./node_modules/moment/locale/be.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months : {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays : {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'праз %s',
            past : '%s таму',
            s : 'некалькі секунд',
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithPlural,
            hh : relativeTimeWithPlural,
            d : 'дзень',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM : function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return be;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bg.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bg = moment.defineLocale('bg', {
        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Днес в] LT',
            nextDay : '[Утре в] LT',
            nextWeek : 'dddd [в] LT',
            lastDay : '[Вчера в] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'след %s',
            past : 'преди %s',
            s : 'няколко секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дни',
            M : 'месец',
            MM : '%d месеца',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bg;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bm.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bm = moment.defineLocale('bm', {
        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'MMMM [tile] D [san] YYYY',
            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
        },
        calendar : {
            sameDay : '[Bi lɛrɛ] LT',
            nextDay : '[Sini lɛrɛ] LT',
            nextWeek : 'dddd [don lɛrɛ] LT',
            lastDay : '[Kunu lɛrɛ] LT',
            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s kɔnɔ',
            past : 'a bɛ %s bɔ',
            s : 'sanga dama dama',
            ss : 'sekondi %d',
            m : 'miniti kelen',
            mm : 'miniti %d',
            h : 'lɛrɛ kelen',
            hh : 'lɛrɛ %d',
            d : 'tile kelen',
            dd : 'tile %d',
            M : 'kalo kelen',
            MM : 'kalo %d',
            y : 'san kelen',
            yy : 'san %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return bm;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
    numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment.defineLocale('bn', {
        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat : {
            LT : 'A h:mm সময়',
            LTS : 'A h:mm:ss সময়',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm সময়',
            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar : {
            sameDay : '[আজ] LT',
            nextDay : '[আগামীকাল] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[গতকাল] LT',
            lastWeek : '[গত] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s পরে',
            past : '%s আগে',
            s : 'কয়েক সেকেন্ড',
            ss : '%d সেকেন্ড',
            m : 'এক মিনিট',
            mm : '%d মিনিট',
            h : 'এক ঘন্টা',
            hh : '%d ঘন্টা',
            d : 'এক দিন',
            dd : '%d দিন',
            M : 'এক মাস',
            MM : '%d মাস',
            y : 'এক বছর',
            yy : '%d বছর'
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'রাত' && hour >= 4) ||
                    (meridiem === 'দুপুর' && hour < 5) ||
                    meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bo.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
    numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment.defineLocale('bo', {
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[དི་རིང] LT',
            nextDay : '[སང་ཉིན] LT',
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay : '[ཁ་སང] LT',
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ལ་',
            past : '%s སྔན་ལ',
            s : 'ལམ་སང',
            ss : '%d སྐར་ཆ།',
            m : 'སྐར་མ་གཅིག',
            mm : '%d སྐར་མ',
            h : 'ཆུ་ཚོད་གཅིག',
            hh : '%d ཆུ་ཚོད',
            d : 'ཉིན་གཅིག',
            dd : '%d ཉིན་',
            M : 'ཟླ་བ་གཅིག',
            MM : '%d ཟླ་བ',
            y : 'ལོ་གཅིག',
            yy : '%d ལོ'
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
                    meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/br.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment.defineLocale('br', {
        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h[e]mm A',
            LTS : 'h[e]mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [a viz] MMMM YYYY',
            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar : {
            sameDay : '[Hiziv da] LT',
            nextDay : '[Warc\'hoazh da] LT',
            nextWeek : 'dddd [da] LT',
            lastDay : '[Dec\'h da] LT',
            lastWeek : 'dddd [paset da] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'a-benn %s',
            past : '%s \'zo',
            s : 'un nebeud segondennoù',
            ss : '%d eilenn',
            m : 'ur vunutenn',
            mm : relativeTimeWithMutation,
            h : 'un eur',
            hh : '%d eur',
            d : 'un devezh',
            dd : relativeTimeWithMutation,
            M : 'ur miz',
            MM : relativeTimeWithMutation,
            y : 'ur bloaz',
            yy : specialMutationForYears
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal : function (number) {
            var output = (number === 1) ? 'añ' : 'vet';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return br;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bs.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bs;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ca.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ca = moment.defineLocale('ca', {
        months : {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [de] YYYY',
            ll : 'D MMM YYYY',
            LLL : 'D MMMM [de] YYYY [a les] H:mm',
            lll : 'D MMM YYYY, H:mm',
            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll : 'ddd D MMM YYYY, H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextDay : function () {
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastDay : function () {
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'd\'aquí %s',
            past : 'fa %s',
            s : 'uns segons',
            ss : '%d segons',
            m : 'un minut',
            mm : '%d minuts',
            h : 'una hora',
            hh : '%d hores',
            d : 'un dia',
            dd : '%d dies',
            M : 'un mes',
            MM : '%d mesos',
            y : 'un any',
            yy : '%d anys'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal : function (number, period) {
            var output = (number === 1) ? 'r' :
                (number === 2) ? 'n' :
                (number === 3) ? 'r' :
                (number === 4) ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ca;

})));


/***/ }),

/***/ "./node_modules/moment/locale/cs.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');

    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];
    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

    function plural(n) {
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment.defineLocale('cs', {
        months : months,
        monthsShort : monthsShort,
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm',
            l : 'D. M. YYYY'
        },
        calendar : {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'před %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse : /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cs;

})));


/***/ }),

/***/ "./node_modules/moment/locale/cv.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cv = moment.defineLocale('cv', {
        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar : {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime : {
            future : function (output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past : '%s каялла',
            s : 'пӗр-ик ҫеккунт',
            ss : '%d ҫеккунт',
            m : 'пӗр минут',
            mm : '%d минут',
            h : 'пӗр сехет',
            hh : '%d сехет',
            d : 'пӗр кун',
            dd : '%d кун',
            M : 'пӗр уйӑх',
            MM : '%d уйӑх',
            y : 'пӗр ҫул',
            yy : '%d ҫул'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal : '%d-мӗш',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return cv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/cy.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/da.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var da = moment.defineLocale('da', {
        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay : '[i dag kl.] LT',
            nextDay : '[i morgen kl.] LT',
            nextWeek : 'på dddd [kl.] LT',
            lastDay : '[i går kl.] LT',
            lastWeek : '[i] dddd[s kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'få sekunder',
            ss : '%d sekunder',
            m : 'et minut',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dage',
            M : 'en måned',
            MM : '%d måneder',
            y : 'et år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return da;

})));


/***/ }),

/***/ "./node_modules/moment/locale/de-at.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deAt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/de-ch.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deCh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/de.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return de;

})));


/***/ }),

/***/ "./node_modules/moment/locale/dv.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'ޖެނުއަރީ',
        'ފެބްރުއަރީ',
        'މާރިޗު',
        'އޭޕްރީލު',
        'މޭ',
        'ޖޫން',
        'ޖުލައި',
        'އޯގަސްޓު',
        'ސެޕްޓެމްބަރު',
        'އޮކްޓޯބަރު',
        'ނޮވެމްބަރު',
        'ޑިސެމްބަރު'
    ], weekdays = [
        'އާދިއްތަ',
        'ހޯމަ',
        'އަންގާރަ',
        'ބުދަ',
        'ބުރާސްފަތި',
        'ހުކުރު',
        'ހޮނިހިރު'
    ];

    var dv = moment.defineLocale('dv', {
        months : months,
        monthsShort : months,
        weekdays : weekdays,
        weekdaysShort : weekdays,
        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat : {

            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/M/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM : function (input) {
            return 'މފ' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar : {
            sameDay : '[މިއަދު] LT',
            nextDay : '[މާދަމާ] LT',
            nextWeek : 'dddd LT',
            lastDay : '[އިއްޔެ] LT',
            lastWeek : '[ފާއިތުވި] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ތެރޭގައި %s',
            past : 'ކުރިން %s',
            s : 'ސިކުންތުކޮޅެއް',
            ss : 'd% ސިކުންތު',
            m : 'މިނިޓެއް',
            mm : 'މިނިޓު %d',
            h : 'ގަޑިއިރެއް',
            hh : 'ގަޑިއިރު %d',
            d : 'ދުވަހެއް',
            dd : 'ދުވަސް %d',
            M : 'މަހެއް',
            MM : 'މަސް %d',
            y : 'އަހަރެއް',
            yy : 'އަހަރު %d'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 7,  // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return dv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/el.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }


    var el = moment.defineLocale('el', {
        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM : function (input) {
            return ((input + '').toLowerCase()[0] === 'μ');
        },
        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl : {
            sameDay : '[Σήμερα {}] LT',
            nextDay : '[Αύριο {}] LT',
            nextWeek : 'dddd [{}] LT',
            lastDay : '[Χθες {}] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
        },
        relativeTime : {
            future : 'σε %s',
            past : '%s πριν',
            s : 'λίγα δευτερόλεπτα',
            ss : '%d δευτερόλεπτα',
            m : 'ένα λεπτό',
            mm : '%d λεπτά',
            h : 'μία ώρα',
            hh : '%d ώρες',
            d : 'μία μέρα',
            dd : '%d μέρες',
            M : 'ένας μήνας',
            MM : '%d μήνες',
            y : 'ένας χρόνος',
            yy : '%d χρόνια'
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4st is the first week of the year.
        }
    });

    return el;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-SG.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enSG = moment.defineLocale('en-SG', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enSG;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-au.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enAu = moment.defineLocale('en-au', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enAu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-ca.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enCa = moment.defineLocale('en-ca', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'YYYY-MM-DD',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enCa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-gb.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enGb = moment.defineLocale('en-gb', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enGb;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-ie.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIe = moment.defineLocale('en-ie', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enIe;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-il.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIl = moment.defineLocale('en-il', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enIl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-nz.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enNz = moment.defineLocale('en-nz', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enNz;

})));


/***/ }),

/***/ "./node_modules/moment/locale/eo.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eo = moment.defineLocale('eo', {
        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D[-a de] MMMM, YYYY',
            LLL : 'D[-a de] MMMM, YYYY HH:mm',
            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar : {
            sameDay : '[Hodiaŭ je] LT',
            nextDay : '[Morgaŭ je] LT',
            nextWeek : 'dddd [je] LT',
            lastDay : '[Hieraŭ je] LT',
            lastWeek : '[pasinta] dddd [je] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'post %s',
            past : 'antaŭ %s',
            s : 'sekundoj',
            ss : '%d sekundoj',
            m : 'minuto',
            mm : '%d minutoj',
            h : 'horo',
            hh : '%d horoj',
            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
            dd : '%d tagoj',
            M : 'monato',
            MM : '%d monatoj',
            y : 'jaro',
            yy : '%d jaroj'
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal : '%da',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/es-do.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return esDo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/es-us.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esUs = moment.defineLocale('es-us', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'MM/DD/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return esUs;

})));


/***/ }),

/***/ "./node_modules/moment/locale/es.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return es;

})));


/***/ }),

/***/ "./node_modules/moment/locale/et.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'ss': [number + 'sekundi', number + 'sekundit'],
            'm' : ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd' : ['ühe päeva', 'üks päev'],
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat : {
            LT   : 'H:mm',
            LTS : 'H:mm:ss',
            L    : 'DD.MM.YYYY',
            LL   : 'D. MMMM YYYY',
            LLL  : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[Täna,] LT',
            nextDay  : '[Homme,] LT',
            nextWeek : '[Järgmine] dddd LT',
            lastDay  : '[Eile,] LT',
            lastWeek : '[Eelmine] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s pärast',
            past   : '%s tagasi',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : '%d päeva',
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return et;

})));


/***/ }),

/***/ "./node_modules/moment/locale/eu.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eu = moment.defineLocale('eu', {
        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact : true,
        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY[ko] MMMM[ren] D[a]',
            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l : 'YYYY-M-D',
            ll : 'YYYY[ko] MMM D[a]',
            lll : 'YYYY[ko] MMM D[a] HH:mm',
            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar : {
            sameDay : '[gaur] LT[etan]',
            nextDay : '[bihar] LT[etan]',
            nextWeek : 'dddd LT[etan]',
            lastDay : '[atzo] LT[etan]',
            lastWeek : '[aurreko] dddd LT[etan]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s barru',
            past : 'duela %s',
            s : 'segundo batzuk',
            ss : '%d segundo',
            m : 'minutu bat',
            mm : '%d minutu',
            h : 'ordu bat',
            hh : '%d ordu',
            d : 'egun bat',
            dd : '%d egun',
            M : 'hilabete bat',
            MM : '%d hilabete',
            y : 'urte bat',
            yy : '%d urte'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fa.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    }, numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment.defineLocale('fa', {
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar : {
            sameDay : '[امروز ساعت] LT',
            nextDay : '[فردا ساعت] LT',
            nextWeek : 'dddd [ساعت] LT',
            lastDay : '[دیروز ساعت] LT',
            lastWeek : 'dddd [پیش] [ساعت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'در %s',
            past : '%s پیش',
            s : 'چند ثانیه',
            ss : 'ثانیه d%',
            m : 'یک دقیقه',
            mm : '%d دقیقه',
            h : 'یک ساعت',
            hh : '%d ساعت',
            d : 'یک روز',
            dd : '%d روز',
            M : 'یک ماه',
            MM : '%d ماه',
            y : 'یک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal : '%dم',
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return fa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fi.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = [
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
            numbersPast[7], numbersPast[8], numbersPast[9]
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                return isFuture ? 'sekunnin' : 'sekuntia';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
    }

    var fi = moment.defineLocale('fi', {
        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'Do MMMM[ta] YYYY',
            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l : 'D.M.YYYY',
            ll : 'Do MMM YYYY',
            lll : 'Do MMM YYYY, [klo] HH.mm',
            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar : {
            sameDay : '[tänään] [klo] LT',
            nextDay : '[huomenna] [klo] LT',
            nextWeek : 'dddd [klo] LT',
            lastDay : '[eilen] [klo] LT',
            lastWeek : '[viime] dddd[na] [klo] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s päästä',
            past : '%s sitten',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fo.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fo = moment.defineLocale('fo', {
        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Í dag kl.] LT',
            nextDay : '[Í morgin kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[Í gjár kl.] LT',
            lastWeek : '[síðstu] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'um %s',
            past : '%s síðani',
            s : 'fá sekund',
            ss : '%d sekundir',
            m : 'ein minuttur',
            mm : '%d minuttir',
            h : 'ein tími',
            hh : '%d tímar',
            d : 'ein dagur',
            dd : '%d dagar',
            M : 'ein mánaður',
            MM : '%d mánaðir',
            y : 'eitt ár',
            yy : '%d ár'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fr-ca.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCa = moment.defineLocale('fr-ca', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        }
    });

    return frCa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fr-ch.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCh = moment.defineLocale('fr-ch', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return frCh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fr.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fr = moment.defineLocale('fr', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal : function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fy.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment.defineLocale('fy', {
        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'oer %s',
            past : '%s lyn',
            s : 'in pear sekonden',
            ss : '%d sekonden',
            m : 'ien minút',
            mm : '%d minuten',
            h : 'ien oere',
            hh : '%d oeren',
            d : 'ien dei',
            dd : '%d dagen',
            M : 'ien moanne',
            MM : '%d moannen',
            y : 'ien jier',
            yy : '%d jierren'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ga.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



    var months = [
        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'
    ];

    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];

    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];

    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];

    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];

    var ga = moment.defineLocale('ga', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné aig] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d mí',
            y: 'bliain',
            yy: '%d bliain'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ga;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gd.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
    ];

    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months : months,
        monthsShort : monthsShort,
        monthsParseExact : true,
        weekdays : weekdays,
        weekdaysShort : weekdaysShort,
        weekdaysMin : weekdaysMin,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[An-diugh aig] LT',
            nextDay : '[A-màireach aig] LT',
            nextWeek : 'dddd [aig] LT',
            lastDay : '[An-dè aig] LT',
            lastWeek : 'dddd [seo chaidh] [aig] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ann an %s',
            past : 'bho chionn %s',
            s : 'beagan diogan',
            ss : '%d diogan',
            m : 'mionaid',
            mm : '%d mionaidean',
            h : 'uair',
            hh : '%d uairean',
            d : 'latha',
            dd : '%d latha',
            M : 'mìos',
            MM : '%d mìosan',
            y : 'bliadhna',
            yy : '%d bliadhna'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
        ordinal : function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gd;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gl.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var gl = moment.defineLocale('gl', {
        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextDay : function () {
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            lastDay : function () {
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
            },
            lastWeek : function () {
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past : 'hai %s',
            s : 'uns segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'unha hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gom-latn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['thodde secondanim', 'thodde second'],
            'ss': [number + ' secondanim', number + ' second'],
            'm': ['eka mintan', 'ek minute'],
            'mm': [number + ' mintanim', number + ' mintam'],
            'h': ['eka voran', 'ek vor'],
            'hh': [number + ' voranim', number + ' voram'],
            'd': ['eka disan', 'ek dis'],
            'dd': [number + ' disanim', number + ' dis'],
            'M': ['eka mhoinean', 'ek mhoino'],
            'MM': [number + ' mhoineanim', number + ' mhoine'],
            'y': ['eka vorsan', 'ek voros'],
            'yy': [number + ' vorsanim', number + ' vorsam']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'A h:mm [vazta]',
            LTS : 'A h:mm:ss [vazta]',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY A h:mm [vazta]',
            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
        },
        calendar : {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Ieta to] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fatlo] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s',
            past : '%s adim',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
        ordinal : function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokalli') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokalli';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        }
    });

    return gomLatn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gu.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
            '1': '૧',
            '2': '૨',
            '3': '૩',
            '4': '૪',
            '5': '૫',
            '6': '૬',
            '7': '૭',
            '8': '૮',
            '9': '૯',
            '0': '૦'
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0'
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પેહલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.
        }
    });

    return gu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/he.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var he = moment.defineLocale('he', {
        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [ב]MMMM YYYY',
            LLL : 'D [ב]MMMM YYYY HH:mm',
            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
            l : 'D/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[היום ב־]LT',
            nextDay : '[מחר ב־]LT',
            nextWeek : 'dddd [בשעה] LT',
            lastDay : '[אתמול ב־]LT',
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'בעוד %s',
            past : 'לפני %s',
            s : 'מספר שניות',
            ss : '%d שניות',
            m : 'דקה',
            mm : '%d דקות',
            h : 'שעה',
            hh : function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d : 'יום',
            dd : function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M : 'חודש',
            MM : function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y : 'שנה',
            yy : function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM : function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });

    return he;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hi.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment.defineLocale('hi', {
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm बजे',
            LTS : 'A h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[कल] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[कल] LT',
            lastWeek : '[पिछले] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s में',
            past : '%s पहले',
            s : 'कुछ ही क्षण',
            ss : '%d सेकंड',
            m : 'एक मिनट',
            mm : '%d मिनट',
            h : 'एक घंटा',
            hh : '%d घंटे',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महीने',
            MM : '%d महीने',
            y : 'एक वर्ष',
            yy : '%d वर्ष'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return hi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hr.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months : {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hu.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment.defineLocale('hu', {
        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY. MMMM D.',
            LLL : 'YYYY. MMMM D. H:mm',
            LLLL : 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar : {
            sameDay : '[ma] LT[-kor]',
            nextDay : '[holnap] LT[-kor]',
            nextWeek : function () {
                return week.call(this, true);
            },
            lastDay : '[tegnap] LT[-kor]',
            lastWeek : function () {
                return week.call(this, false);
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s múlva',
            past : '%s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return hu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hy-am.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var hyAm = moment.defineLocale('hy-am', {
        months : {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY թ.',
            LLL : 'D MMMM YYYY թ., HH:mm',
            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar : {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s հետո',
            past : '%s առաջ',
            s : 'մի քանի վայրկյան',
            ss : '%d վայրկյան',
            m : 'րոպե',
            mm : '%d րոպե',
            h : 'ժամ',
            hh : '%d ժամ',
            d : 'օր',
            dd : '%d օր',
            M : 'ամիս',
            MM : '%d ամիս',
            y : 'տարի',
            yy : '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem : function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hyAm;

})));


/***/ }),

/***/ "./node_modules/moment/locale/id.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var id = moment.defineLocale('id', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Besok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kemarin pukul] LT',
            lastWeek : 'dddd [lalu pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lalu',
            s : 'beberapa detik',
            ss : '%d detik',
            m : 'semenit',
            mm : '%d menit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return id;

})));


/***/ }),

/***/ "./node_modules/moment/locale/is.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar : {
            sameDay : '[í dag kl.] LT',
            nextDay : '[á morgun kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[í gær kl.] LT',
            lastWeek : '[síðasta] dddd [kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'eftir %s',
            past : 'fyrir %s síðan',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : 'klukkustund',
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return is;

})));


/***/ }),

/***/ "./node_modules/moment/locale/it-ch.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var itCh = moment.defineLocale('it-ch', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return itCh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/it.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var it = moment.defineLocale('it', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return it;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ja.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ja = moment.defineLocale('ja', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日 dddd HH:mm',
            l : 'YYYY/MM/DD',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日(ddd) HH:mm'
        },
        meridiemParse: /午前|午後/i,
        isPM : function (input) {
            return input === '午後';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar : {
            sameDay : '[今日] LT',
            nextDay : '[明日] LT',
            nextWeek : function (now) {
                if (now.week() < this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay : '[昨日] LT',
            lastWeek : function (now) {
                if (this.week() < now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse : /\d{1,2}日/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s後',
            past : '%s前',
            s : '数秒',
            ss : '%d秒',
            m : '1分',
            mm : '%d分',
            h : '1時間',
            hh : '%d時間',
            d : '1日',
            dd : '%d日',
            M : '1ヶ月',
            MM : '%dヶ月',
            y : '1年',
            yy : '%d年'
        }
    });

    return ja;

})));


/***/ }),

/***/ "./node_modules/moment/locale/jv.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var jv = moment.defineLocale('jv', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar : {
            sameDay : '[Dinten puniko pukul] LT',
            nextDay : '[Mbenjang pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kala wingi pukul] LT',
            lastWeek : 'dddd [kepengker pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'wonten ing %s',
            past : '%s ingkang kepengker',
            s : 'sawetawis detik',
            ss : '%d detik',
            m : 'setunggal menit',
            mm : '%d menit',
            h : 'setunggal jam',
            hh : '%d jam',
            d : 'sedinten',
            dd : '%d dinten',
            M : 'sewulan',
            MM : '%d wulan',
            y : 'setaun',
            yy : '%d taun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return jv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ka.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ka = moment.defineLocale('ka', {
        months : {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays : {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[დღეს] LT[-ზე]',
            nextDay : '[ხვალ] LT[-ზე]',
            lastDay : '[გუშინ] LT[-ზე]',
            nextWeek : '[შემდეგ] dddd LT[-ზე]',
            lastWeek : '[წინა] dddd LT-ზე',
            sameElse : 'L'
        },
        relativeTime : {
            future : function (s) {
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                    s.replace(/ი$/, 'ში') :
                    s + 'ში';
            },
            past : function (s) {
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if ((/წელი/).test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s : 'რამდენიმე წამი',
            ss : '%d წამი',
            m : 'წუთი',
            mm : '%d წუთი',
            h : 'საათი',
            hh : '%d საათი',
            d : 'დღე',
            dd : '%d დღე',
            M : 'თვე',
            MM : '%d თვე',
            y : 'წელი',
            yy : '%d წელი'
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal : function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week : {
            dow : 1,
            doy : 7
        }
    });

    return ka;

})));


/***/ }),

/***/ "./node_modules/moment/locale/kk.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment.defineLocale('kk', {
        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгін сағат] LT',
            nextDay : '[Ертең сағат] LT',
            nextWeek : 'dddd [сағат] LT',
            lastDay : '[Кеше сағат] LT',
            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ішінде',
            past : '%s бұрын',
            s : 'бірнеше секунд',
            ss : '%d секунд',
            m : 'бір минут',
            mm : '%d минут',
            h : 'бір сағат',
            hh : '%d сағат',
            d : 'бір күн',
            dd : '%d күн',
            M : 'бір ай',
            MM : '%d ай',
            y : 'бір жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return kk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/km.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '១',
        '2': '២',
        '3': '៣',
        '4': '៤',
        '5': '៥',
        '6': '៦',
        '7': '៧',
        '8': '៨',
        '9': '៩',
        '0': '០'
    }, numberMap = {
        '១': '1',
        '២': '2',
        '៣': '3',
        '៤': '4',
        '៥': '5',
        '៦': '6',
        '៧': '7',
        '៨': '8',
        '៩': '9',
        '០': '0'
    };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
        ordinal : 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return km;

})));


/***/ }),

/***/ "./node_modules/moment/locale/kn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '೧',
        '2': '೨',
        '3': '೩',
        '4': '೪',
        '5': '೫',
        '6': '೬',
        '7': '೭',
        '8': '೮',
        '9': '೯',
        '0': '೦'
    },
    numberMap = {
        '೧': '1',
        '೨': '2',
        '೩': '3',
        '೪': '4',
        '೫': '5',
        '೬': '6',
        '೭': '7',
        '೮': '8',
        '೯': '9',
        '೦': '0'
    };

    var kn = moment.defineLocale('kn', {
        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
        monthsParseExact: true,
        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[ಇಂದು] LT',
            nextDay : '[ನಾಳೆ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ನಿನ್ನೆ] LT',
            lastWeek : '[ಕೊನೆಯ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ನಂತರ',
            past : '%s ಹಿಂದೆ',
            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss : '%d ಸೆಕೆಂಡುಗಳು',
            m : 'ಒಂದು ನಿಮಿಷ',
            mm : '%d ನಿಮಿಷ',
            h : 'ಒಂದು ಗಂಟೆ',
            hh : '%d ಗಂಟೆ',
            d : 'ಒಂದು ದಿನ',
            dd : '%d ದಿನ',
            M : 'ಒಂದು ತಿಂಗಳು',
            MM : '%d ತಿಂಗಳು',
            y : 'ಒಂದು ವರ್ಷ',
            yy : '%d ವರ್ಷ'
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal : function (number) {
            return number + 'ನೇ';
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return kn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ko.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ko = moment.defineLocale('ko', {
        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY년 MMMM D일',
            LLL : 'YYYY년 MMMM D일 A h:mm',
            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
            l : 'YYYY.MM.DD.',
            ll : 'YYYY년 MMMM D일',
            lll : 'YYYY년 MMMM D일 A h:mm',
            llll : 'YYYY년 MMMM D일 dddd A h:mm'
        },
        calendar : {
            sameDay : '오늘 LT',
            nextDay : '내일 LT',
            nextWeek : 'dddd LT',
            lastDay : '어제 LT',
            lastWeek : '지난주 dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s 후',
            past : '%s 전',
            s : '몇 초',
            ss : '%d초',
            m : '1분',
            mm : '%d분',
            h : '한 시간',
            hh : '%d시간',
            d : '하루',
            dd : '%d일',
            M : '한 달',
            MM : '%d달',
            y : '일 년',
            yy : '%d년'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse : /오전|오후/,
        isPM : function (token) {
            return token === '오후';
        },
        meridiem : function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });

    return ko;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ku.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    },
    months = [
        'کانونی دووەم',
        'شوبات',
        'ئازار',
        'نیسان',
        'ئایار',
        'حوزەیران',
        'تەمموز',
        'ئاب',
        'ئەیلوول',
        'تشرینی یەكەم',
        'تشرینی دووەم',
        'كانونی یەکەم'
    ];


    var ku = moment.defineLocale('ku', {
        months : months,
        monthsShort : months,
        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ئێواره‌|به‌یانی/,
        isPM: function (input) {
            return /ئێواره‌/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'به‌یانی';
            } else {
                return 'ئێواره‌';
            }
        },
        calendar : {
            sameDay : '[ئه‌مرۆ كاتژمێر] LT',
            nextDay : '[به‌یانی كاتژمێر] LT',
            nextWeek : 'dddd [كاتژمێر] LT',
            lastDay : '[دوێنێ كاتژمێر] LT',
            lastWeek : 'dddd [كاتژمێر] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'له‌ %s',
            past : '%s',
            s : 'چه‌ند چركه‌یه‌ك',
            ss : 'چركه‌ %d',
            m : 'یه‌ك خوله‌ك',
            mm : '%d خوله‌ك',
            h : 'یه‌ك كاتژمێر',
            hh : '%d كاتژمێر',
            d : 'یه‌ك ڕۆژ',
            dd : '%d ڕۆژ',
            M : 'یه‌ك مانگ',
            MM : '%d مانگ',
            y : 'یه‌ك ساڵ',
            yy : '%d ساڵ'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ku;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ky.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment.defineLocale('ky', {
        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгүн саат] LT',
            nextDay : '[Эртең саат] LT',
            nextWeek : 'dddd [саат] LT',
            lastDay : '[Кечээ саат] LT',
            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ичинде',
            past : '%s мурун',
            s : 'бирнече секунд',
            ss : '%d секунд',
            m : 'бир мүнөт',
            mm : '%d мүнөт',
            h : 'бир саат',
            hh : '%d саат',
            d : 'бир күн',
            dd : '%d күн',
            M : 'бир ай',
            MM : '%d ай',
            y : 'бир жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ky;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lb.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10, firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime : {
            future : processFutureTime,
            past : processPastTime,
            s : 'e puer Sekonnen',
            ss : '%d Sekonnen',
            m : processRelativeTime,
            mm : '%d Minutten',
            h : processRelativeTime,
            hh : '%d Stonnen',
            d : processRelativeTime,
            dd : '%d Deeg',
            M : processRelativeTime,
            MM : '%d Méint',
            y : processRelativeTime,
            yy : '%d Joer'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lb;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lo.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var lo = moment.defineLocale('lo', {
        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar : {
            sameDay : '[ມື້ນີ້ເວລາ] LT',
            nextDay : '[ມື້ອື່ນເວລາ] LT',
            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ອີກ %s',
            past : '%sຜ່ານມາ',
            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss : '%d ວິນາທີ' ,
            m : '1 ນາທີ',
            mm : '%d ນາທີ',
            h : '1 ຊົ່ວໂມງ',
            hh : '%d ຊົ່ວໂມງ',
            d : '1 ມື້',
            dd : '%d ມື້',
            M : '1 ເດືອນ',
            MM : '%d ເດືອນ',
            y : '1 ປີ',
            yy : '%d ປີ'
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal : function (number) {
            return 'ທີ່' + number;
        }
    });

    return lo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lt.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss' : 'sekundė_sekundžių_sekundes',
        'm' : 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h' : 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd' : 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M' : 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y' : 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months : {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays : {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY [m.] MMMM D [d.]',
            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l : 'YYYY-MM-DD',
            ll : 'YYYY [m.] MMMM D [d.]',
            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar : {
            sameDay : '[Šiandien] LT',
            nextDay : '[Rytoj] LT',
            nextWeek : 'dddd LT',
            lastDay : '[Vakar] LT',
            lastWeek : '[Praėjusį] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'po %s',
            past : 'prieš %s',
            s : translateSeconds,
            ss : translate,
            m : translateSingular,
            mm : translate,
            h : translateSingular,
            hh : translate,
            d : translateSingular,
            dd : translate,
            M : translateSingular,
            MM : translate,
            y : translateSingular,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal : function (number) {
            return number + '-oji';
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lv.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY.',
            LL : 'YYYY. [gada] D. MMMM',
            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar : {
            sameDay : '[Šodien pulksten] LT',
            nextDay : '[Rīt pulksten] LT',
            nextWeek : 'dddd [pulksten] LT',
            lastDay : '[Vakar pulksten] LT',
            lastWeek : '[Pagājušā] dddd [pulksten] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'pēc %s',
            past : 'pirms %s',
            s : relativeSeconds,
            ss : relativeTimeWithPlural,
            m : relativeTimeWithSingular,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithSingular,
            hh : relativeTimeWithPlural,
            d : relativeTimeWithSingular,
            dd : relativeTimeWithPlural,
            M : relativeTimeWithSingular,
            MM : relativeTimeWithPlural,
            y : relativeTimeWithSingular,
            yy : relativeTimeWithPlural
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/me.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact : true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mjesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return me;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mi.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mk.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mk = moment.defineLocale('mk', {
        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Денес во] LT',
            nextDay : '[Утре во] LT',
            nextWeek : '[Во] dddd [во] LT',
            lastDay : '[Вчера во] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'после %s',
            past : 'пред %s',
            s : 'неколку секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дена',
            M : 'месец',
            MM : '%d месеци',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return mk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ml.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ml = moment.defineLocale('ml', {
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm -നു',
            LTS : 'A h:mm:ss -നു',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm -നു',
            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar : {
            sameDay : '[ഇന്ന്] LT',
            nextDay : '[നാളെ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ഇന്നലെ] LT',
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s കഴിഞ്ഞ്',
            past : '%s മുൻപ്',
            s : 'അൽപ നിമിഷങ്ങൾ',
            ss : '%d സെക്കൻഡ്',
            m : 'ഒരു മിനിറ്റ്',
            mm : '%d മിനിറ്റ്',
            h : 'ഒരു മണിക്കൂർ',
            hh : '%d മണിക്കൂർ',
            d : 'ഒരു ദിവസം',
            dd : '%d ദിവസം',
            M : 'ഒരു മാസം',
            MM : '%d മാസം',
            y : 'ഒരു വർഷം',
            yy : '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'രാത്രി' && hour >= 4) ||
                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                    meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });

    return ml;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
        monthsParseExact : true,
        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY оны MMMMын D',
            LLL : 'YYYY оны MMMMын D HH:mm',
            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM : function (input) {
            return input === 'ҮХ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar : {
            sameDay : '[Өнөөдөр] LT',
            nextDay : '[Маргааш] LT',
            nextWeek : '[Ирэх] dddd LT',
            lastDay : '[Өчигдөр] LT',
            lastWeek : '[Өнгөрсөн] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s дараа',
            past : '%s өмнө',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        }
    });

    return mn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mr.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture)
    {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's': output = 'काही सेकंद'; break;
                case 'ss': output = '%d सेकंद'; break;
                case 'm': output = 'एक मिनिट'; break;
                case 'mm': output = '%d मिनिटे'; break;
                case 'h': output = 'एक तास'; break;
                case 'hh': output = '%d तास'; break;
                case 'd': output = 'एक दिवस'; break;
                case 'dd': output = '%d दिवस'; break;
                case 'M': output = 'एक महिना'; break;
                case 'MM': output = '%d महिने'; break;
                case 'y': output = 'एक वर्ष'; break;
                case 'yy': output = '%d वर्षे'; break;
            }
        }
        else {
            switch (string) {
                case 's': output = 'काही सेकंदां'; break;
                case 'ss': output = '%d सेकंदां'; break;
                case 'm': output = 'एका मिनिटा'; break;
                case 'mm': output = '%d मिनिटां'; break;
                case 'h': output = 'एका तासा'; break;
                case 'hh': output = '%d तासां'; break;
                case 'd': output = 'एका दिवसा'; break;
                case 'dd': output = '%d दिवसां'; break;
                case 'M': output = 'एका महिन्या'; break;
                case 'MM': output = '%d महिन्यां'; break;
                case 'y': output = 'एका वर्षा'; break;
                case 'yy': output = '%d वर्षां'; break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact : true,
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm वाजता',
            LTS : 'A h:mm:ss वाजता',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm वाजता',
            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[उद्या] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return mr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ms-my.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var msMy = moment.defineLocale('ms-my', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return msMy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ms.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ms = moment.defineLocale('ms', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ms;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mt.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mt = moment.defineLocale('mt', {
        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Illum fil-]LT',
            nextDay : '[Għada fil-]LT',
            nextWeek : 'dddd [fil-]LT',
            lastDay : '[Il-bieraħ fil-]LT',
            lastWeek : 'dddd [li għadda] [fil-]LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'f’ %s',
            past : '%s ilu',
            s : 'ftit sekondi',
            ss : '%d sekondi',
            m : 'minuta',
            mm : '%d minuti',
            h : 'siegħa',
            hh : '%d siegħat',
            d : 'ġurnata',
            dd : '%d ġranet',
            M : 'xahar',
            MM : '%d xhur',
            y : 'sena',
            yy : '%d sni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/my.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    }, numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss : '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return my;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nb.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nb = moment.defineLocale('nb', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'noen sekunder',
            ss : '%d sekunder',
            m : 'ett minutt',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dager',
            M : 'en måned',
            MM : '%d måneder',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nb;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ne.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment.defineLocale('ne', {
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact : true,
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'Aको h:mm बजे',
            LTS : 'Aको h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, Aको h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[भोलि] LT',
            nextWeek : '[आउँदो] dddd[,] LT',
            lastDay : '[हिजो] LT',
            lastWeek : '[गएको] dddd[,] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sमा',
            past : '%s अगाडि',
            s : 'केही क्षण',
            ss : '%d सेकेण्ड',
            m : 'एक मिनेट',
            mm : '%d मिनेट',
            h : 'एक घण्टा',
            hh : '%d घण्टा',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महिना',
            MM : '%d महिना',
            y : 'एक बर्ष',
            yy : '%d बर्ष'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ne;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nl-be.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nlBe;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nl.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nn = moment.defineLocale('nn', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s sidan',
            s : 'nokre sekund',
            ss : '%d sekund',
            m : 'eit minutt',
            mm : '%d minutt',
            h : 'ein time',
            hh : '%d timar',
            d : 'ein dag',
            dd : '%d dagar',
            M : 'ein månad',
            MM : '%d månader',
            y : 'eit år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pa-in.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
    numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm ਵਜੇ',
            LTS : 'A h:mm:ss ਵਜੇ',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar : {
            sameDay : '[ਅਜ] LT',
            nextDay : '[ਕਲ] LT',
            nextWeek : '[ਅਗਲਾ] dddd, LT',
            lastDay : '[ਕਲ] LT',
            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ਵਿੱਚ',
            past : '%s ਪਿਛਲੇ',
            s : 'ਕੁਝ ਸਕਿੰਟ',
            ss : '%d ਸਕਿੰਟ',
            m : 'ਇਕ ਮਿੰਟ',
            mm : '%d ਮਿੰਟ',
            h : 'ਇੱਕ ਘੰਟਾ',
            hh : '%d ਘੰਟੇ',
            d : 'ਇੱਕ ਦਿਨ',
            dd : '%d ਦਿਨ',
            M : 'ਇੱਕ ਮਹੀਨਾ',
            MM : '%d ਮਹੀਨੇ',
            y : 'ਇੱਕ ਸਾਲ',
            yy : '%d ਸਾਲ'
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return paIn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pl.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function plural(n) {
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix  ? 'godzina'  : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : '%s temu',
            s : 'kilka sekund',
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : '1 dzień',
            dd : '%d dni',
            M : 'miesiąc',
            MM : translate,
            y : 'rok',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pt-br.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ptBr = moment.defineLocale('pt-br', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'poucos segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº'
    });

    return ptBr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pt.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var pt = moment.defineLocale('pt', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ro.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                'ss': 'secunde',
                'mm': 'minute',
                'hh': 'ore',
                'dd': 'zile',
                'MM': 'luni',
                'yy': 'ani'
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'peste %s',
            past : '%s în urmă',
            s : 'câteva secunde',
            ss : relativeTimeWithPlural,
            m : 'un minut',
            mm : relativeTimeWithPlural,
            h : 'o oră',
            hh : relativeTimeWithPlural,
            d : 'o zi',
            dd : relativeTimeWithPlural,
            M : 'o lună',
            MM : relativeTimeWithPlural,
            y : 'un an',
            yy : relativeTimeWithPlural
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ro;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ru.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months : {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort : {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays : {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соотвествует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., H:mm',
            LLLL : 'dddd, D MMMM YYYY г., H:mm'
        },
        calendar : {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'час',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ru;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sd.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوري',
        'فيبروري',
        'مارچ',
        'اپريل',
        'مئي',
        'جون',
        'جولاءِ',
        'آگسٽ',
        'سيپٽمبر',
        'آڪٽوبر',
        'نومبر',
        'ڊسمبر'
    ];
    var days = [
        'آچر',
        'سومر',
        'اڱارو',
        'اربع',
        'خميس',
        'جمع',
        'ڇنڇر'
    ];

    var sd = moment.defineLocale('sd', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[اڄ] LT',
            nextDay : '[سڀاڻي] LT',
            nextWeek : 'dddd [اڳين هفتي تي] LT',
            lastDay : '[ڪالهه] LT',
            lastWeek : '[گزريل هفتي] dddd [تي] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s پوء',
            past : '%s اڳ',
            s : 'چند سيڪنڊ',
            ss : '%d سيڪنڊ',
            m : 'هڪ منٽ',
            mm : '%d منٽ',
            h : 'هڪ ڪلاڪ',
            hh : '%d ڪلاڪ',
            d : 'هڪ ڏينهن',
            dd : '%d ڏينهن',
            M : 'هڪ مهينو',
            MM : '%d مهينا',
            y : 'هڪ سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sd;

})));


/***/ }),

/***/ "./node_modules/moment/locale/se.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var se = moment.defineLocale('se', {
        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'MMMM D. [b.] YYYY',
            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar : {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s geažes',
            past : 'maŋit %s',
            s : 'moadde sekunddat',
            ss: '%d sekunddat',
            m : 'okta minuhta',
            mm : '%d minuhtat',
            h : 'okta diimmu',
            hh : '%d diimmut',
            d : 'okta beaivi',
            dd : '%d beaivvit',
            M : 'okta mánnu',
            MM : '%d mánut',
            y : 'okta jahki',
            yy : '%d jagit'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return se;

})));


/***/ }),

/***/ "./node_modules/moment/locale/si.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'a h:mm',
            LTS : 'a h:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY MMMM D',
            LLL : 'YYYY MMMM D, a h:mm',
            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar : {
            sameDay : '[අද] LT[ට]',
            nextDay : '[හෙට] LT[ට]',
            nextWeek : 'dddd LT[ට]',
            lastDay : '[ඊයේ] LT[ට]',
            lastWeek : '[පසුගිය] dddd LT[ට]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sකින්',
            past : '%sකට පෙර',
            s : 'තත්පර කිහිපය',
            ss : 'තත්පර %d',
            m : 'මිනිත්තුව',
            mm : 'මිනිත්තු %d',
            h : 'පැය',
            hh : 'පැය %d',
            d : 'දිනය',
            dd : 'දින %d',
            M : 'මාසය',
            MM : 'මාස %d',
            y : 'වසර',
            yy : 'වසර %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal : function (number) {
            return number + ' වැනි';
        },
        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM : function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });

    return si;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sk.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return (n > 1) && (n < 5);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment.defineLocale('sk', {
        months : months,
        monthsShort : monthsShort,
        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'pred %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sl.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danes ob] LT',
            nextDay  : '[jutri ob] LT',

            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay  : '[včeraj ob] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'čez %s',
            past   : 'pred %s',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : processRelativeTime,
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sq.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sq = moment.defineLocale('sq', {
        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem : function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Sot në] LT',
            nextDay : '[Nesër në] LT',
            nextWeek : 'dddd [në] LT',
            lastDay : '[Dje në] LT',
            lastWeek : 'dddd [e kaluar në] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'në %s',
            past : '%s më parë',
            s : 'disa sekonda',
            ss : '%d sekonda',
            m : 'një minutë',
            mm : '%d minuta',
            h : 'një orë',
            hh : '%d orë',
            d : 'një ditë',
            dd : '%d ditë',
            M : 'një muaj',
            MM : '%d muaj',
            y : 'një vit',
            yy : '%d vite'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sq;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sr-cyrl.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay  : '[јуче у] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'за %s',
            past   : 'пре %s',
            s      : 'неколико секунди',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'дан',
            dd     : translator.translate,
            M      : 'месец',
            MM     : translator.translate,
            y      : 'годину',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return srCyrl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sr.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'pre %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ss.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ss = moment.defineLocale('ss', {
        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Namuhla nga] LT',
            nextDay : '[Kusasa nga] LT',
            nextWeek : 'dddd [nga] LT',
            lastDay : '[Itolo nga] LT',
            lastWeek : 'dddd [leliphelile] [nga] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'nga %s',
            past : 'wenteka nga %s',
            s : 'emizuzwana lomcane',
            ss : '%d mzuzwana',
            m : 'umzuzu',
            mm : '%d emizuzu',
            h : 'lihora',
            hh : '%d emahora',
            d : 'lilanga',
            dd : '%d emalanga',
            M : 'inyanga',
            MM : '%d tinyanga',
            y : 'umnyaka',
            yy : '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : '%d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ss;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sv.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sv = moment.defineLocale('sv', {
        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : 'för %s sedan',
            s : 'några sekunder',
            ss : '%d sekunder',
            m : 'en minut',
            mm : '%d minuter',
            h : 'en timme',
            hh : '%d timmar',
            d : 'en dag',
            dd : '%d dagar',
            M : 'en månad',
            MM : '%d månader',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'e' :
                (b === 1) ? 'a' :
                (b === 2) ? 'a' :
                (b === 3) ? 'e' : 'e';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sw.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sw = moment.defineLocale('sw', {
        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[leo saa] LT',
            nextDay : '[kesho saa] LT',
            nextWeek : '[wiki ijayo] dddd [saat] LT',
            lastDay : '[jana] LT',
            lastWeek : '[wiki iliyopita] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s baadaye',
            past : 'tokea %s',
            s : 'hivi punde',
            ss : 'sekunde %d',
            m : 'dakika moja',
            mm : 'dakika %d',
            h : 'saa limoja',
            hh : 'masaa %d',
            d : 'siku moja',
            dd : 'masiku %d',
            M : 'mwezi mmoja',
            MM : 'miezi %d',
            y : 'mwaka mmoja',
            yy : 'miaka %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sw;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ta.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    }, numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment.defineLocale('ta', {
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, HH:mm',
            LLLL : 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar : {
            sameDay : '[இன்று] LT',
            nextDay : '[நாளை] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[நேற்று] LT',
            lastWeek : '[கடந்த வாரம்] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s இல்',
            past : '%s முன்',
            s : 'ஒரு சில விநாடிகள்',
            ss : '%d விநாடிகள்',
            m : 'ஒரு நிமிடம்',
            mm : '%d நிமிடங்கள்',
            h : 'ஒரு மணி நேரம்',
            hh : '%d மணி நேரம்',
            d : 'ஒரு நாள்',
            dd : '%d நாட்கள்',
            M : 'ஒரு மாதம்',
            MM : '%d மாதங்கள்',
            y : 'ஒரு வருடம்',
            yy : '%d ஆண்டுகள்'
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal : function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem : function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';  // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ta;

})));


/***/ }),

/***/ "./node_modules/moment/locale/te.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var te = moment.defineLocale('te', {
        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[నేడు] LT',
            nextDay : '[రేపు] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[నిన్న] LT',
            lastWeek : '[గత] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s లో',
            past : '%s క్రితం',
            s : 'కొన్ని క్షణాలు',
            ss : '%d సెకన్లు',
            m : 'ఒక నిమిషం',
            mm : '%d నిమిషాలు',
            h : 'ఒక గంట',
            hh : '%d గంటలు',
            d : 'ఒక రోజు',
            dd : '%d రోజులు',
            M : 'ఒక నెల',
            MM : '%d నెలలు',
            y : 'ఒక సంవత్సరం',
            yy : '%d సంవత్సరాలు'
        },
        dayOfMonthOrdinalParse : /\d{1,2}వ/,
        ordinal : '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return te;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tet.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tet = moment.defineLocale('tet', {
        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'iha %s',
            past : '%s liuba',
            s : 'minutu balun',
            ss : 'minutu %d',
            m : 'minutu ida',
            mm : 'minutu %d',
            h : 'oras ida',
            hh : 'oras %d',
            d : 'loron ida',
            dd : 'loron %d',
            M : 'fulan ida',
            MM : 'fulan %d',
            y : 'tinan ida',
            yy : 'tinan %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tet;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tg.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум'
    };

    var tg = moment.defineLocale('tg', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Имрӯз соати] LT',
            nextDay : '[Пагоҳ соати] LT',
            lastDay : '[Дирӯз соати] LT',
            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'баъди %s',
            past : '%s пеш',
            s : 'якчанд сония',
            m : 'як дақиқа',
            mm : '%d дақиқа',
            h : 'як соат',
            hh : '%d соат',
            d : 'як рӯз',
            dd : '%d рӯз',
            M : 'як моҳ',
            MM : '%d моҳ',
            y : 'як сол',
            yy : '%d сол'
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1th is the first week of the year.
        }
    });

    return tg;

})));


/***/ }),

/***/ "./node_modules/moment/locale/th.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var th = moment.defineLocale('th', {
        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY เวลา H:mm',
            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar : {
            sameDay : '[วันนี้ เวลา] LT',
            nextDay : '[พรุ่งนี้ เวลา] LT',
            nextWeek : 'dddd[หน้า เวลา] LT',
            lastDay : '[เมื่อวานนี้ เวลา] LT',
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'อีก %s',
            past : '%sที่แล้ว',
            s : 'ไม่กี่วินาที',
            ss : '%d วินาที',
            m : '1 นาที',
            mm : '%d นาที',
            h : '1 ชั่วโมง',
            hh : '%d ชั่วโมง',
            d : '1 วัน',
            dd : '%d วัน',
            M : '1 เดือน',
            MM : '%d เดือน',
            y : '1 ปี',
            yy : '%d ปี'
        }
    });

    return th;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tl-ph.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tlPh = moment.defineLocale('tl-ph', {
        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'MM/D/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY HH:mm',
            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar : {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'sa loob ng %s',
            past : '%s ang nakalipas',
            s : 'ilang segundo',
            ss : '%d segundo',
            m : 'isang minuto',
            mm : '%d minuto',
            h : 'isang oras',
            hh : '%d oras',
            d : 'isang araw',
            dd : '%d araw',
            M : 'isang buwan',
            MM : '%d buwan',
            y : 'isang taon',
            yy : '%d taon'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlPh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tlh.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'leS' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'waQ' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'nem' :
        time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'Hu’' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'wen' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'ben' :
        time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
        ten = Math.floor((number % 100) / 10),
        one = number % 10,
        word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
        }
        return (word === '') ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact : true,
        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime : {
            future : translateFuture,
            past : translatePast,
            s : 'puS lup',
            ss : translate,
            m : 'wa’ tup',
            mm : translate,
            h : 'wa’ rep',
            hh : translate,
            d : 'wa’ jaj',
            dd : translate,
            M : 'wa’ jar',
            MM : translate,
            y : 'wa’ DIS',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tr.js":
/***/ (function(module, exports, __webpack_require__) {


;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    var suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment.defineLocale('tr', {
        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[yarın saat] LT',
            nextWeek : '[gelecek] dddd [saat] LT',
            lastDay : '[dün] LT',
            lastWeek : '[geçen] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s önce',
            s : 'birkaç saniye',
            ss : '%d saniye',
            m : 'bir dakika',
            mm : '%d dakika',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir yıl',
            yy : '%d yıl'
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {  // special case for zero
                        return number + '\'ıncı';
                    }
                    var a = number % 10,
                        b = number % 100 - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return tr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tzl.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM [dallas] YYYY',
            LLL : 'D. MMMM [dallas] YYYY HH.mm',
            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM : function (input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar : {
            sameDay : '[oxhi à] LT',
            nextDay : '[demà à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[ieiri à] LT',
            lastWeek : '[sür el] dddd [lasteu à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'osprei %s',
            past : 'ja%s',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'ss': [number + ' secunds', '' + number + ' secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
    }

    return tzl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tzm-latn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzmLatn = moment.defineLocale('tzm-latn', {
        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dadkh s yan %s',
            past : 'yan %s',
            s : 'imik',
            ss : '%d imik',
            m : 'minuḍ',
            mm : '%d minuḍ',
            h : 'saɛa',
            hh : '%d tassaɛin',
            d : 'ass',
            dd : '%d ossan',
            M : 'ayowr',
            MM : '%d iyyirn',
            y : 'asgas',
            yy : '%d isgasn'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzmLatn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tzm.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzm = moment.defineLocale('tzm', {
        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past : 'ⵢⴰⵏ %s',
            s : 'ⵉⵎⵉⴽ',
            ss : '%d ⵉⵎⵉⴽ',
            m : 'ⵎⵉⵏⵓⴺ',
            mm : '%d ⵎⵉⵏⵓⴺ',
            h : 'ⵙⴰⵄⴰ',
            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d : 'ⴰⵙⵙ',
            dd : '%d oⵙⵙⴰⵏ',
            M : 'ⴰⵢoⵓⵔ',
            MM : '%d ⵉⵢⵢⵉⵔⵏ',
            y : 'ⴰⵙⴳⴰⵙ',
            yy : '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzm;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ug-cn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js language configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ugCn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/uk.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        };

        if (m === true) {
            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));
        }
        if (!m) {
            return weekdays['nominative'];
        }

        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
            'accusative' :
            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                'genitive' :
                'nominative');
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months : {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY р.',
            LLL : 'D MMMM YYYY р., HH:mm',
            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar : {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'за %s',
            past : '%s тому',
            s : 'декілька секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'годину',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'місяць',
            MM : relativeTimeWithPlural,
            y : 'рік',
            yy : relativeTimeWithPlural
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ur.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوری',
        'فروری',
        'مارچ',
        'اپریل',
        'مئی',
        'جون',
        'جولائی',
        'اگست',
        'ستمبر',
        'اکتوبر',
        'نومبر',
        'دسمبر'
    ];
    var days = [
        'اتوار',
        'پیر',
        'منگل',
        'بدھ',
        'جمعرات',
        'جمعہ',
        'ہفتہ'
    ];

    var ur = moment.defineLocale('ur', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[آج بوقت] LT',
            nextDay : '[کل بوقت] LT',
            nextWeek : 'dddd [بوقت] LT',
            lastDay : '[گذشتہ روز بوقت] LT',
            lastWeek : '[گذشتہ] dddd [بوقت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s بعد',
            past : '%s قبل',
            s : 'چند سیکنڈ',
            ss : '%d سیکنڈ',
            m : 'ایک منٹ',
            mm : '%d منٹ',
            h : 'ایک گھنٹہ',
            hh : '%d گھنٹے',
            d : 'ایک دن',
            dd : '%d دن',
            M : 'ایک ماہ',
            MM : '%d ماہ',
            y : 'ایک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ur;

})));


/***/ }),

/***/ "./node_modules/moment/locale/uz-latn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uzLatn = moment.defineLocale('uz-latn', {
        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Bugun soat] LT [da]',
            nextDay : '[Ertaga] LT [da]',
            nextWeek : 'dddd [kuni soat] LT [da]',
            lastDay : '[Kecha soat] LT [da]',
            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Yaqin %s ichida',
            past : 'Bir necha %s oldin',
            s : 'soniya',
            ss : '%d soniya',
            m : 'bir daqiqa',
            mm : '%d daqiqa',
            h : 'bir soat',
            hh : '%d soat',
            d : 'bir kun',
            dd : '%d kun',
            M : 'bir oy',
            MM : '%d oy',
            y : 'bir yil',
            yy : '%d yil'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uzLatn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/uz.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uz = moment.defineLocale('uz', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Бугун соат] LT [да]',
            nextDay : '[Эртага] LT [да]',
            nextWeek : 'dddd [куни соат] LT [да]',
            lastDay : '[Кеча соат] LT [да]',
            lastWeek : '[Утган] dddd [куни соат] LT [да]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Якин %s ичида',
            past : 'Бир неча %s олдин',
            s : 'фурсат',
            ss : '%d фурсат',
            m : 'бир дакика',
            mm : '%d дакика',
            h : 'бир соат',
            hh : '%d соат',
            d : 'бир кун',
            dd : '%d кун',
            M : 'бир ой',
            MM : '%d ой',
            y : 'бир йил',
            yy : '%d йил'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return uz;

})));


/***/ }),

/***/ "./node_modules/moment/locale/vi.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var vi = moment.defineLocale('vi', {
        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [năm] YYYY',
            LLL : 'D MMMM [năm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tới',
            past : '%s trước',
            s : 'vài giây',
            ss : '%d giây' ,
            m : 'một phút',
            mm : '%d phút',
            h : 'một giờ',
            hh : '%d giờ',
            d : 'một ngày',
            dd : '%d ngày',
            M : 'một tháng',
            MM : '%d tháng',
            y : 'một năm',
            yy : '%d năm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return vi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/x-pseudo.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var xPseudo = moment.defineLocale('x-pseudo', {
        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact : true,
        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[T~ódá~ý át] LT',
            nextDay : '[T~ómó~rró~w át] LT',
            nextWeek : 'dddd [át] LT',
            lastDay : '[Ý~ést~érdá~ý át] LT',
            lastWeek : '[L~ást] dddd [át] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'í~ñ %s',
            past : '%s á~gó',
            s : 'á ~féw ~sécó~ñds',
            ss : '%d s~écóñ~ds',
            m : 'á ~míñ~úté',
            mm : '%d m~íñú~tés',
            h : 'á~ñ hó~úr',
            hh : '%d h~óúrs',
            d : 'á ~dáý',
            dd : '%d d~áýs',
            M : 'á ~móñ~th',
            MM : '%d m~óñt~hs',
            y : 'á ~ýéár',
            yy : '%d ý~éárs'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return xPseudo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/yo.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var yo = moment.defineLocale('yo', {
        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Ònì ni] LT',
            nextDay : '[Ọ̀la ni] LT',
            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
            lastDay : '[Àna ni] LT',
            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ní %s',
            past : '%s kọjá',
            s : 'ìsẹjú aayá die',
            ss :'aayá %d',
            m : 'ìsẹjú kan',
            mm : 'ìsẹjú %d',
            h : 'wákati kan',
            hh : 'wákati %d',
            d : 'ọjọ́ kan',
            dd : 'ọjọ́ %d',
            M : 'osù kan',
            MM : 'osù %d',
            y : 'ọdún kan',
            yy : 'ọdún %d'
        },
        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
        ordinal : 'ọjọ́ %d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return yo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/zh-cn.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhCn = moment.defineLocale('zh-cn', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日Ah点mm分',
            LLLL : 'YYYY年M月D日ddddAh点mm分',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' ||
                    meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s内',
            past : '%s前',
            s : '几秒',
            ss : '%d 秒',
            m : '1 分钟',
            mm : '%d 分钟',
            h : '1 小时',
            hh : '%d 小时',
            d : '1 天',
            dd : '%d 天',
            M : '1 个月',
            MM : '%d 个月',
            y : '1 年',
            yy : '%d 年'
        },
        week : {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return zhCn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/zh-hk.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhHk = moment.defineLocale('zh-hk', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhHk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/zh-tw.js":
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__("./node_modules/moment/moment.js")) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhTw = moment.defineLocale('zh-tw', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天] LT',
            nextDay : '[明天] LT',
            nextWeek : '[下]dddd LT',
            lastDay : '[昨天] LT',
            lastWeek : '[上]dddd LT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhTw;

})));


/***/ }),

/***/ "./node_modules/moment/moment.js":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__("./node_modules/moment/locale recursive ^\\.\\/.*$")("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__("./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/vue-bootstrap-datetimepicker/dist/vue-bootstrap-datetimepicker.js":
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__("./node_modules/moment/moment.js"), __webpack_require__("./node_modules/jquery/dist/jquery.js"), __webpack_require__("./node_modules/eonasdan-bootstrap-datetimepicker/src/js/bootstrap-datetimepicker.js"));
	else if(typeof define === 'function' && define.amd)
		define("VueBootstrapDatetimePicker", ["moment", "jquery", "eonasdan-bootstrap-datetimepicker"], factory);
	else if(typeof exports === 'object')
		exports["VueBootstrapDatetimePicker"] = factory(require("moment"), require("jquery"), require("eonasdan-bootstrap-datetimepicker"));
	else
		root["VueBootstrapDatetimePicker"] = factory(root["moment"], root["jQuery"], root["eonasdan-bootstrap-datetimepicker"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__1__;

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/component.vue?vue&type=template&id=55cbc077
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.config.inline)?_c('div',{staticClass:"datetimepicker-inline"}):_c('input',{staticClass:"form-control",attrs:{"type":"text"}})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/component.vue?vue&type=template&id=55cbc077

// EXTERNAL MODULE: external {"commonjs":"jquery","commonjs2":"jquery","amd":"jquery","root":"jQuery"}
var external_commonjs_jquery_commonjs2_jquery_amd_jquery_root_jQuery_ = __webpack_require__(1);
var external_commonjs_jquery_commonjs2_jquery_amd_jquery_root_jQuery_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_jquery_commonjs2_jquery_amd_jquery_root_jQuery_);

// EXTERNAL MODULE: external "moment"
var external_moment_ = __webpack_require__(0);
var external_moment_default = /*#__PURE__*/__webpack_require__.n(external_moment_);

// EXTERNAL MODULE: external "eonasdan-bootstrap-datetimepicker"
var external_eonasdan_bootstrap_datetimepicker_ = __webpack_require__(3);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/component.vue?vue&type=script&lang=js
//
//
//
//
//
//
//





// You have to import css yourself

// Events list without prefix
// http://eonasdan.github.io/bootstrap-datetimepicker/Events/
var events = ['hide', 'show', 'change', 'error', 'update'];

/* harmony default export */ var componentvue_type_script_lang_js = ({
  name: 'date-picker',
  props: {
    value: {
      default: null,
      required: true,
      validator: function validator(value) {
        return value === null || value instanceof Date || typeof value === 'string' || value instanceof String || value instanceof external_moment_default.a;
      }
    },
    // http://eonasdan.github.io/bootstrap-datetimepicker/Options/
    config: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    /**
     * You can set this to true when component is wrapped in input-group
     * Note: inline and wrap mode wont work together
     */
    wrap: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      dp: null,
      // jQuery DOM
      elem: null
    };
  },
  mounted: function mounted() {
    // Return early if date-picker is already loaded
    /* istanbul ignore if */
    if (this.dp) return;
    // Handle wrapped input
    this.elem = external_commonjs_jquery_commonjs2_jquery_amd_jquery_root_jQuery_default()(this.wrap ? this.$el.parentNode : this.$el);
    // Init date-picker
    this.elem.datetimepicker(this.config);
    // Store data control
    this.dp = this.elem.data('DateTimePicker');
    // Set initial value
    this.dp.date(this.value);
    // Watch for changes
    this.elem.on('dp.change', this.onChange);
    // Register remaining events
    this.registerEvents();
  },

  watch: {
    /**
     * Listen to change from outside of component and update DOM
     *
     * @param newValue
     */
    value: function value(newValue) {
      this.dp && this.dp.date(newValue || null);
    },


    /**
     * Watch for any change in options and set them
     *
     * @param newConfig Object
     */
    config: {
      deep: true,
      handler: function handler(newConfig) {
        this.dp && this.dp.options(newConfig);
      }
    }
  },
  methods: {
    /**
     * Update v-model upon change triggered by date-picker itself
     *
     * @param event
     */
    onChange: function onChange(event) {
      var formattedDate = event.date ? event.date.format(this.dp.format()) : null;
      this.$emit('input', formattedDate);
    },


    /**
     * Emit all available events
     */
    registerEvents: function registerEvents() {
      var _this = this;

      events.forEach(function (name) {
        _this.elem.on('dp.' + name, function () {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this.$emit.apply(_this, ['dp-' + name].concat(args));
        });
      });
    }
  },
  /**
   * Free up memory
   */
  beforeDestroy: function beforeDestroy() {
    /* istanbul ignore else */
    if (this.dp) {
      this.dp.destroy();
      this.dp = null;
      this.elem = null;
    }
  }
});
// CONCATENATED MODULE: ./src/component.vue?vue&type=script&lang=js
 /* harmony default export */ var src_componentvue_type_script_lang_js = (componentvue_type_script_lang_js); 
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/component.vue





/* normalize component */

var component = normalizeComponent(
  src_componentvue_type_script_lang_js,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_component = (component.exports);
// CONCATENATED MODULE: ./src/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatetimePickerPlugin", function() { return src_DatetimePickerPlugin; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "component", function() { return src_component; });


var src_DatetimePickerPlugin = function DatetimePickerPlugin(Vue, params) {
  var name = 'date-picker';
  /* istanbul ignore else */
  if (typeof params === 'string') name = params;

  Vue.component(name, src_component);
};

src_component.install = src_DatetimePickerPlugin;

/* harmony default export */ var src = __webpack_exports__["default"] = (src_component);


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__3__;

/***/ })
/******/ ]);
});

/***/ }),

/***/ "./node_modules/vue-i18n/dist/vue-i18n.esm.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*!
 * vue-i18n v8.9.0 
 * (c) 2019 kazuya kawaguchi
 * Released under the MIT License.
 */
/*  */

/**
 * utilities
 */

function warn (msg, err) {
  if (typeof console !== 'undefined') {
    console.warn('[vue-i18n] ' + msg);
    /* istanbul ignore if */
    if (err) {
      console.warn(err.stack);
    }
  }
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

var toString = Object.prototype.toString;
var OBJECT_STRING = '[object Object]';
function isPlainObject (obj) {
  return toString.call(obj) === OBJECT_STRING
}

function isNull (val) {
  return val === null || val === undefined
}

function parseArgs () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  var locale = null;
  var params = null;
  if (args.length === 1) {
    if (isObject(args[0]) || Array.isArray(args[0])) {
      params = args[0];
    } else if (typeof args[0] === 'string') {
      locale = args[0];
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      locale = args[0];
    }
    /* istanbul ignore if */
    if (isObject(args[1]) || Array.isArray(args[1])) {
      params = args[1];
    }
  }

  return { locale: locale, params: params }
}

function looseClone (obj) {
  return JSON.parse(JSON.stringify(obj))
}

function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

function merge (target) {
  var arguments$1 = arguments;

  var output = Object(target);
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments$1[i];
    if (source !== undefined && source !== null) {
      var key = (void 0);
      for (key in source) {
        if (hasOwn(source, key)) {
          if (isObject(source[key])) {
            output[key] = merge(output[key], source[key]);
          } else {
            output[key] = source[key];
          }
        }
      }
    }
  }
  return output
}

function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/*  */

function extend (Vue) {
  if (!Vue.prototype.hasOwnProperty('$i18n')) {
    // $FlowFixMe
    Object.defineProperty(Vue.prototype, '$i18n', {
      get: function get () { return this._i18n }
    });
  }

  Vue.prototype.$t = function (key) {
    var values = [], len = arguments.length - 1;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];

    var i18n = this.$i18n;
    return i18n._t.apply(i18n, [ key, i18n.locale, i18n._getMessages(), this ].concat( values ))
  };

  Vue.prototype.$tc = function (key, choice) {
    var values = [], len = arguments.length - 2;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];

    var i18n = this.$i18n;
    return i18n._tc.apply(i18n, [ key, i18n.locale, i18n._getMessages(), this, choice ].concat( values ))
  };

  Vue.prototype.$te = function (key, locale) {
    var i18n = this.$i18n;
    return i18n._te(key, i18n.locale, i18n._getMessages(), locale)
  };

  Vue.prototype.$d = function (value) {
    var ref;

    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
    return (ref = this.$i18n).d.apply(ref, [ value ].concat( args ))
  };

  Vue.prototype.$n = function (value) {
    var ref;

    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
    return (ref = this.$i18n).n.apply(ref, [ value ].concat( args ))
  };
}

/*  */

var mixin = {
  beforeCreate: function beforeCreate () {
    var options = this.$options;
    options.i18n = options.i18n || (options.__i18n ? {} : null);

    if (options.i18n) {
      if (options.i18n instanceof VueI18n) {
        // init locale messages via custom blocks
        if (options.__i18n) {
          try {
            var localeMessages = {};
            options.__i18n.forEach(function (resource) {
              localeMessages = merge(localeMessages, JSON.parse(resource));
            });
            Object.keys(localeMessages).forEach(function (locale) {
              options.i18n.mergeLocaleMessage(locale, localeMessages[locale]);
            });
          } catch (e) {
            if (true) {
              warn("Cannot parse locale messages via custom blocks.", e);
            }
          }
        }
        this._i18n = options.i18n;
        this._i18nWatcher = this._i18n.watchI18nData();
        this._i18n.subscribeDataChanging(this);
        this._subscribing = true;
      } else if (isPlainObject(options.i18n)) {
        // component local i18n
        if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {
          options.i18n.root = this.$root;
          options.i18n.formatter = this.$root.$i18n.formatter;
          options.i18n.fallbackLocale = this.$root.$i18n.fallbackLocale;
          options.i18n.silentTranslationWarn = this.$root.$i18n.silentTranslationWarn;
          options.i18n.silentFallbackWarn = this.$root.$i18n.silentFallbackWarn;
          options.i18n.pluralizationRules = this.$root.$i18n.pluralizationRules;
          options.i18n.preserveDirectiveContent = this.$root.$i18n.preserveDirectiveContent;
        }

        // init locale messages via custom blocks
        if (options.__i18n) {
          try {
            var localeMessages$1 = {};
            options.__i18n.forEach(function (resource) {
              localeMessages$1 = merge(localeMessages$1, JSON.parse(resource));
            });
            options.i18n.messages = localeMessages$1;
          } catch (e) {
            if (true) {
              warn("Cannot parse locale messages via custom blocks.", e);
            }
          }
        }

        this._i18n = new VueI18n(options.i18n);
        this._i18nWatcher = this._i18n.watchI18nData();
        this._i18n.subscribeDataChanging(this);
        this._subscribing = true;

        if (options.i18n.sync === undefined || !!options.i18n.sync) {
          this._localeWatcher = this.$i18n.watchLocale();
        }
      } else {
        if (true) {
          warn("Cannot be interpreted 'i18n' option.");
        }
      }
    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {
      // root i18n
      this._i18n = this.$root.$i18n;
      this._i18n.subscribeDataChanging(this);
      this._subscribing = true;
    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {
      // parent i18n
      this._i18n = options.parent.$i18n;
      this._i18n.subscribeDataChanging(this);
      this._subscribing = true;
    }
  },

  beforeDestroy: function beforeDestroy () {
    if (!this._i18n) { return }

    var self = this;
    this.$nextTick(function () {
      if (self._subscribing) {
        self._i18n.unsubscribeDataChanging(self);
        delete self._subscribing;
      }

      if (self._i18nWatcher) {
        self._i18nWatcher();
        self._i18n.destroyVM();
        delete self._i18nWatcher;
      }

      if (self._localeWatcher) {
        self._localeWatcher();
        delete self._localeWatcher;
      }

      self._i18n = null;
    });
  }
};

/*  */

var component = {
  name: 'i18n',
  functional: true,
  props: {
    tag: {
      type: String,
      default: 'span'
    },
    path: {
      type: String,
      required: true
    },
    locale: {
      type: String
    },
    places: {
      type: [Array, Object]
    }
  },
  render: function render (h, ref) {
    var props = ref.props;
    var data = ref.data;
    var children = ref.children;
    var parent = ref.parent;

    var i18n = parent.$i18n;

    children = (children || []).filter(function (child) {
      return child.tag || (child.text = child.text.trim())
    });

    if (!i18n) {
      if (true) {
        warn('Cannot find VueI18n instance!');
      }
      return children
    }

    var path = props.path;
    var locale = props.locale;

    var params = {};
    var places = props.places || {};

    var hasPlaces = Array.isArray(places)
      ? places.length > 0
      : Object.keys(places).length > 0;

    var everyPlace = children.every(function (child) {
      if (child.data && child.data.attrs) {
        var place = child.data.attrs.place;
        return (typeof place !== 'undefined') && place !== ''
      }
    });

    if ("development" !== 'production' && hasPlaces && children.length > 0 && !everyPlace) {
      warn('If places prop is set, all child elements must have place prop set.');
    }

    if (Array.isArray(places)) {
      places.forEach(function (el, i) {
        params[i] = el;
      });
    } else {
      Object.keys(places).forEach(function (key) {
        params[key] = places[key];
      });
    }

    children.forEach(function (child, i) {
      var key = everyPlace
        ? ("" + (child.data.attrs.place))
        : ("" + i);
      params[key] = child;
    });

    return h(props.tag, data, i18n.i(path, locale, params))
  }
};

/*  */

function bind (el, binding, vnode) {
  if (!assert(el, vnode)) { return }

  t(el, binding, vnode);
}

function update (el, binding, vnode, oldVNode) {
  if (!assert(el, vnode)) { return }

  var i18n = vnode.context.$i18n;
  if (localeEqual(el, vnode) &&
    (looseEqual(binding.value, binding.oldValue) &&
     looseEqual(el._localeMessage, i18n.getLocaleMessage(i18n.locale)))) { return }

  t(el, binding, vnode);
}

function unbind (el, binding, vnode, oldVNode) {
  var vm = vnode.context;
  if (!vm) {
    warn('Vue instance does not exists in VNode context');
    return
  }

  var i18n = vnode.context.$i18n || {};
  if (!binding.modifiers.preserve && !i18n.preserveDirectiveContent) {
    el.textContent = '';
  }
  el._vt = undefined;
  delete el['_vt'];
  el._locale = undefined;
  delete el['_locale'];
  el._localeMessage = undefined;
  delete el['_localeMessage'];
}

function assert (el, vnode) {
  var vm = vnode.context;
  if (!vm) {
    warn('Vue instance does not exists in VNode context');
    return false
  }

  if (!vm.$i18n) {
    warn('VueI18n instance does not exists in Vue instance');
    return false
  }

  return true
}

function localeEqual (el, vnode) {
  var vm = vnode.context;
  return el._locale === vm.$i18n.locale
}

function t (el, binding, vnode) {
  var ref$1, ref$2;

  var value = binding.value;

  var ref = parseValue(value);
  var path = ref.path;
  var locale = ref.locale;
  var args = ref.args;
  var choice = ref.choice;
  if (!path && !locale && !args) {
    warn('value type not supported');
    return
  }

  if (!path) {
    warn('`path` is required in v-t directive');
    return
  }

  var vm = vnode.context;
  if (choice) {
    el._vt = el.textContent = (ref$1 = vm.$i18n).tc.apply(ref$1, [ path, choice ].concat( makeParams(locale, args) ));
  } else {
    el._vt = el.textContent = (ref$2 = vm.$i18n).t.apply(ref$2, [ path ].concat( makeParams(locale, args) ));
  }
  el._locale = vm.$i18n.locale;
  el._localeMessage = vm.$i18n.getLocaleMessage(vm.$i18n.locale);
}

function parseValue (value) {
  var path;
  var locale;
  var args;
  var choice;

  if (typeof value === 'string') {
    path = value;
  } else if (isPlainObject(value)) {
    path = value.path;
    locale = value.locale;
    args = value.args;
    choice = value.choice;
  }

  return { path: path, locale: locale, args: args, choice: choice }
}

function makeParams (locale, args) {
  var params = [];

  locale && params.push(locale);
  if (args && (Array.isArray(args) || isPlainObject(args))) {
    params.push(args);
  }

  return params
}

var Vue;

function install (_Vue) {
  /* istanbul ignore if */
  if ("development" !== 'production' && install.installed && _Vue === Vue) {
    warn('already installed.');
    return
  }
  install.installed = true;

  Vue = _Vue;

  var version = (Vue.version && Number(Vue.version.split('.')[0])) || -1;
  /* istanbul ignore if */
  if ("development" !== 'production' && version < 2) {
    warn(("vue-i18n (" + (install.version) + ") need to use Vue 2.0 or later (Vue: " + (Vue.version) + ")."));
    return
  }

  extend(Vue);
  Vue.mixin(mixin);
  Vue.directive('t', { bind: bind, update: update, unbind: unbind });
  Vue.component(component.name, component);

  // use simple mergeStrategies to prevent i18n instance lose '__proto__'
  var strats = Vue.config.optionMergeStrategies;
  strats.i18n = function (parentVal, childVal) {
    return childVal === undefined
      ? parentVal
      : childVal
  };
}

/*  */

var BaseFormatter = function BaseFormatter () {
  this._caches = Object.create(null);
};

BaseFormatter.prototype.interpolate = function interpolate (message, values) {
  if (!values) {
    return [message]
  }
  var tokens = this._caches[message];
  if (!tokens) {
    tokens = parse(message);
    this._caches[message] = tokens;
  }
  return compile(tokens, values)
};



var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;

function parse (format) {
  var tokens = [];
  var position = 0;

  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === '{') {
      if (text) {
        tokens.push({ type: 'text', value: text });
      }

      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== '}') {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === '}';

      var type = RE_TOKEN_LIST_VALUE.test(sub)
        ? 'list'
        : isClosed && RE_TOKEN_NAMED_VALUE.test(sub)
          ? 'named'
          : 'unknown';
      tokens.push({ value: sub, type: type });
    } else if (char === '%') {
      // when found rails i18n syntax, skip text capture
      if (format[(position)] !== '{') {
        text += char;
      }
    } else {
      text += char;
    }
  }

  text && tokens.push({ type: 'text', value: text });

  return tokens
}

function compile (tokens, values) {
  var compiled = [];
  var index = 0;

  var mode = Array.isArray(values)
    ? 'list'
    : isObject(values)
      ? 'named'
      : 'unknown';
  if (mode === 'unknown') { return compiled }

  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break
      case 'named':
        if (mode === 'named') {
          compiled.push((values)[token.value]);
        } else {
          if (true) {
            warn(("Type of token '" + (token.type) + "' and format of value '" + mode + "' don't match!"));
          }
        }
        break
      case 'unknown':
        if (true) {
          warn("Detect 'unknown' type of token!");
        }
        break
    }
    index++;
  }

  return compiled
}

/*  */

/**
 *  Path parser
 *  - Inspired:
 *    Vue.js Path parser
 */

// actions
var APPEND = 0;
var PUSH = 1;
var INC_SUB_PATH_DEPTH = 2;
var PUSH_SUB_PATH = 3;

// states
var BEFORE_PATH = 0;
var IN_PATH = 1;
var BEFORE_IDENT = 2;
var IN_IDENT = 3;
var IN_SUB_PATH = 4;
var IN_SINGLE_QUOTE = 5;
var IN_DOUBLE_QUOTE = 6;
var AFTER_PATH = 7;
var ERROR = 8;

var pathStateMachine = [];

pathStateMachine[BEFORE_PATH] = {
  'ws': [BEFORE_PATH],
  'ident': [IN_IDENT, APPEND],
  '[': [IN_SUB_PATH],
  'eof': [AFTER_PATH]
};

pathStateMachine[IN_PATH] = {
  'ws': [IN_PATH],
  '.': [BEFORE_IDENT],
  '[': [IN_SUB_PATH],
  'eof': [AFTER_PATH]
};

pathStateMachine[BEFORE_IDENT] = {
  'ws': [BEFORE_IDENT],
  'ident': [IN_IDENT, APPEND],
  '0': [IN_IDENT, APPEND],
  'number': [IN_IDENT, APPEND]
};

pathStateMachine[IN_IDENT] = {
  'ident': [IN_IDENT, APPEND],
  '0': [IN_IDENT, APPEND],
  'number': [IN_IDENT, APPEND],
  'ws': [IN_PATH, PUSH],
  '.': [BEFORE_IDENT, PUSH],
  '[': [IN_SUB_PATH, PUSH],
  'eof': [AFTER_PATH, PUSH]
};

pathStateMachine[IN_SUB_PATH] = {
  "'": [IN_SINGLE_QUOTE, APPEND],
  '"': [IN_DOUBLE_QUOTE, APPEND],
  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],
  ']': [IN_PATH, PUSH_SUB_PATH],
  'eof': ERROR,
  'else': [IN_SUB_PATH, APPEND]
};

pathStateMachine[IN_SINGLE_QUOTE] = {
  "'": [IN_SUB_PATH, APPEND],
  'eof': ERROR,
  'else': [IN_SINGLE_QUOTE, APPEND]
};

pathStateMachine[IN_DOUBLE_QUOTE] = {
  '"': [IN_SUB_PATH, APPEND],
  'eof': ERROR,
  'else': [IN_DOUBLE_QUOTE, APPEND]
};

/**
 * Check if an expression is a literal value.
 */

var literalValueRE = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
function isLiteral (exp) {
  return literalValueRE.test(exp)
}

/**
 * Strip quotes from a string
 */

function stripQuotes (str) {
  var a = str.charCodeAt(0);
  var b = str.charCodeAt(str.length - 1);
  return a === b && (a === 0x22 || a === 0x27)
    ? str.slice(1, -1)
    : str
}

/**
 * Determine the type of a character in a keypath.
 */

function getPathCharType (ch) {
  if (ch === undefined || ch === null) { return 'eof' }

  var code = ch.charCodeAt(0);

  switch (code) {
    case 0x5B: // [
    case 0x5D: // ]
    case 0x2E: // .
    case 0x22: // "
    case 0x27: // '
      return ch

    case 0x5F: // _
    case 0x24: // $
    case 0x2D: // -
      return 'ident'

    case 0x20: // Space
    case 0x09: // Tab
    case 0x0A: // Newline
    case 0x0D: // Return
    case 0xA0:  // No-break space
    case 0xFEFF:  // Byte Order Mark
    case 0x2028:  // Line Separator
    case 0x2029:  // Paragraph Separator
      return 'ws'
  }

  return 'ident'
}

/**
 * Format a subPath, return its plain form if it is
 * a literal string or number. Otherwise prepend the
 * dynamic indicator (*).
 */

function formatSubPath (path) {
  var trimmed = path.trim();
  // invalid leading 0
  if (path.charAt(0) === '0' && isNaN(path)) { return false }

  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed
}

/**
 * Parse a string path into an array of segments
 */

function parse$1 (path) {
  var keys = [];
  var index = -1;
  var mode = BEFORE_PATH;
  var subPathDepth = 0;
  var c;
  var key;
  var newChar;
  var type;
  var transition;
  var action;
  var typeMap;
  var actions = [];

  actions[PUSH] = function () {
    if (key !== undefined) {
      keys.push(key);
      key = undefined;
    }
  };

  actions[APPEND] = function () {
    if (key === undefined) {
      key = newChar;
    } else {
      key += newChar;
    }
  };

  actions[INC_SUB_PATH_DEPTH] = function () {
    actions[APPEND]();
    subPathDepth++;
  };

  actions[PUSH_SUB_PATH] = function () {
    if (subPathDepth > 0) {
      subPathDepth--;
      mode = IN_SUB_PATH;
      actions[APPEND]();
    } else {
      subPathDepth = 0;
      key = formatSubPath(key);
      if (key === false) {
        return false
      } else {
        actions[PUSH]();
      }
    }
  };

  function maybeUnescapeQuote () {
    var nextChar = path[index + 1];
    if ((mode === IN_SINGLE_QUOTE && nextChar === "'") ||
      (mode === IN_DOUBLE_QUOTE && nextChar === '"')) {
      index++;
      newChar = '\\' + nextChar;
      actions[APPEND]();
      return true
    }
  }

  while (mode !== null) {
    index++;
    c = path[index];

    if (c === '\\' && maybeUnescapeQuote()) {
      continue
    }

    type = getPathCharType(c);
    typeMap = pathStateMachine[mode];
    transition = typeMap[type] || typeMap['else'] || ERROR;

    if (transition === ERROR) {
      return // parse error
    }

    mode = transition[0];
    action = actions[transition[1]];
    if (action) {
      newChar = transition[2];
      newChar = newChar === undefined
        ? c
        : newChar;
      if (action() === false) {
        return
      }
    }

    if (mode === AFTER_PATH) {
      return keys
    }
  }
}





var I18nPath = function I18nPath () {
  this._cache = Object.create(null);
};

/**
 * External parse that check for a cache hit first
 */
I18nPath.prototype.parsePath = function parsePath (path) {
  var hit = this._cache[path];
  if (!hit) {
    hit = parse$1(path);
    if (hit) {
      this._cache[path] = hit;
    }
  }
  return hit || []
};

/**
 * Get path value from path string
 */
I18nPath.prototype.getPathValue = function getPathValue (obj, path) {
  if (!isObject(obj)) { return null }

  var paths = this.parsePath(path);
  if (paths.length === 0) {
    return null
  } else {
    var length = paths.length;
    var last = obj;
    var i = 0;
    while (i < length) {
      var value = last[paths[i]];
      if (value === undefined) {
        return null
      }
      last = value;
      i++;
    }

    return last
  }
};

/*  */



var numberFormatKeys = [
  'style',
  'currency',
  'currencyDisplay',
  'useGrouping',
  'minimumIntegerDigits',
  'minimumFractionDigits',
  'maximumFractionDigits',
  'minimumSignificantDigits',
  'maximumSignificantDigits',
  'localeMatcher',
  'formatMatcher'
];
var linkKeyMatcher = /(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g;
var linkKeyPrefixMatcher = /^@(?:\.([a-z]+))?:/;
var bracketsMatcher = /[()]/g;
var formatters = {
  'upper': function (str) { return str.toLocaleUpperCase(); },
  'lower': function (str) { return str.toLocaleLowerCase(); }
};

var defaultFormatter = new BaseFormatter();

var VueI18n = function VueI18n (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #290
  /* istanbul ignore if */
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  var locale = options.locale || 'en-US';
  var fallbackLocale = options.fallbackLocale || 'en-US';
  var messages = options.messages || {};
  var dateTimeFormats = options.dateTimeFormats || {};
  var numberFormats = options.numberFormats || {};

  this._vm = null;
  this._formatter = options.formatter || defaultFormatter;
  this._missing = options.missing || null;
  this._root = options.root || null;
  this._sync = options.sync === undefined ? true : !!options.sync;
  this._fallbackRoot = options.fallbackRoot === undefined
    ? true
    : !!options.fallbackRoot;
  this._silentTranslationWarn = options.silentTranslationWarn === undefined
    ? false
    : !!options.silentTranslationWarn;
  this._silentFallbackWarn = options.silentFallbackWarn === undefined
    ? false
    : !!options.silentFallbackWarn;
  this._dateTimeFormatters = {};
  this._numberFormatters = {};
  this._path = new I18nPath();
  this._dataListeners = [];
  this._preserveDirectiveContent = options.preserveDirectiveContent === undefined
    ? false
    : !!options.preserveDirectiveContent;
  this.pluralizationRules = options.pluralizationRules || {};

  this._exist = function (message, key) {
    if (!message || !key) { return false }
    if (!isNull(this$1._path.getPathValue(message, key))) { return true }
    // fallback for flat key
    if (message[key]) { return true }
    return false
  };

  this._initVM({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    dateTimeFormats: dateTimeFormats,
    numberFormats: numberFormats
  });
};

var prototypeAccessors = { vm: { configurable: true },messages: { configurable: true },dateTimeFormats: { configurable: true },numberFormats: { configurable: true },availableLocales: { configurable: true },locale: { configurable: true },fallbackLocale: { configurable: true },missing: { configurable: true },formatter: { configurable: true },silentTranslationWarn: { configurable: true },silentFallbackWarn: { configurable: true },preserveDirectiveContent: { configurable: true } };

VueI18n.prototype._initVM = function _initVM (data) {
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  this._vm = new Vue({ data: data });
  Vue.config.silent = silent;
};

VueI18n.prototype.destroyVM = function destroyVM () {
  this._vm.$destroy();
};

VueI18n.prototype.subscribeDataChanging = function subscribeDataChanging (vm) {
  this._dataListeners.push(vm);
};

VueI18n.prototype.unsubscribeDataChanging = function unsubscribeDataChanging (vm) {
  remove(this._dataListeners, vm);
};

VueI18n.prototype.watchI18nData = function watchI18nData () {
  var self = this;
  return this._vm.$watch('$data', function () {
    var i = self._dataListeners.length;
    while (i--) {
      Vue.nextTick(function () {
        self._dataListeners[i] && self._dataListeners[i].$forceUpdate();
      });
    }
  }, { deep: true })
};

VueI18n.prototype.watchLocale = function watchLocale () {
  /* istanbul ignore if */
  if (!this._sync || !this._root) { return null }
  var target = this._vm;
  return this._root.$i18n.vm.$watch('locale', function (val) {
    target.$set(target, 'locale', val);
    target.$forceUpdate();
  }, { immediate: true })
};

prototypeAccessors.vm.get = function () { return this._vm };

prototypeAccessors.messages.get = function () { return looseClone(this._getMessages()) };
prototypeAccessors.dateTimeFormats.get = function () { return looseClone(this._getDateTimeFormats()) };
prototypeAccessors.numberFormats.get = function () { return looseClone(this._getNumberFormats()) };
prototypeAccessors.availableLocales.get = function () { return Object.keys(this.messages).sort() };

prototypeAccessors.locale.get = function () { return this._vm.locale };
prototypeAccessors.locale.set = function (locale) {
  this._vm.$set(this._vm, 'locale', locale);
};

prototypeAccessors.fallbackLocale.get = function () { return this._vm.fallbackLocale };
prototypeAccessors.fallbackLocale.set = function (locale) {
  this._vm.$set(this._vm, 'fallbackLocale', locale);
};

prototypeAccessors.missing.get = function () { return this._missing };
prototypeAccessors.missing.set = function (handler) { this._missing = handler; };

prototypeAccessors.formatter.get = function () { return this._formatter };
prototypeAccessors.formatter.set = function (formatter) { this._formatter = formatter; };

prototypeAccessors.silentTranslationWarn.get = function () { return this._silentTranslationWarn };
prototypeAccessors.silentTranslationWarn.set = function (silent) { this._silentTranslationWarn = silent; };

prototypeAccessors.silentFallbackWarn.get = function () { return this._silentFallbackWarn };
prototypeAccessors.silentFallbackWarn.set = function (silent) { this._silentFallbackWarn = silent; };

prototypeAccessors.preserveDirectiveContent.get = function () { return this._preserveDirectiveContent };
prototypeAccessors.preserveDirectiveContent.set = function (preserve) { this._preserveDirectiveContent = preserve; };

VueI18n.prototype._getMessages = function _getMessages () { return this._vm.messages };
VueI18n.prototype._getDateTimeFormats = function _getDateTimeFormats () { return this._vm.dateTimeFormats };
VueI18n.prototype._getNumberFormats = function _getNumberFormats () { return this._vm.numberFormats };

VueI18n.prototype._warnDefault = function _warnDefault (locale, key, result, vm, values) {
  if (!isNull(result)) { return result }
  if (this._missing) {
    var missingRet = this._missing.apply(null, [locale, key, vm, values]);
    if (typeof missingRet === 'string') {
      return missingRet
    }
  } else {
    if ("development" !== 'production' && !this._silentTranslationWarn) {
      warn(
        "Cannot translate the value of keypath '" + key + "'. " +
        'Use the value of keypath as default.'
      );
    }
  }
  return key
};

VueI18n.prototype._isFallbackRoot = function _isFallbackRoot (val) {
  return !val && !isNull(this._root) && this._fallbackRoot
};

VueI18n.prototype._isSilentFallback = function _isSilentFallback (locale) {
  return this._silentFallbackWarn && (this._isFallbackRoot() || locale !== this.fallbackLocale)
};

VueI18n.prototype._interpolate = function _interpolate (
  locale,
  message,
  key,
  host,
  interpolateMode,
  values,
  visitedLinkStack
) {
  if (!message) { return null }

  var pathRet = this._path.getPathValue(message, key);
  if (Array.isArray(pathRet) || isPlainObject(pathRet)) { return pathRet }

  var ret;
  if (isNull(pathRet)) {
    /* istanbul ignore else */
    if (isPlainObject(message)) {
      ret = message[key];
      if (typeof ret !== 'string') {
        if ("development" !== 'production' && !this._silentTranslationWarn && !this._isSilentFallback(locale)) {
          warn(("Value of key '" + key + "' is not a string!"));
        }
        return null
      }
    } else {
      return null
    }
  } else {
    /* istanbul ignore else */
    if (typeof pathRet === 'string') {
      ret = pathRet;
    } else {
      if ("development" !== 'production' && !this._silentTranslationWarn && !this._isSilentFallback(locale)) {
        warn(("Value of key '" + key + "' is not a string!"));
      }
      return null
    }
  }

  // Check for the existence of links within the translated string
  if (ret.indexOf('@:') >= 0 || ret.indexOf('@.') >= 0) {
    ret = this._link(locale, message, ret, host, 'raw', values, visitedLinkStack);
  }

  return this._render(ret, interpolateMode, values, key)
};

VueI18n.prototype._link = function _link (
  locale,
  message,
  str,
  host,
  interpolateMode,
  values,
  visitedLinkStack
) {
    var this$1 = this;

  var ret = str;

  // Match all the links within the local
  // We are going to replace each of
  // them with its translation
  var matches = ret.match(linkKeyMatcher);
  for (var idx in matches) {
    // ie compatible: filter custom array
    // prototype method
    if (!matches.hasOwnProperty(idx)) {
      continue
    }
    var link = matches[idx];
    var linkKeyPrefixMatches = link.match(linkKeyPrefixMatcher);
    var linkPrefix = linkKeyPrefixMatches[0];
      var formatterName = linkKeyPrefixMatches[1];

    // Remove the leading @:, @.case: and the brackets
    var linkPlaceholder = link.replace(linkPrefix, '').replace(bracketsMatcher, '');

    if (visitedLinkStack.includes(linkPlaceholder)) {
      if (true) {
        warn(("Circular reference found. \"" + link + "\" is already visited in the chain of " + (visitedLinkStack.reverse().join(' <- '))));
      }
      return ret
    }
    visitedLinkStack.push(linkPlaceholder);

    // Translate the link
    var translated = this$1._interpolate(
      locale, message, linkPlaceholder, host,
      interpolateMode === 'raw' ? 'string' : interpolateMode,
      interpolateMode === 'raw' ? undefined : values,
      visitedLinkStack
    );

    if (this$1._isFallbackRoot(translated)) {
      if ("development" !== 'production' && !this$1._silentTranslationWarn) {
        warn(("Fall back to translate the link placeholder '" + linkPlaceholder + "' with root locale."));
      }
      /* istanbul ignore if */
      if (!this$1._root) { throw Error('unexpected error') }
      var root = this$1._root.$i18n;
      translated = root._translate(
        root._getMessages(), root.locale, root.fallbackLocale,
        linkPlaceholder, host, interpolateMode, values
      );
    }
    translated = this$1._warnDefault(
      locale, linkPlaceholder, translated, host,
      Array.isArray(values) ? values : [values]
    );
    if (formatters.hasOwnProperty(formatterName)) {
      translated = formatters[formatterName](translated);
    }

    visitedLinkStack.pop();

    // Replace the link with the translated
    ret = !translated ? ret : ret.replace(link, translated);
  }

  return ret
};

VueI18n.prototype._render = function _render (message, interpolateMode, values, path) {
  var ret = this._formatter.interpolate(message, values, path);

  // If the custom formatter refuses to work - apply the default one
  if (!ret) {
    ret = defaultFormatter.interpolate(message, values, path);
  }

  // if interpolateMode is **not** 'string' ('row'),
  // return the compiled data (e.g. ['foo', VNode, 'bar']) with formatter
  return interpolateMode === 'string' ? ret.join('') : ret
};

VueI18n.prototype._translate = function _translate (
  messages,
  locale,
  fallback,
  key,
  host,
  interpolateMode,
  args
) {
  var res =
    this._interpolate(locale, messages[locale], key, host, interpolateMode, args, [key]);
  if (!isNull(res)) { return res }

  res = this._interpolate(fallback, messages[fallback], key, host, interpolateMode, args, [key]);
  if (!isNull(res)) {
    if ("development" !== 'production' && !this._silentTranslationWarn && !this._silentFallbackWarn) {
      warn(("Fall back to translate the keypath '" + key + "' with '" + fallback + "' locale."));
    }
    return res
  } else {
    return null
  }
};

VueI18n.prototype._t = function _t (key, _locale, messages, host) {
    var ref;

    var values = [], len = arguments.length - 4;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 4 ];
  if (!key) { return '' }

  var parsedArgs = parseArgs.apply(void 0, values);
  var locale = parsedArgs.locale || _locale;

  var ret = this._translate(
    messages, locale, this.fallbackLocale, key,
    host, 'string', parsedArgs.params
  );
  if (this._isFallbackRoot(ret)) {
    if ("development" !== 'production' && !this._silentTranslationWarn && !this._silentFallbackWarn) {
      warn(("Fall back to translate the keypath '" + key + "' with root locale."));
    }
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return (ref = this._root).$t.apply(ref, [ key ].concat( values ))
  } else {
    return this._warnDefault(locale, key, ret, host, values)
  }
};

VueI18n.prototype.t = function t (key) {
    var ref;

    var values = [], len = arguments.length - 1;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];
  return (ref = this)._t.apply(ref, [ key, this.locale, this._getMessages(), null ].concat( values ))
};

VueI18n.prototype._i = function _i (key, locale, messages, host, values) {
  var ret =
    this._translate(messages, locale, this.fallbackLocale, key, host, 'raw', values);
  if (this._isFallbackRoot(ret)) {
    if ("development" !== 'production' && !this._silentTranslationWarn) {
      warn(("Fall back to interpolate the keypath '" + key + "' with root locale."));
    }
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n.i(key, locale, values)
  } else {
    return this._warnDefault(locale, key, ret, host, [values])
  }
};

VueI18n.prototype.i = function i (key, locale, values) {
  /* istanbul ignore if */
  if (!key) { return '' }

  if (typeof locale !== 'string') {
    locale = this.locale;
  }

  return this._i(key, locale, this._getMessages(), null, values)
};

VueI18n.prototype._tc = function _tc (
  key,
  _locale,
  messages,
  host,
  choice
) {
    var ref;

    var values = [], len = arguments.length - 5;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 5 ];
  if (!key) { return '' }
  if (choice === undefined) {
    choice = 1;
  }

  var predefined = { 'count': choice, 'n': choice };
  var parsedArgs = parseArgs.apply(void 0, values);
  parsedArgs.params = Object.assign(predefined, parsedArgs.params);
  values = parsedArgs.locale === null ? [parsedArgs.params] : [parsedArgs.locale, parsedArgs.params];
  return this.fetchChoice((ref = this)._t.apply(ref, [ key, _locale, messages, host ].concat( values )), choice)
};

VueI18n.prototype.fetchChoice = function fetchChoice (message, choice) {
  /* istanbul ignore if */
  if (!message && typeof message !== 'string') { return null }
  var choices = message.split('|');

  choice = this.getChoiceIndex(choice, choices.length);
  if (!choices[choice]) { return message }
  return choices[choice].trim()
};

/**
 * @param choice {number} a choice index given by the input to $tc: `$tc('path.to.rule', choiceIndex)`
 * @param choicesLength {number} an overall amount of available choices
 * @returns a final choice index
*/
VueI18n.prototype.getChoiceIndex = function getChoiceIndex (choice, choicesLength) {
  // Default (old) getChoiceIndex implementation - english-compatible
  var defaultImpl = function (_choice, _choicesLength) {
    _choice = Math.abs(_choice);

    if (_choicesLength === 2) {
      return _choice
        ? _choice > 1
          ? 1
          : 0
        : 1
    }

    return _choice ? Math.min(_choice, 2) : 0
  };

  if (this.locale in this.pluralizationRules) {
    return this.pluralizationRules[this.locale].apply(this, [choice, choicesLength])
  } else {
    return defaultImpl(choice, choicesLength)
  }
};

VueI18n.prototype.tc = function tc (key, choice) {
    var ref;

    var values = [], len = arguments.length - 2;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];
  return (ref = this)._tc.apply(ref, [ key, this.locale, this._getMessages(), null, choice ].concat( values ))
};

VueI18n.prototype._te = function _te (key, locale, messages) {
    var args = [], len = arguments.length - 3;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 3 ];

  var _locale = parseArgs.apply(void 0, args).locale || locale;
  return this._exist(messages[_locale], key)
};

VueI18n.prototype.te = function te (key, locale) {
  return this._te(key, this.locale, this._getMessages(), locale)
};

VueI18n.prototype.getLocaleMessage = function getLocaleMessage (locale) {
  return looseClone(this._vm.messages[locale] || {})
};

VueI18n.prototype.setLocaleMessage = function setLocaleMessage (locale, message) {
  this._vm.$set(this._vm.messages, locale, message);
};

VueI18n.prototype.mergeLocaleMessage = function mergeLocaleMessage (locale, message) {
  this._vm.$set(this._vm.messages, locale, merge(this._vm.messages[locale] || {}, message));
};

VueI18n.prototype.getDateTimeFormat = function getDateTimeFormat (locale) {
  return looseClone(this._vm.dateTimeFormats[locale] || {})
};

VueI18n.prototype.setDateTimeFormat = function setDateTimeFormat (locale, format) {
  this._vm.$set(this._vm.dateTimeFormats, locale, format);
};

VueI18n.prototype.mergeDateTimeFormat = function mergeDateTimeFormat (locale, format) {
  this._vm.$set(this._vm.dateTimeFormats, locale, merge(this._vm.dateTimeFormats[locale] || {}, format));
};

VueI18n.prototype._localizeDateTime = function _localizeDateTime (
  value,
  locale,
  fallback,
  dateTimeFormats,
  key
) {
  var _locale = locale;
  var formats = dateTimeFormats[_locale];

  // fallback locale
  if (isNull(formats) || isNull(formats[key])) {
    if ("development" !== 'production' && !this._silentTranslationWarn) {
      warn(("Fall back to '" + fallback + "' datetime formats from '" + locale + " datetime formats."));
    }
    _locale = fallback;
    formats = dateTimeFormats[_locale];
  }

  if (isNull(formats) || isNull(formats[key])) {
    return null
  } else {
    var format = formats[key];
    var id = _locale + "__" + key;
    var formatter = this._dateTimeFormatters[id];
    if (!formatter) {
      formatter = this._dateTimeFormatters[id] = new Intl.DateTimeFormat(_locale, format);
    }
    return formatter.format(value)
  }
};

VueI18n.prototype._d = function _d (value, locale, key) {
  /* istanbul ignore if */
  if ("development" !== 'production' && !VueI18n.availabilities.dateTimeFormat) {
    warn('Cannot format a Date value due to not supported Intl.DateTimeFormat.');
    return ''
  }

  if (!key) {
    return new Intl.DateTimeFormat(locale).format(value)
  }

  var ret =
    this._localizeDateTime(value, locale, this.fallbackLocale, this._getDateTimeFormats(), key);
  if (this._isFallbackRoot(ret)) {
    if ("development" !== 'production' && !this._silentTranslationWarn) {
      warn(("Fall back to datetime localization of root: key '" + key + "' ."));
    }
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n.d(value, key, locale)
  } else {
    return ret || ''
  }
};

VueI18n.prototype.d = function d (value) {
    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  var locale = this.locale;
  var key = null;

  if (args.length === 1) {
    if (typeof args[0] === 'string') {
      key = args[0];
    } else if (isObject(args[0])) {
      if (args[0].locale) {
        locale = args[0].locale;
      }
      if (args[0].key) {
        key = args[0].key;
      }
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      key = args[0];
    }
    if (typeof args[1] === 'string') {
      locale = args[1];
    }
  }

  return this._d(value, locale, key)
};

VueI18n.prototype.getNumberFormat = function getNumberFormat (locale) {
  return looseClone(this._vm.numberFormats[locale] || {})
};

VueI18n.prototype.setNumberFormat = function setNumberFormat (locale, format) {
  this._vm.$set(this._vm.numberFormats, locale, format);
};

VueI18n.prototype.mergeNumberFormat = function mergeNumberFormat (locale, format) {
  this._vm.$set(this._vm.numberFormats, locale, merge(this._vm.numberFormats[locale] || {}, format));
};

VueI18n.prototype._localizeNumber = function _localizeNumber (
  value,
  locale,
  fallback,
  numberFormats,
  key,
  options
) {
  var _locale = locale;
  var formats = numberFormats[_locale];

  // fallback locale
  if (isNull(formats) || isNull(formats[key])) {
    if ("development" !== 'production' && !this._silentTranslationWarn) {
      warn(("Fall back to '" + fallback + "' number formats from '" + locale + " number formats."));
    }
    _locale = fallback;
    formats = numberFormats[_locale];
  }

  if (isNull(formats) || isNull(formats[key])) {
    return null
  } else {
    var format = formats[key];

    var formatter;
    if (options) {
      // If options specified - create one time number formatter
      formatter = new Intl.NumberFormat(_locale, Object.assign({}, format, options));
    } else {
      var id = _locale + "__" + key;
      formatter = this._numberFormatters[id];
      if (!formatter) {
        formatter = this._numberFormatters[id] = new Intl.NumberFormat(_locale, format);
      }
    }
    return formatter.format(value)
  }
};

VueI18n.prototype._n = function _n (value, locale, key, options) {
  /* istanbul ignore if */
  if (!VueI18n.availabilities.numberFormat) {
    if (true) {
      warn('Cannot format a Number value due to not supported Intl.NumberFormat.');
    }
    return ''
  }

  if (!key) {
    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);
    return nf.format(value)
  }

  var ret =
    this._localizeNumber(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);
  if (this._isFallbackRoot(ret)) {
    if ("development" !== 'production' && !this._silentTranslationWarn) {
      warn(("Fall back to number localization of root: key '" + key + "' ."));
    }
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n.n(value, Object.assign({}, { key: key, locale: locale }, options))
  } else {
    return ret || ''
  }
};

VueI18n.prototype.n = function n (value) {
    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  var locale = this.locale;
  var key = null;
  var options = null;

  if (args.length === 1) {
    if (typeof args[0] === 'string') {
      key = args[0];
    } else if (isObject(args[0])) {
      if (args[0].locale) {
        locale = args[0].locale;
      }
      if (args[0].key) {
        key = args[0].key;
      }

      // Filter out number format options only
      options = Object.keys(args[0]).reduce(function (acc, key) {
          var obj;

        if (numberFormatKeys.includes(key)) {
          return Object.assign({}, acc, ( obj = {}, obj[key] = args[0][key], obj ))
        }
        return acc
      }, null);
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      key = args[0];
    }
    if (typeof args[1] === 'string') {
      locale = args[1];
    }
  }

  return this._n(value, locale, key, options)
};

Object.defineProperties( VueI18n.prototype, prototypeAccessors );

var availabilities;
// $FlowFixMe
Object.defineProperty(VueI18n, 'availabilities', {
  get: function get () {
    if (!availabilities) {
      var intlDefined = typeof Intl !== 'undefined';
      availabilities = {
        dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',
        numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'
      };
    }

    return availabilities
  }
});

VueI18n.install = install;
VueI18n.version = '8.9.0';

/* harmony default export */ __webpack_exports__["a"] = (VueI18n);


/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-0422ebea\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.permissions.title")) +
                        "\n                        "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "box-title" }, [
        _vm._v(
          _vm._s(_vm.$t("global.permissions.title")) +
            " " +
            _vm._s(_vm.$t("global.app_list"))
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _c(
          "button",
          {
            staticClass: "btn btn-default btn-sm",
            attrs: { type: "button" },
            on: { click: _vm.fetchData }
          },
          [
            _c("i", {
              staticClass: "fa fa-refresh",
              class: { "fa-spin": _vm.loading }
            }),
            _vm._v(
              " " +
                _vm._s(_vm.$t("global.app_refresh")) +
                "\n                    "
            )
          ]
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "panel-body table-responsive" },
          [
            _vm.loading
              ? _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-4 col-xs-offset-4" }, [
                    _c("div", { staticClass: "alert text-center" }, [
                      _c("i", { staticClass: "fa fa-spin fa-refresh" }),
                      _vm._v(
                        " " +
                          _vm._s(_vm.$t("global.app_loading")) +
                          "\n                                "
                      )
                    ])
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            !_vm.loading
              ? _c("datatable", {
                  attrs: {
                    columns: _vm.columns,
                    data: _vm.data,
                    total: _vm.total,
                    query: _vm.query,
                    xprops: _vm.xprops
                  }
                })
              : _vm._e()
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0422ebea", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-04997954\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "button",
    {
      staticClass: "vue-btn",
      class: _vm.getBackgroundClass,
      attrs: { type: _vm.getType }
    },
    [
      _c("transition", { attrs: { name: "fade", mode: "out-in" } }, [
        _c("div", { class: _vm.getSpinnerClass })
      ]),
      _vm._v(" "),
      _vm.showSlot ? _vm._t("default") : _vm._e()
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-04997954", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-0d1c0911\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.value !== null
      ? _c("span", { staticClass: "label label-info" }, [
          _vm._v(
            "\n        " +
              _vm._s(_vm.value[_vm.$root.relationships[_vm.field]]) +
              "\n    "
          )
        ])
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0d1c0911", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-15a01839\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/Alert.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "col-md-12", staticStyle: { padding: "0px" } },
    [
      _vm.message
        ? _c("div", { staticClass: "alert", class: "alert-" + _vm.color }, [
            _vm.errors
              ? _c(
                  "ul",
                  { staticClass: "list-unstyled" },
                  _vm._l(_vm.errors, function(value, key) {
                    return _c("li", [
                      _vm._v(
                        "\n                " +
                          _vm._s(value[0]) +
                          "\n            "
                      )
                    ])
                  }),
                  0
                )
              : _vm._e()
          ])
        : _vm._e()
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-15a01839", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-15e143d0\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "content-wrapper", staticStyle: { "min-height": "960px" } },
    [
      _vm._m(0),
      _vm._v(" "),
      _c("section", { staticClass: "content" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-xs-12" }, [
            _c(
              "form",
              {
                attrs: { novalidate: "" },
                on: {
                  submit: function($event) {
                    $event.preventDefault()
                    return _vm.submitForm($event)
                  }
                }
              },
              [
                _c(
                  "div",
                  { staticClass: "box" },
                  [
                    _vm._m(1),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "box-body" },
                      [_c("back-buttton")],
                      1
                    ),
                    _vm._v(" "),
                    _c("bootstrap-alert"),
                    _vm._v(" "),
                    _c("div", { staticClass: "box-body" }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "name" } }, [
                          _vm._v("Name *")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "text",
                            name: "name",
                            placeholder: "Enter Name *"
                          },
                          domProps: { value: _vm.item.name },
                          on: { input: _vm.updateName }
                        })
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "email" } }, [
                          _vm._v("Email *")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "email",
                            name: "email",
                            placeholder: "Enter Email *"
                          },
                          domProps: { value: _vm.item.email },
                          on: { input: _vm.updateEmail }
                        })
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "password" } }, [
                          _vm._v("Password *")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "password",
                            name: "password",
                            placeholder: "Enter Password *"
                          },
                          on: { input: _vm.updatePassword }
                        })
                      ]),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "form-group" },
                        [
                          _c("label", { attrs: { for: "role" } }, [
                            _vm._v("Role *")
                          ]),
                          _vm._v(" "),
                          _c("v-select", {
                            attrs: {
                              name: "role",
                              label: "title",
                              value: _vm.item.role,
                              options: _vm.rolesAll,
                              multiple: ""
                            },
                            on: { input: _vm.updateRole }
                          })
                        ],
                        1
                      )
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "box-footer" },
                      [
                        _c(
                          "vue-button-spinner",
                          {
                            staticClass: "btn btn-primary btn-sm",
                            attrs: {
                              isLoading: _vm.loading,
                              disabled: _vm.loading
                            }
                          },
                          [
                            _vm._v(
                              "\n                                Save\n                            "
                            )
                          ]
                        )
                      ],
                      1
                    )
                  ],
                  1
                )
              ]
            )
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("section", { staticClass: "content-header" }, [
      _c("h1", [_vm._v("Users")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-header with-border" }, [
      _c("h3", { staticClass: "box-title" }, [_vm._v("Create")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-15e143d0", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-1a272ffb\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid" },
      [
        _c("ol", { staticClass: "breadcrumb" }, [
          _c(
            "li",
            { staticClass: "breadcrumb-item" },
            [
              _vm.$can(_vm.xprops.role_prefix + "access")
                ? _c(
                    "router-link",
                    { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                    [
                      _vm._v(
                        _vm._s(_vm.$t("global.roles.title")) +
                          "\n                    "
                      )
                    ]
                  )
                : _vm._e()
            ],
            1
          ),
          _vm._v(" "),
          _c("li", { staticClass: "breadcrumb-item active" }, [
            _vm._v(_vm._s(_vm.$t("global.app_create")))
          ])
        ]),
        _vm._v(" "),
        _c("bootstrap-alert"),
        _vm._v(" "),
        _c("h3", { staticClass: "page-title" }, [
          _vm._v(_vm._s(_vm.$t("global.roles.title")))
        ]),
        _vm._v(" "),
        _c(
          "form",
          {
            attrs: { novalidate: "" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                return _vm.submitForm($event)
              }
            }
          },
          [
            _c("div", { staticClass: "panel panel-default" }, [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_create")))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c("div", { staticClass: "form-line" }, [
                      _c("label", { attrs: { for: "name" } }, [
                        _vm._v("Title *")
                      ]),
                      _vm._v(" "),
                      _c("input", {
                        staticClass: "form-control",
                        attrs: {
                          type: "text",
                          name: "title",
                          placeholder: "Enter Title *"
                        },
                        domProps: { value: _vm.item.title },
                        on: { input: _vm.updateTitle }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c(
                      "div",
                      { staticClass: "form-line" },
                      [
                        _c("label", { attrs: { for: "name" } }, [
                          _vm._v("Permissions *")
                        ]),
                        _vm._v(" "),
                        _c("v-select", {
                          attrs: {
                            name: "permission",
                            label: "title",
                            value: _vm.item.permission,
                            options: _vm.permissionsAll,
                            multiple: ""
                          },
                          on: { input: _vm.updatePermission }
                        })
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "col-xs-12 form-group" },
                    [
                      _c(
                        "vue-button-spinner",
                        {
                          staticClass: "btn btn-danger wave-effect",
                          attrs: {
                            isLoading: _vm.loading,
                            disabled: _vm.loading
                          }
                        },
                        [
                          _vm._v(
                            "\n                        Save\n                        "
                          )
                        ]
                      ),
                      _vm._v(
                        "\n                         | \n                        "
                      ),
                      _c("back-buttton")
                    ],
                    1
                  )
                ])
              ])
            ])
          ]
        )
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1a272ffb", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-1dfc2188\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "content-wrapper", staticStyle: { "min-height": "960px" } },
    [
      _vm._m(0),
      _vm._v(" "),
      _c("section", { staticClass: "content" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-xs-12" }, [
            _c("div", { staticClass: "box" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "box-body" }, [_c("back-buttton")], 1),
              _vm._v(" "),
              _c("div", { staticClass: "box-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-6" }, [
                    _c(
                      "table",
                      { staticClass: "table table-bordered table-striped" },
                      [
                        _c("tbody", [
                          _c("tr", [
                            _c("th", [_vm._v("#")]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(_vm.item.id))])
                          ]),
                          _vm._v(" "),
                          _c("tr", [
                            _c("th", [_vm._v("Title")]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(_vm.item.title))])
                          ]),
                          _vm._v(" "),
                          _c("tr", [
                            _c("th", [_vm._v("Permissions")]),
                            _vm._v(" "),
                            _c(
                              "td",
                              _vm._l(_vm.item.permission, function(permission) {
                                return _c(
                                  "span",
                                  { staticClass: "label label-info" },
                                  [
                                    _vm._v(
                                      "\n                                                " +
                                        _vm._s(permission.title) +
                                        "\n                                            "
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ])
                        ])
                      ]
                    )
                  ])
                ])
              ])
            ])
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("section", { staticClass: "content-header" }, [
      _c("h1", [_vm._v("Roles")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-header with-border" }, [
      _c("h3", { staticClass: "box-title" }, [_vm._v("View")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1dfc2188", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-1e1838de\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "content-wrapper", staticStyle: { "min-height": "960px" } },
    [
      _vm._m(0),
      _vm._v(" "),
      _c("section", { staticClass: "content" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-xs-12" }, [
            _c(
              "form",
              {
                attrs: { novalidate: "" },
                on: {
                  submit: function($event) {
                    $event.preventDefault()
                    return _vm.submitForm($event)
                  }
                }
              },
              [
                _c(
                  "div",
                  { staticClass: "box" },
                  [
                    _vm._m(1),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "box-body" },
                      [_c("back-buttton")],
                      1
                    ),
                    _vm._v(" "),
                    _c("bootstrap-alert"),
                    _vm._v(" "),
                    _c("div", { staticClass: "box-body" }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "name" } }, [
                          _vm._v("Name *")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "text",
                            name: "name",
                            placeholder: "Enter Name *"
                          },
                          domProps: { value: _vm.item.name },
                          on: { input: _vm.updateName }
                        })
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "email" } }, [
                          _vm._v("Email *")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "email",
                            name: "email",
                            placeholder: "Enter Email *"
                          },
                          domProps: { value: _vm.item.email },
                          on: { input: _vm.updateEmail }
                        })
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "password" } }, [
                          _vm._v("Password *")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "password",
                            name: "password",
                            placeholder: "Enter Password *"
                          },
                          on: { input: _vm.updatePassword }
                        })
                      ]),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "form-group" },
                        [
                          _c("label", { attrs: { for: "role" } }, [
                            _vm._v("Role *")
                          ]),
                          _vm._v(" "),
                          _c("v-select", {
                            attrs: {
                              name: "role",
                              label: "title",
                              value: _vm.item.role,
                              options: _vm.rolesAll,
                              multiple: ""
                            },
                            on: { input: _vm.updateRole }
                          })
                        ],
                        1
                      )
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "box-footer" },
                      [
                        _c(
                          "vue-button-spinner",
                          {
                            staticClass: "btn btn-primary btn-sm",
                            attrs: {
                              isLoading: _vm.loading,
                              disabled: _vm.loading
                            }
                          },
                          [
                            _vm._v(
                              "\n                                Save\n                            "
                            )
                          ]
                        )
                      ],
                      1
                    )
                  ],
                  1
                )
              ]
            )
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("section", { staticClass: "content-header" }, [
      _c("h1", [_vm._v("Users")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-header with-border" }, [
      _c("h3", { staticClass: "box-title" }, [_vm._v("Edit")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1e1838de", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-28e50c70\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid" },
      [
        _c("ol", { staticClass: "breadcrumb" }, [
          _c(
            "li",
            { staticClass: "breadcrumb-item" },
            [
              _vm.$can(_vm.xprops.permission_prefix + "access")
                ? _c(
                    "router-link",
                    { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                    [
                      _vm._v(
                        _vm._s(_vm.$t("global.product-tags.title")) +
                          "\n                    "
                      )
                    ]
                  )
                : _vm._e()
            ],
            1
          ),
          _vm._v(" "),
          _c("li", { staticClass: "breadcrumb-item active" }, [
            _vm._v(_vm._s(_vm.$t("global.app_create")))
          ])
        ]),
        _vm._v(" "),
        _c("bootstrap-alert"),
        _vm._v(" "),
        _c("h3", { staticClass: "page-title" }, [
          _vm._v(_vm._s(_vm.$t("global.product-tags.title")))
        ]),
        _vm._v(" "),
        _c(
          "form",
          {
            attrs: { novalidate: "" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                return _vm.submitForm($event)
              }
            }
          },
          [
            _c("div", { staticClass: "panel panel-default" }, [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_create")))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c("div", { staticClass: "form-line" }, [
                      _c("label", { attrs: { for: "name" } }, [
                        _vm._v("Name *")
                      ]),
                      _vm._v(" "),
                      _c("input", {
                        staticClass: "form-control",
                        attrs: {
                          type: "text",
                          name: "name",
                          placeholder: "Enter Name *"
                        },
                        domProps: { value: _vm.item.name },
                        on: { input: _vm.updateName }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "col-xs-12 form-group" },
                    [
                      _c(
                        "vue-button-spinner",
                        {
                          staticClass: "btn btn-danger wave-effect",
                          attrs: {
                            isLoading: _vm.loading,
                            disabled: _vm.loading
                          }
                        },
                        [
                          _vm._v(
                            "\n                        Save\n                        "
                          )
                        ]
                      ),
                      _vm._v(
                        "\n                         | \n                        "
                      ),
                      _c("back-buttton")
                    ],
                    1
                  )
                ])
              ])
            ])
          ]
        )
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-28e50c70", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-32b2c6a4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "content-wrapper", staticStyle: { "min-height": "960px" } },
    [
      _vm._m(0),
      _vm._v(" "),
      _c("section", { staticClass: "content" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-xs-12" }, [
            _c("div", { staticClass: "box" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "box-body" }, [
                _c(
                  "div",
                  { staticClass: "btn-group" },
                  [
                    _vm.$can(_vm.xprops.permission_prefix + "create")
                      ? _c(
                          "router-link",
                          {
                            staticClass: "btn btn-success btn-sm",
                            attrs: {
                              to: { name: _vm.xprops.route + ".create" }
                            }
                          },
                          [
                            _c("i", { staticClass: "fa fa-plus" }),
                            _vm._v(" Add new\n                            ")
                          ]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-default btn-sm",
                        attrs: { type: "button" },
                        on: { click: _vm.fetchData }
                      },
                      [
                        _c("i", {
                          staticClass: "fa fa-refresh",
                          class: { "fa-spin": _vm.loading }
                        }),
                        _vm._v(" Refresh\n                            ")
                      ]
                    )
                  ],
                  1
                )
              ]),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "box-body" },
                [
                  _vm.loading
                    ? _c("div", { staticClass: "row" }, [_vm._m(2)])
                    : _vm._e(),
                  _vm._v(" "),
                  !_vm.loading
                    ? _c("datatable", {
                        attrs: {
                          columns: _vm.columns,
                          data: _vm.data,
                          total: _vm.total,
                          query: _vm.query,
                          xprops: _vm.xprops
                        }
                      })
                    : _vm._e()
                ],
                1
              )
            ])
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("section", { staticClass: "content-header" }, [
      _c("h1", [_vm._v("Users")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-header with-border" }, [
      _c("h3", { staticClass: "box-title" }, [_vm._v("List")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "col-xs-4 col-xs-offset-4" }, [
      _c("div", { staticClass: "alert text-center" }, [
        _c("i", { staticClass: "fa fa-spin fa-refresh" }),
        _vm._v(" Loading\n                                ")
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-32b2c6a4", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-33382e5b\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid" },
      [
        _c("ol", { staticClass: "breadcrumb" }, [
          _c(
            "li",
            { staticClass: "breadcrumb-item" },
            [
              _vm.$can(_vm.xprops.permission_prefix + "access")
                ? _c(
                    "router-link",
                    { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                    [
                      _vm._v(
                        _vm._s(_vm.$t("global.product-categories.title")) +
                          "\n                "
                      )
                    ]
                  )
                : _vm._e()
            ],
            1
          ),
          _vm._v(" "),
          _c("li", { staticClass: "breadcrumb-item active" }, [
            _vm._v(_vm._s(_vm.$t("global.app_create")))
          ])
        ]),
        _vm._v(" "),
        _c("bootstrap-alert"),
        _vm._v(" "),
        _c("h3", { staticClass: "page-title" }, [
          _vm._v(_vm._s(_vm.$t("global.product-categories.title")))
        ]),
        _vm._v(" "),
        _c(
          "form",
          {
            attrs: { novalidate: "" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                return _vm.submitForm($event)
              }
            }
          },
          [
            _c("div", { staticClass: "panel panel-default" }, [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_create")))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "name" } }, [_vm._v("Name *")]),
                  _vm._v(" "),
                  _c("input", {
                    staticClass: "form-control",
                    attrs: {
                      type: "text",
                      name: "name",
                      placeholder: "Enter Name *"
                    },
                    domProps: { value: _vm.item.name },
                    on: { input: _vm.updateName }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "description" } }, [
                    _vm._v("Description")
                  ]),
                  _vm._v(" "),
                  _c("textarea", {
                    staticClass: "form-control",
                    attrs: {
                      rows: "3",
                      name: "description",
                      placeholder: "Enter Description"
                    },
                    domProps: { value: _vm.item.description },
                    on: { input: _vm.updateDescription }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "photo" } }, [_vm._v("Photo")]),
                  _vm._v(" "),
                  _c("input", {
                    staticClass: "form-control",
                    attrs: { type: "file" },
                    on: { change: _vm.updatePhoto }
                  }),
                  _vm._v(" "),
                  _vm.item.photo
                    ? _c("ul", { staticClass: "list-unstyled" }, [
                        _c("li", [
                          _vm._v(
                            "\n                                " +
                              _vm._s(
                                _vm.item.photo.name || _vm.item.photo.file_name
                              ) +
                              "\n                                "
                          ),
                          _c(
                            "button",
                            {
                              staticClass: "btn btn-xs btn-danger",
                              attrs: { type: "button" },
                              on: { click: _vm.removePhoto }
                            },
                            [
                              _vm._v(
                                "\n                                    Remove file\n                                "
                              )
                            ]
                          )
                        ])
                      ])
                    : _vm._e()
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "col-xs-12 form-group" },
                  [
                    _c(
                      "vue-button-spinner",
                      {
                        staticClass: "btn btn-primary btn-sm",
                        attrs: { isLoading: _vm.loading, disabled: _vm.loading }
                      },
                      [
                        _vm._v(
                          "\n                        Save\n                    "
                        )
                      ]
                    ),
                    _vm._v(
                      "\n                         | \n                        "
                    ),
                    _c("back-buttton")
                  ],
                  1
                )
              ])
            ])
          ]
        )
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-33382e5b", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-3a94ad04\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid" },
      [
        _c("ol", { staticClass: "breadcrumb" }, [
          _c(
            "li",
            { staticClass: "breadcrumb-item" },
            [
              _vm.$can(_vm.xprops.permission_prefix + "access")
                ? _c(
                    "router-link",
                    { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                    [
                      _vm._v(
                        _vm._s(_vm.$t("global.product-tags.title")) +
                          "\n                    "
                      )
                    ]
                  )
                : _vm._e()
            ],
            1
          ),
          _vm._v(" "),
          _c("li", { staticClass: "breadcrumb-item active" }, [
            _vm._v(_vm._s(_vm.$t("global.app_edit")))
          ])
        ]),
        _vm._v(" "),
        _c("bootstrap-alert"),
        _vm._v(" "),
        _c("h3", { staticClass: "page-title" }, [
          _vm._v(_vm._s(_vm.$t("global.product-tags.title")))
        ]),
        _vm._v(" "),
        _c(
          "form",
          {
            attrs: { novalidate: "" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                return _vm.submitForm($event)
              }
            }
          },
          [
            _c("div", { staticClass: "panel panel-default" }, [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_edit")))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c("div", { staticClass: "form-line" }, [
                      _c("label", { attrs: { for: "name" } }, [
                        _vm._v("Name *")
                      ]),
                      _vm._v(" "),
                      _c("input", {
                        staticClass: "form-control",
                        attrs: {
                          type: "text",
                          name: "name",
                          placeholder: "Enter Name *"
                        },
                        domProps: { value: _vm.item.name },
                        on: { input: _vm.updateName }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "col-xs-12 form-group" },
                    [
                      _c(
                        "vue-button-spinner",
                        {
                          staticClass: "btn btn-danger wave-effect",
                          attrs: {
                            isLoading: _vm.loading,
                            disabled: _vm.loading
                          }
                        },
                        [
                          _vm._v(
                            "\n                        Save\n                        "
                          )
                        ]
                      ),
                      _vm._v(
                        "\n                         | \n                        "
                      ),
                      _c("back-buttton")
                    ],
                    1
                  )
                ])
              ])
            ])
          ]
        )
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-3a94ad04", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-41b41ab2\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    _vm._l(_vm.value, function(item) {
      return _c("span", { staticClass: "label label-info" }, [
        _vm._v(
          "\n        " +
            _vm._s(item[_vm.$root.relationships[_vm.field]]) +
            "\n    "
        )
      ])
    }),
    0
  )
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-41b41ab2", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-53b64a44\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/ChangePassword.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "content-wrapper", staticStyle: { "min-height": "960px" } },
    [
      _vm._m(0),
      _vm._v(" "),
      _c("section", { staticClass: "content" }, [
        _c("div", { staticClass: "row" }, [
          _c(
            "form",
            {
              on: {
                submit: function($event) {
                  $event.preventDefault()
                  return _vm.submitForm($event)
                }
              }
            },
            [
              _c("div", { staticClass: "col-xs-12" }, [
                _c(
                  "div",
                  { staticClass: "box" },
                  [
                    _vm._m(1),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "box-body" },
                      [_c("back-buttton")],
                      1
                    ),
                    _vm._v(" "),
                    _c("bootstrap-alert"),
                    _vm._v(" "),
                    _c("div", { staticClass: "box-body" }, [
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "current_password" } }, [
                          _vm._v("Current password")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: { type: "password", name: "current_password" },
                          domProps: { value: _vm.current_password },
                          on: { input: _vm.updateCurrentPassword }
                        })
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _c("label", { attrs: { for: "new_password" } }, [
                          _vm._v("New password")
                        ]),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: { type: "password", name: "new_password" },
                          domProps: { value: _vm.new_password },
                          on: { input: _vm.updateNewPassword }
                        })
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "form-group" }, [
                        _c(
                          "label",
                          { attrs: { for: "new_password_confirmation" } },
                          [_vm._v("Confirm new password")]
                        ),
                        _vm._v(" "),
                        _c("input", {
                          staticClass: "form-control",
                          attrs: {
                            type: "password",
                            name: "new_password_confirmation"
                          },
                          domProps: { value: _vm.new_password_confirmation },
                          on: { input: _vm.updateNewPasswordConfirmation }
                        })
                      ])
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "box-footer" },
                      [
                        _c(
                          "vue-button-spinner",
                          {
                            staticClass: "btn btn-primary btn-sm",
                            attrs: {
                              isLoading: _vm.loading,
                              disabled: _vm.loading
                            }
                          },
                          [
                            _vm._v(
                              "\n                                Save\n                            "
                            )
                          ]
                        )
                      ],
                      1
                    )
                  ],
                  1
                )
              ])
            ]
          )
        ])
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("section", { staticClass: "content-header" }, [
      _c("h1", [_vm._v("Change Password")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-header with-border box-success" }, [
      _c("h3", { staticClass: "box-title" }, [_vm._v("Change Password")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-53b64a44", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-58c7cd95\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.permissions.title")) +
                        "\n                "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_show")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "page-title" }, [
        _vm._v(_vm._s(_vm.$t("global.permissions.title")))
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_view")))
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "panel-body table-responsive" }, [
          _c("div", { staticClass: "row" }, [
            _c("div", { staticClass: "col-xs-12" }, [
              _c(
                "table",
                { staticClass: "table table-bordered table-striped" },
                [
                  _c("tbody", [
                    _c("tr", [
                      _c("th", [_vm._v("#")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.id))])
                    ]),
                    _vm._v(" "),
                    _c("tr", [
                      _c("th", [_vm._v("Title")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.title))])
                    ])
                  ])
                ]
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-xs-12" }, [_c("back-buttton")], 1)
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-58c7cd95", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-5b158b5a\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { domProps: { innerHTML: _vm._s(_vm.row.photo_link) } })
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5b158b5a", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-5faec504\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _vm.$can(_vm.xprops.permission_prefix + "view")
        ? _c(
            "router-link",
            {
              staticClass: "btn btn-xs btn-primary",
              attrs: {
                to: {
                  name: _vm.xprops.route + ".show",
                  params: { id: _vm.row.id }
                }
              }
            },
            [_vm._v(_vm._s(_vm.$t("global.app_view")) + "\n     ")]
          )
        : _vm._e(),
      _vm._v(" "),
      _vm.$can(_vm.xprops.permission_prefix + "edit")
        ? _c(
            "router-link",
            {
              staticClass: "btn btn-xs btn-warning",
              attrs: {
                to: {
                  name: _vm.xprops.route + ".edit",
                  params: { id: _vm.row.id }
                }
              }
            },
            [_vm._v(_vm._s(_vm.$t("global.app_edit")) + "\n     ")]
          )
        : _vm._e(),
      _vm._v(" "),
      _vm.$can(_vm.xprops.permission_prefix + "delete")
        ? _c(
            "button",
            {
              staticClass: "btn btn-xs btn-danger",
              attrs: { type: "button" },
              on: {
                click: function($event) {
                  return _vm.destroyData(_vm.row.id)
                }
              }
            },
            [_vm._v(_vm._s(_vm.$t("global.app_delete")) + "\n     ")]
          )
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5faec504", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-62d9ce0d\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid" },
      [
        _c("ol", { staticClass: "breadcrumb" }, [
          _c(
            "li",
            { staticClass: "breadcrumb-item" },
            [
              _vm.$can(_vm.xprops.permission_prefix + "access")
                ? _c(
                    "router-link",
                    { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                    [
                      _vm._v(
                        _vm._s(_vm.$t("global.product-categories.title")) +
                          "\n                "
                      )
                    ]
                  )
                : _vm._e()
            ],
            1
          ),
          _vm._v(" "),
          _c("li", { staticClass: "breadcrumb-item active" }, [
            _vm._v(_vm._s(_vm.$t("global.app_create")))
          ])
        ]),
        _vm._v(" "),
        _c("bootstrap-alert"),
        _vm._v(" "),
        _c("h3", { staticClass: "page-title" }, [
          _vm._v(_vm._s(_vm.$t("global.product-categories.title")))
        ]),
        _vm._v(" "),
        _c(
          "form",
          {
            attrs: { novalidate: "" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                return _vm.submitForm($event)
              }
            }
          },
          [
            _c("div", { staticClass: "panel panel-default" }, [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_create")))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "name" } }, [_vm._v("Name *")]),
                  _vm._v(" "),
                  _c("input", {
                    staticClass: "form-control",
                    attrs: {
                      type: "text",
                      name: "name",
                      placeholder: "Enter Name *"
                    },
                    domProps: { value: _vm.item.name },
                    on: { input: _vm.updateName }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "description" } }, [
                    _vm._v("Description")
                  ]),
                  _vm._v(" "),
                  _c("textarea", {
                    staticClass: "form-control",
                    attrs: {
                      rows: "3",
                      name: "description",
                      placeholder: "Enter Description"
                    },
                    domProps: { value: _vm.item.description },
                    on: { input: _vm.updateDescription }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { attrs: { for: "photo" } }, [_vm._v("Photo")]),
                  _vm._v(" "),
                  _c("input", {
                    staticClass: "form-control",
                    attrs: { type: "file" },
                    on: { change: _vm.updatePhoto }
                  }),
                  _vm._v(" "),
                  _vm.item.photo
                    ? _c("ul", { staticClass: "list-unstyled" }, [
                        _c("li", [
                          _vm._v(
                            "\n                                " +
                              _vm._s(
                                _vm.item.photo.name || _vm.item.photo.file_name
                              ) +
                              "\n                                "
                          ),
                          _c(
                            "button",
                            {
                              staticClass: "btn btn-xs btn-danger",
                              attrs: { type: "button" },
                              on: { click: _vm.removePhoto }
                            },
                            [
                              _vm._v(
                                "\n                                    Remove file\n                                "
                              )
                            ]
                          )
                        ])
                      ])
                    : _vm._e()
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "col-xs-12 form-group" },
                  [
                    _c(
                      "vue-button-spinner",
                      {
                        staticClass: "btn btn-primary btn-sm",
                        attrs: { isLoading: _vm.loading, disabled: _vm.loading }
                      },
                      [
                        _vm._v(
                          "\n                        Save\n                    "
                        )
                      ]
                    ),
                    _vm._v(
                      "\n                         | \n                        "
                    ),
                    _c("back-buttton")
                  ],
                  1
                )
              ])
            ])
          ]
        )
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-62d9ce0d", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-64b133c9\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid" },
      [
        _c("ol", { staticClass: "breadcrumb" }, [
          _c(
            "li",
            { staticClass: "breadcrumb-item" },
            [
              _vm.$can(_vm.xprops.permission_prefix + "access")
                ? _c(
                    "router-link",
                    { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                    [
                      _vm._v(
                        _vm._s(_vm.$t("global.roles.title")) +
                          "\n                    "
                      )
                    ]
                  )
                : _vm._e()
            ],
            1
          ),
          _vm._v(" "),
          _c("li", { staticClass: "breadcrumb-item active" }, [
            _vm._v(_vm._s(_vm.$t("global.app_edit")))
          ])
        ]),
        _vm._v(" "),
        _c("bootstrap-alert"),
        _vm._v(" "),
        _c("h3", { staticClass: "page-title" }, [
          _vm._v(_vm._s(_vm.$t("global.roles.title")))
        ]),
        _vm._v(" "),
        _c(
          "form",
          {
            attrs: { novalidate: "" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                return _vm.submitForm($event)
              }
            }
          },
          [
            _c("div", { staticClass: "panel panel-default" }, [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_edit")))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c("div", { staticClass: "form-line" }, [
                      _c("label", { attrs: { for: "title" } }, [
                        _vm._v("Title *")
                      ]),
                      _vm._v(" "),
                      _c("input", {
                        staticClass: "form-control",
                        attrs: {
                          type: "text",
                          name: "title",
                          placeholder: "Enter Title *"
                        },
                        domProps: { value: _vm.item.title },
                        on: { input: _vm.updateTitle }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "form-group" },
                    [
                      _c("label", { attrs: { for: "permission" } }, [
                        _vm._v("Permissions *")
                      ]),
                      _vm._v(" "),
                      _c("v-select", {
                        attrs: {
                          name: "permission",
                          label: "title",
                          value: _vm.item.permission,
                          options: _vm.permissionsAll,
                          multiple: ""
                        },
                        on: { input: _vm.updatePermission }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "col-xs-12 form-group" },
                    [
                      _c(
                        "vue-button-spinner",
                        {
                          staticClass: "btn btn-danger wave-effect",
                          attrs: {
                            isLoading: _vm.loading,
                            disabled: _vm.loading
                          }
                        },
                        [
                          _vm._v(
                            "\n                        Save\n                        "
                          )
                        ]
                      ),
                      _vm._v(
                        "\n                         | \n                        "
                      ),
                      _c("back-buttton")
                    ],
                    1
                  )
                ])
              ])
            ])
          ]
        )
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-64b133c9", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-6711dbbc\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.product-tags.title")) +
                        "\n                    "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_edit")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "page-title" }, [
        _vm._v(_vm._s(_vm.$t("global.product-tags.title")))
      ]),
      _vm._v(" "),
      _c(
        "form",
        {
          attrs: { novalidate: "" },
          on: {
            submit: function($event) {
              $event.preventDefault()
              return _vm.submitForm($event)
            }
          }
        },
        [
          _c(
            "div",
            { staticClass: "panel panel-default" },
            [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_edit")))
              ]),
              _vm._v(" "),
              _c("bootstrap-alert"),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c("div", { staticClass: "form-line" }, [
                      _c("label", { attrs: { for: "title" } }, [
                        _vm._v("Title *")
                      ]),
                      _vm._v(" "),
                      _c("input", {
                        staticClass: "form-control",
                        attrs: {
                          type: "text",
                          name: "title",
                          placeholder: "Enter Title *"
                        },
                        domProps: { value: _vm.item.title },
                        on: { input: _vm.updateTitle }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "col-xs-12 form-group" },
                    [
                      _c(
                        "vue-button-spinner",
                        {
                          staticClass: "btn btn-danger wave-effect",
                          attrs: {
                            isLoading: _vm.loading,
                            disabled: _vm.loading
                          }
                        },
                        [
                          _vm._v(
                            "\n                        Save\n                        "
                          )
                        ]
                      ),
                      _vm._v(
                        "\n                         | \n                        "
                      ),
                      _c("back-buttton")
                    ],
                    1
                  )
                ])
              ])
            ],
            1
          )
        ]
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6711dbbc", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-6f0664f1\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.product-tags.title")) +
                        "\n                "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_show")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "page-title" }, [
        _vm._v(_vm._s(_vm.$t("global.product-tags.title")))
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_view")))
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "panel-body table-responsive" }, [
          _c("div", { staticClass: "row" }, [
            _c("div", { staticClass: "col-xs-12" }, [
              _c(
                "table",
                { staticClass: "table table-bordered table-striped" },
                [
                  _c("tbody", [
                    _c("tr", [
                      _c("th", [_vm._v("#")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.id))])
                    ]),
                    _vm._v(" "),
                    _c("tr", [
                      _c("th", [_vm._v("Name")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.name))])
                    ])
                  ])
                ]
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-xs-12" }, [_c("back-buttton")], 1)
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6f0664f1", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-732cff23\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.roles.title")) +
                        "\n                    "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "box-title" }, [
        _vm._v(
          _vm._s(_vm.$t("global.roles.title")) +
            " " +
            _vm._s(_vm.$t("global.app_list"))
        )
      ]),
      _vm._v(" "),
      _c(
        "p",
        [
          _vm.$can(_vm.xprops.permission_prefix + "create")
            ? _c(
                "router-link",
                {
                  staticClass: "btn btn-success btn-sm",
                  attrs: { to: { name: _vm.xprops.route + ".create" } }
                },
                [
                  _c("i", { staticClass: "fa fa-plus" }),
                  _vm._v(
                    " " +
                      _vm._s(_vm.$t("global.app_add_new")) +
                      "\n                "
                  )
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _c(
            "button",
            {
              staticClass: "btn btn-default btn-sm",
              attrs: { type: "button" },
              on: { click: _vm.fetchData }
            },
            [
              _c("i", {
                staticClass: "fa fa-refresh",
                class: { "fa-spin": _vm.loading }
              }),
              _vm._v(
                " " +
                  _vm._s(_vm.$t("global.app_refresh")) +
                  "\n                "
              )
            ]
          )
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "panel-body table-responsive" },
          [
            _vm.loading
              ? _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-4 col-xs-offset-4" }, [
                    _c("div", { staticClass: "alert text-center" }, [
                      _c("i", { staticClass: "fa fa-spin fa-refresh" }),
                      _vm._v(
                        " " +
                          _vm._s(_vm.$t("global.app_loading")) +
                          "\n                            "
                      )
                    ])
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            !_vm.loading
              ? _c("datatable", {
                  attrs: {
                    columns: _vm.columns,
                    data: _vm.data,
                    total: _vm.total,
                    query: _vm.query,
                    xprops: _vm.xprops
                  }
                })
              : _vm._e()
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-732cff23", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-758556d1\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.product-categories.title")) +
                        "\n                    "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "box-title" }, [
        _vm._v(
          _vm._s(_vm.$t("global.product-categories.title")) +
            " " +
            _vm._s(_vm.$t("global.app_list"))
        )
      ]),
      _vm._v(" "),
      _c(
        "p",
        [
          _vm.$can(_vm.xprops.permission_prefix + "create")
            ? _c(
                "router-link",
                {
                  staticClass: "btn btn-success btn-sm",
                  attrs: { to: { name: _vm.xprops.route + ".create" } }
                },
                [
                  _c("i", { staticClass: "fa fa-plus" }),
                  _vm._v(
                    " " +
                      _vm._s(_vm.$t("global.app_add_new")) +
                      "\n                "
                  )
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _c(
            "button",
            {
              staticClass: "btn btn-default btn-sm",
              attrs: { type: "button" },
              on: { click: _vm.fetchData }
            },
            [
              _c("i", {
                staticClass: "fa fa-refresh",
                class: { "fa-spin": _vm.loading }
              }),
              _vm._v(
                " " +
                  _vm._s(_vm.$t("global.app_refresh")) +
                  "\n                "
              )
            ]
          )
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "panel-body table-responsive" },
          [
            _vm.loading
              ? _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-4 col-xs-offset-4" }, [
                    _c("div", { staticClass: "alert text-center" }, [
                      _c("i", { staticClass: "fa fa-spin fa-refresh" }),
                      _vm._v(
                        " " +
                          _vm._s(_vm.$t("global.app_loading")) +
                          "\n                            "
                      )
                    ])
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            !_vm.loading
              ? _c("datatable", {
                  attrs: {
                    columns: _vm.columns,
                    data: _vm.data,
                    total: _vm.total,
                    query: _vm.query,
                    xprops: _vm.xprops
                  }
                })
              : _vm._e()
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-758556d1", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-808a5428\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/BackButton.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "button",
    {
      staticClass: "btn btn-default btn-sm",
      attrs: { type: "button" },
      on: { click: _vm.routerBack }
    },
    [
      _c("span", { staticClass: "glyphicon glyphicon-chevron-left" }),
      _vm._v(" Back\n")
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-808a5428", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-80ee2c64\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.product-categories.title")) +
                        "\n                "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_view")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "page-title" }, [
        _vm._v(_vm._s(_vm.$t("global.product-categories.title")))
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_view")))
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "panel-body table-responsive" }, [
          _c("div", { staticClass: "row" }, [
            _c("div", { staticClass: "col-xs-12" }, [
              _c(
                "table",
                { staticClass: "table table-bordered table-striped" },
                [
                  _c("tbody", [
                    _c("tr", [
                      _c("th", [_vm._v("#")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.id))])
                    ]),
                    _vm._v(" "),
                    _c("tr", [
                      _c("th", [_vm._v("Name")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.name))])
                    ]),
                    _vm._v(" "),
                    _c("tr", [
                      _c("th", [_vm._v("Description")]),
                      _vm._v(" "),
                      _c("td", [_vm._v(_vm._s(_vm.item.description))])
                    ]),
                    _vm._v(" "),
                    _c("tr", [
                      _c("th", [_vm._v("Photo")]),
                      _vm._v(" "),
                      _c("td", {
                        domProps: { innerHTML: _vm._s(_vm.item.photo_link) }
                      })
                    ])
                  ])
                ]
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-xs-12" }, [_c("back-buttton")], 1)
          ])
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-80ee2c64", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-94917fe4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.product-tags.title")) +
                        "\n                    "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "box-title" }, [
        _vm._v(
          _vm._s(_vm.$t("global.product-tags.title")) +
            " " +
            _vm._s(_vm.$t("global.app_list"))
        )
      ]),
      _vm._v(" "),
      _c(
        "p",
        [
          _vm.$can(_vm.xprops.permission_prefix + "create")
            ? _c(
                "router-link",
                {
                  staticClass: "btn btn-success btn-sm",
                  attrs: { to: { name: _vm.xprops.route + ".create" } }
                },
                [
                  _c("i", { staticClass: "fa fa-plus" }),
                  _vm._v(
                    " " +
                      _vm._s(_vm.$t("global.app_add_new")) +
                      "\n                "
                  )
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _c(
            "button",
            {
              staticClass: "btn btn-default btn-sm",
              attrs: { type: "button" },
              on: { click: _vm.fetchData }
            },
            [
              _c("i", {
                staticClass: "fa fa-refresh",
                class: { "fa-spin": _vm.loading }
              }),
              _vm._v(
                " " +
                  _vm._s(_vm.$t("global.app_refresh")) +
                  "\n                "
              )
            ]
          )
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "panel panel-default" }, [
        _c("div", { staticClass: "panel-heading" }, [
          _vm._v(_vm._s(_vm.$t("global.app_list")))
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "panel-body table-responsive" },
          [
            _vm.loading
              ? _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-4 col-xs-offset-4" }, [
                    _c("div", { staticClass: "alert text-center" }, [
                      _c("i", { staticClass: "fa fa-spin fa-refresh" }),
                      _vm._v(
                        " " +
                          _vm._s(_vm.$t("global.app_loading")) +
                          "\n                            "
                      )
                    ])
                  ])
                ])
              : _vm._e(),
            _vm._v(" "),
            !_vm.loading
              ? _c("datatable", {
                  attrs: {
                    columns: _vm.columns,
                    data: _vm.data,
                    total: _vm.total,
                    query: _vm.query,
                    xprops: _vm.xprops
                  }
                })
              : _vm._e()
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-94917fe4", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-ab2e175e\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "content-wrapper", staticStyle: { "min-height": "960px" } },
    [
      _vm._m(0),
      _vm._v(" "),
      _c("section", { staticClass: "content" }, [
        _c("div", { staticClass: "row" }, [
          _c("div", { staticClass: "col-xs-12" }, [
            _c("div", { staticClass: "box" }, [
              _vm._m(1),
              _vm._v(" "),
              _c("div", { staticClass: "box-body" }, [_c("back-buttton")], 1),
              _vm._v(" "),
              _c("div", { staticClass: "box-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-6" }, [
                    _c(
                      "table",
                      { staticClass: "table table-bordered table-striped" },
                      [
                        _c("tbody", [
                          _c("tr", [
                            _c("th", [_vm._v("#")]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(_vm.item.id))])
                          ]),
                          _vm._v(" "),
                          _c("tr", [
                            _c("th", [_vm._v("Name")]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(_vm.item.name))])
                          ]),
                          _vm._v(" "),
                          _c("tr", [
                            _c("th", [_vm._v("Email")]),
                            _vm._v(" "),
                            _c("td", [_vm._v(_vm._s(_vm.item.email))])
                          ]),
                          _vm._v(" "),
                          _c("tr", [
                            _c("th", [_vm._v("Role")]),
                            _vm._v(" "),
                            _c(
                              "td",
                              _vm._l(_vm.item.role, function(role) {
                                return _c(
                                  "span",
                                  { staticClass: "label label-info" },
                                  [
                                    _vm._v(
                                      "\n                                                " +
                                        _vm._s(role.title) +
                                        "\n                                            "
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ])
                        ])
                      ]
                    )
                  ])
                ])
              ])
            ])
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("section", { staticClass: "content-header" }, [
      _c("h1", [_vm._v("Users")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-header with-border" }, [
      _c("h3", { staticClass: "box-title" }, [_vm._v("View")])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-ab2e175e", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-b02247d8\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "content" }, [
    _c("div", { staticClass: "container-fluid" }, [
      _c("ol", { staticClass: "breadcrumb" }, [
        _c(
          "li",
          { staticClass: "breadcrumb-item" },
          [
            _vm.$can(_vm.xprops.permission_prefix + "access")
              ? _c(
                  "router-link",
                  { attrs: { to: { name: _vm.xprops.route + ".index" } } },
                  [
                    _vm._v(
                      _vm._s(_vm.$t("global.permissions.title")) +
                        "\n                    "
                    )
                  ]
                )
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c("li", { staticClass: "breadcrumb-item active" }, [
          _vm._v(_vm._s(_vm.$t("global.app_create")))
        ])
      ]),
      _vm._v(" "),
      _c("h3", { staticClass: "page-title" }, [
        _vm._v(_vm._s(_vm.$t("global.permissions.title")))
      ]),
      _vm._v(" "),
      _c(
        "form",
        {
          attrs: { novalidate: "" },
          on: {
            submit: function($event) {
              $event.preventDefault()
              return _vm.submitForm($event)
            }
          }
        },
        [
          _c(
            "div",
            { staticClass: "panel panel-default" },
            [
              _c("div", { staticClass: "panel-heading" }, [
                _vm._v(_vm._s(_vm.$t("global.app_create")))
              ]),
              _vm._v(" "),
              _c("bootstrap-alert"),
              _vm._v(" "),
              _c("div", { staticClass: "panel-body" }, [
                _c("div", { staticClass: "row" }, [
                  _c("div", { staticClass: "col-xs-12 form-group" }, [
                    _c("div", { staticClass: "form-line" }, [
                      _c("label", { attrs: { for: "title" } }, [
                        _vm._v("Title *")
                      ]),
                      _vm._v(" "),
                      _c("input", {
                        staticClass: "form-control",
                        attrs: {
                          type: "text",
                          name: "title",
                          placeholder: "Enter Title *"
                        },
                        domProps: { value: _vm.item.title },
                        on: { input: _vm.updateTitle }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "col-xs-12 form-group" },
                    [
                      _c(
                        "vue-button-spinner",
                        {
                          staticClass: "btn btn-danger wave-effect",
                          attrs: {
                            isLoading: _vm.loading,
                            disabled: _vm.loading
                          }
                        },
                        [
                          _vm._v(
                            "\n                        Save\n                        "
                          )
                        ]
                      ),
                      _vm._v(
                        "\n                         | \n                        "
                      ),
                      _c("back-buttton")
                    ],
                    1
                  )
                ])
              ])
            ],
            1
          )
        ]
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-b02247d8", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-b228ba68\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("input", {
      attrs: { type: "checkbox", disabled: "" },
      domProps: { checked: _vm.value }
    })
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-b228ba68", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-e6de46a4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/EventHub.vue":
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div")
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-e6de46a4", module.exports)
  }
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0422ebea\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0422ebea\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("108d20f2", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0422ebea\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0422ebea\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-04997954\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-04997954\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("34065d7e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-04997954\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueButtonSpinner.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-04997954\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueButtonSpinner.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0d1c0911\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0d1c0911\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("b312e562", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0d1c0911\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableSingle.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0d1c0911\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableSingle.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15a01839\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/Alert.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15a01839\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/Alert.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("66b37a3d", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15a01839\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Alert.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15a01839\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Alert.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15e143d0\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15e143d0\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("22b1262e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15e143d0\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15e143d0\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1a272ffb\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1a272ffb\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("53cca1aa", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1a272ffb\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1a272ffb\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1dfc2188\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1dfc2188\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("54b0b680", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1dfc2188\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1dfc2188\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1e1838de\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1e1838de\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("6f60083a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1e1838de\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1e1838de\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28e50c70\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28e50c70\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("538bc4fc", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28e50c70\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28e50c70\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-32b2c6a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-32b2c6a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("a2de189a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-32b2c6a4\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-32b2c6a4\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-33382e5b\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-33382e5b\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("dde02d88", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-33382e5b\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-33382e5b\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3a94ad04\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3a94ad04\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("7fc4b574", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3a94ad04\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3a94ad04\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-41b41ab2\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-41b41ab2\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("60da700a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-41b41ab2\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableList.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-41b41ab2\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableList.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53b64a44\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/ChangePassword.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53b64a44\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/ChangePassword.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("0fbe3bf8", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53b64a44\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ChangePassword.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53b64a44\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ChangePassword.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-58c7cd95\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-58c7cd95\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("59c23118", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-58c7cd95\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-58c7cd95\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-5faec504\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-5faec504\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("7f53df41", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-5faec504\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableActions.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-5faec504\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableActions.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62d9ce0d\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62d9ce0d\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("a1e8cbcc", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62d9ce0d\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62d9ce0d\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-64b133c9\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-64b133c9\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("7bc8794c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-64b133c9\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-64b133c9\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6711dbbc\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6711dbbc\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("c2e5d470", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6711dbbc\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6711dbbc\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Edit.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f0664f1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f0664f1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("39026385", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f0664f1\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f0664f1\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-732cff23\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-732cff23\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("327ea44f", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-732cff23\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-732cff23\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-758556d1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-758556d1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("157122e2", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-758556d1\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-758556d1\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-808a5428\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/BackButton.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-808a5428\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/BackButton.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("df19ab86", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-808a5428\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BackButton.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-808a5428\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BackButton.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-80ee2c64\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-80ee2c64\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("7352d99a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-80ee2c64\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-80ee2c64\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94917fe4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94917fe4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("59694bb7", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94917fe4\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94917fe4\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-ab2e175e\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-ab2e175e\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("06c18f8c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-ab2e175e\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-ab2e175e\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Show.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b02247d8\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b02247d8\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("554f68e3", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b02247d8\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b02247d8\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b228ba68\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b228ba68\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("4bb3e8ad", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b228ba68\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableCheckbox.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b228ba68\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DatatableCheckbox.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-e6de46a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/EventHub.vue":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-e6de46a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/EventHub.vue");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js")("709087fc", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-e6de46a4\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./EventHub.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-e6de46a4\",\"scoped\":true,\"hasInlineConfig\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./EventHub.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./resources/client/assets/js/app.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(moment) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__vue_translations_json__ = __webpack_require__("./resources/client/assets/js/vue-translations.json");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__vue_translations_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__vue_translations_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_i18n__ = __webpack_require__("./node_modules/vue-i18n/dist/vue-i18n.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vue_i18n_locales_generated__ = __webpack_require__("./resources/client/assets/js/vue-i18n-locales.generated.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vue_i18n_locales_generated___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__vue_i18n_locales_generated__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__routes__ = __webpack_require__("./resources/client/assets/js/routes/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__("./resources/client/assets/js/store/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue2_datatable_component__ = __webpack_require__("./node_modules/vue2-datatable-component/src/main.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_awesome_notifications__ = __webpack_require__("./node_modules/vue-awesome-notifications/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_awesome_notifications___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_vue_awesome_notifications__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_vue_select__ = __webpack_require__("./node_modules/vue-select/dist/vue-select.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_vue_select___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_vue_select__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vue_bootstrap_datetimepicker__ = __webpack_require__("./node_modules/vue-bootstrap-datetimepicker/dist/vue-bootstrap-datetimepicker.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vue_bootstrap_datetimepicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_vue_bootstrap_datetimepicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_vue_sweetalert2__ = __webpack_require__("./node_modules/vue-sweetalert2/src/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_eonasdan_bootstrap_datetimepicker_build_css_bootstrap_datetimepicker_css__ = __webpack_require__("./node_modules/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_eonasdan_bootstrap_datetimepicker_build_css_bootstrap_datetimepicker_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_eonasdan_bootstrap_datetimepicker_build_css_bootstrap_datetimepicker_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__config_ability__ = __webpack_require__("./resources/client/assets/js/config/ability.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__casl_vue__ = __webpack_require__("./node_modules/@casl/vue/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_ckeditor2__ = __webpack_require__("./node_modules/vue-ckeditor2/dist/vue-ckeditor2.esm.js");

/**
 * First we will load all of this project's JavaScript dependencies which
 * includes Vue and other libraries. It is a great starting point when
 * building robust, powerful web applications using Vue and Laravel.
 */

window._ = __webpack_require__("./node_modules/lodash/lodash.js");
window.axios = __webpack_require__("./node_modules/axios/index.js");
window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
window.axios.interceptors.response.use(function (response) {
    return response;
}, function (error) {
    if (error.response.status === 401) {
        window.location.assign('/login');
    }

    return Promise.reject(error);
});

window.purify = function (o) {
    return JSON.parse(JSON.stringify(o));
};

var token = document.head.querySelector('meta[name="csrf-token"]');

if (token) {
    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;
} else {
    console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');
}

var date_format = document.head.querySelector('meta[name="dp-date"]');
var time_format = document.head.querySelector('meta[name="dp-time"]');
var datetime_format = document.head.querySelector('meta[name="dp-datetime"]');
var app_locale = document.head.querySelector('meta[name="app-locale"]');

if (date_format && time_format && datetime_format) {
    window.date_format_moment = date_format.content;
    window.time_format_moment = time_format.content;
    window.datetime_format_moment = datetime_format.content;
    window.app_locale = app_locale.content;
} else {
    console.error('Moment.js date and time formats not found');
}

/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */

// import Echo from 'laravel-echo'

// window.Pusher = require('pusher-js');

// window.Echo = new Echo({
//     broadcaster: 'pusher',
//     key: 'your-pusher-key'
// });

var sitelang = document.documentElement.lang;

window.Vue = __webpack_require__("./node_modules/vue/dist/vue.common.js");

window.Lang = __webpack_require__("./node_modules/lang.js/src/lang.js");

var lang = new Lang({
    messages: __WEBPACK_IMPORTED_MODULE_0__vue_translations_json___default.a,
    locale: sitelang,
    fallback: 'en'
});

/*
import translations from './vue-translations.js';
// this is why we used the --no-lib in our commandline
var lang = new Lang();
lang.setLocale('en');  // @TODO when we set up language switcher
*/


Vue.use(__WEBPACK_IMPORTED_MODULE_1_vue_i18n__["a" /* default */]);

var i18n = new __WEBPACK_IMPORTED_MODULE_1_vue_i18n__["a" /* default */]({
    locale: sitelang,
    messages: __WEBPACK_IMPORTED_MODULE_2__vue_i18n_locales_generated___default.a
});

Vue.prototype.$eventHub = new Vue();













// import dtlocale from 'vue2-datatable-component/locale/zh-cn'
Vue.use(__WEBPACK_IMPORTED_MODULE_5_vue2_datatable_component__["default"]);
Vue.use(__WEBPACK_IMPORTED_MODULE_6_vue_awesome_notifications___default.a, { position: 'top-right' });
Vue.use(__WEBPACK_IMPORTED_MODULE_8_vue_bootstrap_datetimepicker___default.a);
Vue.use(__WEBPACK_IMPORTED_MODULE_9_vue_sweetalert2__["default"]);
Vue.use(__WEBPACK_IMPORTED_MODULE_12__casl_vue__["abilitiesPlugin"], __WEBPACK_IMPORTED_MODULE_11__config_ability__["a" /* default */]);
Vue.use(__WEBPACK_IMPORTED_MODULE_13_vue_ckeditor2__["default"]);

Vue.component('back-buttton', __webpack_require__("./resources/client/assets/js/components/BackButton.vue"));
Vue.component('bootstrap-alert', __webpack_require__("./resources/client/assets/js/components/Alert.vue"));
Vue.component('event-hub', __webpack_require__("./resources/client/assets/js/components/EventHub.vue"));
Vue.component('vue-button-spinner', __webpack_require__("./resources/client/assets/js/components/VueButtonSpinner.vue"));
Vue.component('v-select', __WEBPACK_IMPORTED_MODULE_7_vue_select___default.a);
Vue.component('vue-ckeditor', __WEBPACK_IMPORTED_MODULE_13_vue_ckeditor2__["default"]);

moment.updateLocale(window.app_locale, {
    week: {
        dow: 1
    }
});

// TODO: the next line is added for debugging purposes and should be removed for production build
window.ability = __WEBPACK_IMPORTED_MODULE_11__config_ability__["a" /* default */];

var app = new Vue({
    data: {
        relationships: {},
        dpconfigDate: {
            format: window.date_format_moment
        },
        dpconfigTime: {
            format: window.time_format_moment
        },
        dpconfigDatetime: {
            format: window.datetime_format_moment,
            sideBySide: true
        }
    },
    mounted: function mounted() {
        this.updateRules();
    },

    watch: {
        '$route': function $route() {
            this.updateRules();
        }
    },
    methods: {
        updateRules: function updateRules() {
            var _this = this;

            __WEBPACK_IMPORTED_MODULE_4__store__["a" /* default */].dispatch('Rules/fetchData').then(function () {
                _this.$eventHub.$emit('rules-update');
            });
        }
    },
    router: __WEBPACK_IMPORTED_MODULE_3__routes__["a" /* default */],
    store: __WEBPACK_IMPORTED_MODULE_4__store__["a" /* default */],
    i18n: i18n
}).$mount('#app');
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__("./node_modules/moment/moment.js")))

/***/ }),

/***/ "./resources/client/assets/js/components/Alert.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15a01839\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/Alert.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/Alert.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-15a01839\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/Alert.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-15a01839"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/Alert.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-15a01839", Component.options)
  } else {
    hotAPI.reload("data-v-15a01839", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/BackButton.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-808a5428\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/BackButton.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/BackButton.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-808a5428\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/BackButton.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-808a5428"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/BackButton.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-808a5428", Component.options)
  } else {
    hotAPI.reload("data-v-808a5428", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/ChangePassword.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53b64a44\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/ChangePassword.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/ChangePassword.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-53b64a44\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/ChangePassword.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-53b64a44"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/ChangePassword.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-53b64a44", Component.options)
  } else {
    hotAPI.reload("data-v-53b64a44", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/EventHub.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-e6de46a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/EventHub.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/EventHub.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-e6de46a4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/EventHub.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-e6de46a4"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/EventHub.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e6de46a4", Component.options)
  } else {
    hotAPI.reload("data-v-e6de46a4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/VueButtonSpinner.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-04997954\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-04997954\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/VueButtonSpinner.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-04997954"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/VueButtonSpinner.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-04997954", Component.options)
  } else {
    hotAPI.reload("data-v-04997954", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Permissions/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b02247d8\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-b02247d8\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Create.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-b02247d8"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Permissions/Create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b02247d8", Component.options)
  } else {
    hotAPI.reload("data-v-b02247d8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Permissions/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6711dbbc\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-6711dbbc\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Edit.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6711dbbc"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Permissions/Edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6711dbbc", Component.options)
  } else {
    hotAPI.reload("data-v-6711dbbc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Permissions/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0422ebea\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-0422ebea\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Index.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0422ebea"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Permissions/Index.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0422ebea", Component.options)
  } else {
    hotAPI.reload("data-v-0422ebea", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Permissions/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-58c7cd95\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-58c7cd95\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Permissions/Show.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-58c7cd95"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Permissions/Show.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-58c7cd95", Component.options)
  } else {
    hotAPI.reload("data-v-58c7cd95", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductCategories/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62d9ce0d\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-62d9ce0d\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Create.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-62d9ce0d"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductCategories/Create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-62d9ce0d", Component.options)
  } else {
    hotAPI.reload("data-v-62d9ce0d", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-33382e5b\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-33382e5b\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-33382e5b"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductCategories/Edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-33382e5b", Component.options)
  } else {
    hotAPI.reload("data-v-33382e5b", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductCategories/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-758556d1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-758556d1\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Index.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-758556d1"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductCategories/Index.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-758556d1", Component.options)
  } else {
    hotAPI.reload("data-v-758556d1", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductCategories/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-80ee2c64\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-80ee2c64\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/Show.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-80ee2c64"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductCategories/Show.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-80ee2c64", Component.options)
  } else {
    hotAPI.reload("data-v-80ee2c64", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-5b158b5a\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductCategories/dtmodules/DatatablePhotoField.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5b158b5a", Component.options)
  } else {
    hotAPI.reload("data-v-5b158b5a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductTags/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28e50c70\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-28e50c70\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Create.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-28e50c70"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductTags/Create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-28e50c70", Component.options)
  } else {
    hotAPI.reload("data-v-28e50c70", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductTags/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3a94ad04\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-3a94ad04\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Edit.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-3a94ad04"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductTags/Edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3a94ad04", Component.options)
  } else {
    hotAPI.reload("data-v-3a94ad04", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductTags/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94917fe4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-94917fe4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Index.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-94917fe4"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductTags/Index.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-94917fe4", Component.options)
  } else {
    hotAPI.reload("data-v-94917fe4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/ProductTags/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f0664f1\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-6f0664f1\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/ProductTags/Show.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6f0664f1"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/ProductTags/Show.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6f0664f1", Component.options)
  } else {
    hotAPI.reload("data-v-6f0664f1", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Roles/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1a272ffb\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-1a272ffb\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Create.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-1a272ffb"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Roles/Create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1a272ffb", Component.options)
  } else {
    hotAPI.reload("data-v-1a272ffb", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Roles/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-64b133c9\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-64b133c9\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Edit.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-64b133c9"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Roles/Edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-64b133c9", Component.options)
  } else {
    hotAPI.reload("data-v-64b133c9", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Roles/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-732cff23\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-732cff23\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Index.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-732cff23"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Roles/Index.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-732cff23", Component.options)
  } else {
    hotAPI.reload("data-v-732cff23", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Roles/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1dfc2188\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-1dfc2188\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Roles/Show.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-1dfc2188"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Roles/Show.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1dfc2188", Component.options)
  } else {
    hotAPI.reload("data-v-1dfc2188", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Users/Create.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-15e143d0\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-15e143d0\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Create.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-15e143d0"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Users/Create.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-15e143d0", Component.options)
  } else {
    hotAPI.reload("data-v-15e143d0", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Users/Edit.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1e1838de\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-1e1838de\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Edit.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-1e1838de"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Users/Edit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1e1838de", Component.options)
  } else {
    hotAPI.reload("data-v-1e1838de", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Users/Index.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-32b2c6a4\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-32b2c6a4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Index.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-32b2c6a4"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Users/Index.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-32b2c6a4", Component.options)
  } else {
    hotAPI.reload("data-v-32b2c6a4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/cruds/Users/Show.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-ab2e175e\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-ab2e175e\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/cruds/Users/Show.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-ab2e175e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/cruds/Users/Show.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-ab2e175e", Component.options)
  } else {
    hotAPI.reload("data-v-ab2e175e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/dtmodules/DatatableActions.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-5faec504\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-5faec504\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableActions.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-5faec504"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/dtmodules/DatatableActions.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5faec504", Component.options)
  } else {
    hotAPI.reload("data-v-5faec504", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b228ba68\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-b228ba68\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-b228ba68"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/dtmodules/DatatableCheckbox.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b228ba68", Component.options)
  } else {
    hotAPI.reload("data-v-b228ba68", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/dtmodules/DatatableList.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-41b41ab2\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-41b41ab2\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableList.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-41b41ab2"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/dtmodules/DatatableList.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-41b41ab2", Component.options)
  } else {
    hotAPI.reload("data-v-41b41ab2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/components/dtmodules/DatatableSingle.vue":
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__("./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0d1c0911\",\"scoped\":true,\"hasInlineConfig\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue")
}
var normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")
/* script */
var __vue_script__ = __webpack_require__("./node_modules/babel-loader/lib/index.js?{\"cacheDirectory\":true,\"presets\":[[\"env\",{\"modules\":false,\"targets\":{\"browsers\":[\"> 2%\"],\"uglify\":true}}]],\"plugins\":[\"transform-object-rest-spread\",[\"transform-runtime\",{\"polyfill\":false,\"helpers\":false}]]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue")
/* template */
var __vue_template__ = __webpack_require__("./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-0d1c0911\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/client/assets/js/components/dtmodules/DatatableSingle.vue")
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0d1c0911"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/client/assets/js/components/dtmodules/DatatableSingle.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0d1c0911", Component.options)
  } else {
    hotAPI.reload("data-v-0d1c0911", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ "./resources/client/assets/js/config/ability.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__casl_ability__ = __webpack_require__("./node_modules/@casl/ability/dist/es5m/index.js");


/**
 * Defines how to detect object's type: https://stalniy.github.io/casl/abilities/2017/07/20/define-abilities.html
 */

function subjectName(item) {
    if (typeof item === 'string') {
        return item;
    }

    return 'all';
}

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__casl_ability__["AbilityBuilder"].define({ subjectName: subjectName }, function (can) {
    // code...
}));

/***/ }),

/***/ "./resources/client/assets/js/routes/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__("./node_modules/vue/dist/vue.common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__("./node_modules/vue-router/dist/vue-router.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_ChangePassword_vue__ = __webpack_require__("./resources/client/assets/js/components/ChangePassword.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_ChangePassword_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_ChangePassword_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_cruds_Permissions_Index_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Permissions/Index.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_cruds_Permissions_Index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_cruds_Permissions_Index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_cruds_Permissions_Create_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Permissions/Create.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_cruds_Permissions_Create_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_cruds_Permissions_Create_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_cruds_Permissions_Show_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Permissions/Show.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_cruds_Permissions_Show_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_cruds_Permissions_Show_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_cruds_Permissions_Edit_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Permissions/Edit.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_cruds_Permissions_Edit_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_cruds_Permissions_Edit_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_cruds_Roles_Index_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Roles/Index.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_cruds_Roles_Index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__components_cruds_Roles_Index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_cruds_Roles_Create_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Roles/Create.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_cruds_Roles_Create_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__components_cruds_Roles_Create_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_cruds_Roles_Show_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Roles/Show.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_cruds_Roles_Show_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__components_cruds_Roles_Show_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_cruds_Roles_Edit_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Roles/Edit.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_cruds_Roles_Edit_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__components_cruds_Roles_Edit_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_cruds_Users_Index_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Users/Index.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_cruds_Users_Index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11__components_cruds_Users_Index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_cruds_Users_Create_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Users/Create.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_cruds_Users_Create_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12__components_cruds_Users_Create_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_cruds_Users_Show_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Users/Show.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_cruds_Users_Show_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13__components_cruds_Users_Show_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_cruds_Users_Edit_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/Users/Edit.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_cruds_Users_Edit_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__components_cruds_Users_Edit_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_cruds_ProductTags_Index_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductTags/Index.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_cruds_ProductTags_Index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15__components_cruds_ProductTags_Index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_cruds_ProductTags_Create_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductTags/Create.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_cruds_ProductTags_Create_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16__components_cruds_ProductTags_Create_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_cruds_ProductTags_Show_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductTags/Show.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_cruds_ProductTags_Show_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17__components_cruds_ProductTags_Show_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_cruds_ProductTags_Edit_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductTags/Edit.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_cruds_ProductTags_Edit_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18__components_cruds_ProductTags_Edit_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_cruds_ProductCategories_Index_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductCategories/Index.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_cruds_ProductCategories_Index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19__components_cruds_ProductCategories_Index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_cruds_ProductCategories_Create_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductCategories/Create.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_cruds_ProductCategories_Create_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20__components_cruds_ProductCategories_Create_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_cruds_ProductCategories_Show_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductCategories/Show.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_cruds_ProductCategories_Show_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21__components_cruds_ProductCategories_Show_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_cruds_ProductCategories_Edit_vue__ = __webpack_require__("./resources/client/assets/js/components/cruds/ProductCategories/Edit.vue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_cruds_ProductCategories_Edit_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22__components_cruds_ProductCategories_Edit_vue__);



























__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vue_router__["default"]);

var routes = [{ path: '/change-password', component: __WEBPACK_IMPORTED_MODULE_2__components_ChangePassword_vue___default.a, name: 'auth.change_password' }, { path: '/permissions', component: __WEBPACK_IMPORTED_MODULE_3__components_cruds_Permissions_Index_vue___default.a, name: 'permissions.index' }, { path: '/permissions/create', component: __WEBPACK_IMPORTED_MODULE_4__components_cruds_Permissions_Create_vue___default.a, name: 'permissions.create' }, { path: '/permissions/:id', component: __WEBPACK_IMPORTED_MODULE_5__components_cruds_Permissions_Show_vue___default.a, name: 'permissions.show' }, { path: '/permissions/:id/edit', component: __WEBPACK_IMPORTED_MODULE_6__components_cruds_Permissions_Edit_vue___default.a, name: 'permissions.edit' }, { path: '/roles', component: __WEBPACK_IMPORTED_MODULE_7__components_cruds_Roles_Index_vue___default.a, name: 'roles.index' }, { path: '/roles/create', component: __WEBPACK_IMPORTED_MODULE_8__components_cruds_Roles_Create_vue___default.a, name: 'roles.create' }, { path: '/roles/:id', component: __WEBPACK_IMPORTED_MODULE_9__components_cruds_Roles_Show_vue___default.a, name: 'roles.show' }, { path: '/roles/:id/edit', component: __WEBPACK_IMPORTED_MODULE_10__components_cruds_Roles_Edit_vue___default.a, name: 'roles.edit' }, { path: '/users', component: __WEBPACK_IMPORTED_MODULE_11__components_cruds_Users_Index_vue___default.a, name: 'users.index' }, { path: '/users/create', component: __WEBPACK_IMPORTED_MODULE_12__components_cruds_Users_Create_vue___default.a, name: 'users.create' }, { path: '/users/:id', component: __WEBPACK_IMPORTED_MODULE_13__components_cruds_Users_Show_vue___default.a, name: 'users.show' }, { path: '/users/:id/edit', component: __WEBPACK_IMPORTED_MODULE_14__components_cruds_Users_Edit_vue___default.a, name: 'users.edit' }, { path: '/product-tags', component: __WEBPACK_IMPORTED_MODULE_15__components_cruds_ProductTags_Index_vue___default.a, name: 'product_tags.index' }, { path: '/product-tags/create', component: __WEBPACK_IMPORTED_MODULE_16__components_cruds_ProductTags_Create_vue___default.a, name: 'product_tags.create' }, { path: '/product-tags/:id', component: __WEBPACK_IMPORTED_MODULE_17__components_cruds_ProductTags_Show_vue___default.a, name: 'product_tags.show' }, { path: '/product-tags/:id/edit', component: __WEBPACK_IMPORTED_MODULE_18__components_cruds_ProductTags_Edit_vue___default.a, name: 'product_tags.edit' }, { path: '/product-categories', component: __WEBPACK_IMPORTED_MODULE_19__components_cruds_ProductCategories_Index_vue___default.a, name: 'product_categories.index' }, { path: '/product-categories/create', component: __WEBPACK_IMPORTED_MODULE_20__components_cruds_ProductCategories_Create_vue___default.a, name: 'product_categories.create' }, { path: '/product-categories/:id', component: __WEBPACK_IMPORTED_MODULE_21__components_cruds_ProductCategories_Show_vue___default.a, name: 'product_categories.show' }, { path: '/product-categories/:id/edit', component: __WEBPACK_IMPORTED_MODULE_22__components_cruds_ProductCategories_Edit_vue___default.a, name: 'product_categories.edit' }];

/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_1_vue_router__["default"]({
    mode: 'history',
    base: '/admin',
    routes: routes
}));

/***/ }),

/***/ "./resources/client/assets/js/store/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__("./node_modules/vue/dist/vue.common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__("./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modules_alert__ = __webpack_require__("./resources/client/assets/js/store/modules/alert.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modules_change_password__ = __webpack_require__("./resources/client/assets/js/store/modules/change_password.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modules_rules__ = __webpack_require__("./resources/client/assets/js/store/modules/rules.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modules_Permissions__ = __webpack_require__("./resources/client/assets/js/store/modules/Permissions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modules_Permissions_single__ = __webpack_require__("./resources/client/assets/js/store/modules/Permissions/single.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__modules_Roles__ = __webpack_require__("./resources/client/assets/js/store/modules/Roles/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modules_Roles_single__ = __webpack_require__("./resources/client/assets/js/store/modules/Roles/single.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__modules_Users__ = __webpack_require__("./resources/client/assets/js/store/modules/Users/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__modules_Users_single__ = __webpack_require__("./resources/client/assets/js/store/modules/Users/single.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__modules_ProductTags__ = __webpack_require__("./resources/client/assets/js/store/modules/ProductTags/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__modules_ProductTags_single__ = __webpack_require__("./resources/client/assets/js/store/modules/ProductTags/single.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__modules_ProductCategories__ = __webpack_require__("./resources/client/assets/js/store/modules/ProductCategories/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__modules_ProductCategories_single__ = __webpack_require__("./resources/client/assets/js/store/modules/ProductCategories/single.js");

















__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vuex__["default"]);

var debug = "development" !== 'production';

/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__["default"].Store({
    modules: {
        Alert: __WEBPACK_IMPORTED_MODULE_2__modules_alert__["a" /* default */],
        ChangePassword: __WEBPACK_IMPORTED_MODULE_3__modules_change_password__["a" /* default */],
        Rules: __WEBPACK_IMPORTED_MODULE_4__modules_rules__["a" /* default */],
        PermissionsIndex: __WEBPACK_IMPORTED_MODULE_5__modules_Permissions__["a" /* default */],
        PermissionsSingle: __WEBPACK_IMPORTED_MODULE_6__modules_Permissions_single__["a" /* default */],
        RolesIndex: __WEBPACK_IMPORTED_MODULE_7__modules_Roles__["a" /* default */],
        RolesSingle: __WEBPACK_IMPORTED_MODULE_8__modules_Roles_single__["a" /* default */],
        UsersIndex: __WEBPACK_IMPORTED_MODULE_9__modules_Users__["a" /* default */],
        UsersSingle: __WEBPACK_IMPORTED_MODULE_10__modules_Users_single__["a" /* default */],
        ProductTagsIndex: __WEBPACK_IMPORTED_MODULE_11__modules_ProductTags__["a" /* default */],
        ProductTagsSingle: __WEBPACK_IMPORTED_MODULE_12__modules_ProductTags_single__["a" /* default */],

        ProductCategoriesIndex: __WEBPACK_IMPORTED_MODULE_13__modules_ProductCategories__["a" /* default */],
        ProductCategoriesSingle: __WEBPACK_IMPORTED_MODULE_14__modules_ProductCategories_single__["a" /* default */]
    },
    strict: debug
}));

/***/ }),

/***/ "./resources/client/assets/js/store/modules/Permissions/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        all: [],
        relationships: {},
        query: {},
        loading: false
    };
}

var getters = {
    data: function data(state) {
        var rows = state.all;

        if (state.query.sort) {
            rows = _.orderBy(state.all, state.query.sort, state.query.order);
        }

        return rows.slice(state.query.offset, state.query.offset + state.query.limit);
    },
    total: function total(state) {
        return state.all.length;
    },
    loading: function loading(state) {
        return state.loading;
    },
    relationships: function relationships(state) {
        return state.relationships;
    }
};

var actions = {
    fetchData: function fetchData(_ref) {
        var commit = _ref.commit,
            state = _ref.state;

        commit('setLoading', true);

        axios.get('/api/v1/permissions').then(function (response) {
            commit('setAll', response.data.data);
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        }).finally(function () {
            commit('setLoading', false);
        });
    },
    destroyData: function destroyData(_ref2, id) {
        var commit = _ref2.commit,
            state = _ref2.state;

        axios.delete('/api/v1/permissions/' + id).then(function (response) {
            commit('setAll', state.all.filter(function (item) {
                return item.id != id;
            }));
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        });
    },
    setQuery: function setQuery(_ref3, value) {
        var commit = _ref3.commit;

        commit('setQuery', purify(value));
    },
    resetState: function resetState(_ref4) {
        var commit = _ref4.commit;

        commit('resetState');
    }
};

var mutations = {
    setAll: function setAll(state, items) {
        state.all = items;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    setQuery: function setQuery(state, query) {
        state.query = query;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/Permissions/single.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function initialState() {
    return {
        item: {
            id: null,
            title: null
        },

        loading: false
    };
}

var getters = {
    item: function item(state) {
        return state.item;
    },
    loading: function loading(state) {
        return state.loading;
    }

};

var actions = {
    storeData: function storeData(_ref) {
        var commit = _ref.commit,
            state = _ref.state,
            dispatch = _ref.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            axios.post('/api/v1/permissions', params).then(function (response) {
                commit('resetState');
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    updateData: function updateData(_ref2) {
        var commit = _ref2.commit,
            state = _ref2.state,
            dispatch = _ref2.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();
            params.set('_method', 'PUT');

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            axios.post('/api/v1/permissions/' + state.item.id, params).then(function (response) {
                commit('setItem', response.data.data);
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    fetchData: function fetchData(_ref3, id) {
        var commit = _ref3.commit,
            dispatch = _ref3.dispatch;

        axios.get('/api/v1/permissions/' + id).then(function (response) {
            commit('setItem', response.data.data);
        });
    },
    setTitle: function setTitle(_ref4, value) {
        var commit = _ref4.commit;

        commit('setTitle', value);
    },
    resetState: function resetState(_ref5) {
        var commit = _ref5.commit;

        commit('resetState');
    }
};

var mutations = {
    setItem: function setItem(state, item) {
        state.item = item;
    },
    setTitle: function setTitle(state, value) {
        state.item.title = value;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/ProductCategories/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        all: [],
        relationships: {},
        query: {},
        loading: false
    };
}

var getters = {
    data: function data(state) {
        var rows = state.all;

        if (state.query.sort) {
            rows = _.orderBy(state.all, state.query.sort, state.query.order);
        }

        return rows.slice(state.query.offset, state.query.offset + state.query.limit);
    },
    total: function total(state) {
        return state.all.length;
    },
    loading: function loading(state) {
        return state.loading;
    },
    relationships: function relationships(state) {
        return state.relationships;
    }
};

var actions = {
    fetchData: function fetchData(_ref) {
        var commit = _ref.commit,
            state = _ref.state;

        commit('setLoading', true);

        axios.get('/api/v1/product-categories').then(function (response) {
            commit('setAll', response.data.data);
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        }).finally(function () {
            commit('setLoading', false);
        });
    },
    destroyData: function destroyData(_ref2, id) {
        var commit = _ref2.commit,
            state = _ref2.state;

        axios.delete('/api/v1/product-categories/' + id).then(function (response) {
            commit('setAll', state.all.filter(function (item) {
                return item.id != id;
            }));
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        });
    },
    setQuery: function setQuery(_ref3, value) {
        var commit = _ref3.commit;

        commit('setQuery', purify(value));
    },
    resetState: function resetState(_ref4) {
        var commit = _ref4.commit;

        commit('resetState');
    }
};

var mutations = {
    setAll: function setAll(state, items) {
        state.all = items;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    setQuery: function setQuery(state, query) {
        state.query = query;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/ProductCategories/single.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function initialState() {
    return {
        item: {
            id: null,
            name: null,
            description: null,
            photo: null
        },

        loading: false
    };
}

var getters = {
    item: function item(state) {
        return state.item;
    },
    loading: function loading(state) {
        return state.loading;
    }

};

var actions = {
    storeData: function storeData(_ref) {
        var commit = _ref.commit,
            state = _ref.state,
            dispatch = _ref.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            if (state.item.photo === null) {
                params.delete('photo');
            }

            axios.post('/api/v1/product-categories', params).then(function (response) {
                commit('resetState');
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    updateData: function updateData(_ref2) {
        var commit = _ref2.commit,
            state = _ref2.state,
            dispatch = _ref2.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();
            params.set('_method', 'PUT');

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            if (state.item.photo === null) {
                params.delete('photo');
            }

            axios.post('/api/v1/product-categories/' + state.item.id, params).then(function (response) {
                commit('setItem', response.data.data);
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    fetchData: function fetchData(_ref3, id) {
        var commit = _ref3.commit,
            dispatch = _ref3.dispatch;

        axios.get('/api/v1/product-categories/' + id).then(function (response) {
            commit('setItem', response.data.data);
        });
    },
    setName: function setName(_ref4, value) {
        var commit = _ref4.commit;

        commit('setName', value);
    },
    setDescription: function setDescription(_ref5, value) {
        var commit = _ref5.commit;

        commit('setDescription', value);
    },
    setPhoto: function setPhoto(_ref6, value) {
        var commit = _ref6.commit;

        commit('setPhoto', value);
    },
    resetState: function resetState(_ref7) {
        var commit = _ref7.commit;

        commit('resetState');
    }
};

var mutations = {
    setItem: function setItem(state, item) {
        state.item = item;
    },
    setName: function setName(state, value) {
        state.item.name = value;
    },
    setDescription: function setDescription(state, value) {
        state.item.description = value;
    },
    setPhoto: function setPhoto(state, value) {
        state.item.photo = value;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/ProductTags/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        all: [],
        relationships: {},
        query: {},
        loading: false
    };
}

var getters = {
    data: function data(state) {
        var rows = state.all;

        if (state.query.sort) {
            rows = _.orderBy(state.all, state.query.sort, state.query.order);
        }

        return rows.slice(state.query.offset, state.query.offset + state.query.limit);
    },
    total: function total(state) {
        return state.all.length;
    },
    loading: function loading(state) {
        return state.loading;
    },
    relationships: function relationships(state) {
        return state.relationships;
    }
};

var actions = {
    fetchData: function fetchData(_ref) {
        var commit = _ref.commit,
            state = _ref.state;

        commit('setLoading', true);

        axios.get('/api/v1/product-tags').then(function (response) {
            commit('setAll', response.data.data);
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        }).finally(function () {
            commit('setLoading', false);
        });
    },
    destroyData: function destroyData(_ref2, id) {
        var commit = _ref2.commit,
            state = _ref2.state;

        axios.delete('/api/v1/product-tags/' + id).then(function (response) {
            commit('setAll', state.all.filter(function (item) {
                return item.id != id;
            }));
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        });
    },
    setQuery: function setQuery(_ref3, value) {
        var commit = _ref3.commit;

        commit('setQuery', purify(value));
    },
    resetState: function resetState(_ref4) {
        var commit = _ref4.commit;

        commit('resetState');
    }
};

var mutations = {
    setAll: function setAll(state, items) {
        state.all = items;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    setQuery: function setQuery(state, query) {
        state.query = query;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/ProductTags/single.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function initialState() {
    return {
        item: {
            id: null,
            name: null
        },

        loading: false
    };
}

var getters = {
    item: function item(state) {
        return state.item;
    },
    loading: function loading(state) {
        return state.loading;
    }

};

var actions = {
    storeData: function storeData(_ref) {
        var commit = _ref.commit,
            state = _ref.state,
            dispatch = _ref.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            axios.post('/api/v1/product-tags', params).then(function (response) {
                commit('resetState');
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    updateData: function updateData(_ref2) {
        var commit = _ref2.commit,
            state = _ref2.state,
            dispatch = _ref2.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();
            params.set('_method', 'PUT');

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            axios.post('/api/v1/product-tags/' + state.item.id, params).then(function (response) {
                commit('setItem', response.data.data);
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    fetchData: function fetchData(_ref3, id) {
        var commit = _ref3.commit,
            dispatch = _ref3.dispatch;

        axios.get('/api/v1/product-tags/' + id).then(function (response) {
            commit('setItem', response.data.data);
        });
    },
    setName: function setName(_ref4, value) {
        var commit = _ref4.commit;

        commit('setName', value);
    },
    resetState: function resetState(_ref5) {
        var commit = _ref5.commit;

        commit('resetState');
    }
};

var mutations = {
    setItem: function setItem(state, item) {
        state.item = item;
    },
    setName: function setName(state, value) {
        state.item.name = value;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/Roles/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        all: [],
        relationships: {
            'permission': 'title'
        },
        query: {},
        loading: false
    };
}

var getters = {
    data: function data(state) {
        var rows = state.all;

        if (state.query.sort) {
            rows = _.orderBy(state.all, state.query.sort, state.query.order);
        }

        return rows.slice(state.query.offset, state.query.offset + state.query.limit);
    },
    total: function total(state) {
        return state.all.length;
    },
    loading: function loading(state) {
        return state.loading;
    },
    relationships: function relationships(state) {
        return state.relationships;
    }
};

var actions = {
    fetchData: function fetchData(_ref) {
        var commit = _ref.commit,
            state = _ref.state;

        commit('setLoading', true);

        axios.get('/api/v1/roles').then(function (response) {
            commit('setAll', response.data.data);
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        }).finally(function () {
            commit('setLoading', false);
        });
    },
    destroyData: function destroyData(_ref2, id) {
        var commit = _ref2.commit,
            state = _ref2.state;

        axios.delete('/api/v1/roles/' + id).then(function (response) {
            commit('setAll', state.all.filter(function (item) {
                return item.id != id;
            }));
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        });
    },
    setQuery: function setQuery(_ref3, value) {
        var commit = _ref3.commit;

        commit('setQuery', purify(value));
    },
    resetState: function resetState(_ref4) {
        var commit = _ref4.commit;

        commit('resetState');
    }
};

var mutations = {
    setAll: function setAll(state, items) {
        state.all = items;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    setQuery: function setQuery(state, query) {
        state.query = query;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/Roles/single.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function initialState() {
    return {
        item: {
            id: null,
            title: null,
            permission: []
        },
        permissionsAll: [],

        loading: false
    };
}

var getters = {
    item: function item(state) {
        return state.item;
    },
    loading: function loading(state) {
        return state.loading;
    },
    permissionsAll: function permissionsAll(state) {
        return state.permissionsAll;
    }

};

var actions = {
    storeData: function storeData(_ref) {
        var commit = _ref.commit,
            state = _ref.state,
            dispatch = _ref.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            if (_.isEmpty(state.item.permission)) {
                params.delete('permission');
            } else {
                for (var _index in state.item.permission) {
                    params.set('permission[' + _index + ']', state.item.permission[_index].id);
                }
            }

            axios.post('/api/v1/roles', params).then(function (response) {
                commit('resetState');
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    updateData: function updateData(_ref2) {
        var commit = _ref2.commit,
            state = _ref2.state,
            dispatch = _ref2.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();
            params.set('_method', 'PUT');

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            if (_.isEmpty(state.item.permission)) {
                params.delete('permission');
            } else {
                for (var _index2 in state.item.permission) {
                    params.set('permission[' + _index2 + ']', state.item.permission[_index2].id);
                }
            }

            axios.post('/api/v1/roles/' + state.item.id, params).then(function (response) {
                commit('setItem', response.data.data);
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    fetchData: function fetchData(_ref3, id) {
        var commit = _ref3.commit,
            dispatch = _ref3.dispatch;

        axios.get('/api/v1/roles/' + id).then(function (response) {
            commit('setItem', response.data.data);
        });

        dispatch('fetchPermissionsAll');
    },
    fetchPermissionsAll: function fetchPermissionsAll(_ref4) {
        var commit = _ref4.commit;

        axios.get('/api/v1/permissions').then(function (response) {
            commit('setPermissionsAll', response.data.data);
        });
    },
    setTitle: function setTitle(_ref5, value) {
        var commit = _ref5.commit;

        commit('setTitle', value);
    },
    setPermission: function setPermission(_ref6, value) {
        var commit = _ref6.commit;

        commit('setPermission', value);
    },
    resetState: function resetState(_ref7) {
        var commit = _ref7.commit;

        commit('resetState');
    }
};

var mutations = {
    setItem: function setItem(state, item) {
        state.item = item;
    },
    setTitle: function setTitle(state, value) {
        state.item.title = value;
    },
    setPermission: function setPermission(state, value) {
        state.item.permission = value;
    },
    setPermissionsAll: function setPermissionsAll(state, value) {
        state.permissionsAll = value;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/Users/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        all: [],
        relationships: {
            'role': 'title'
        },
        query: {},
        loading: false
    };
}

var getters = {
    data: function data(state) {
        var rows = state.all;

        if (state.query.sort) {
            rows = _.orderBy(state.all, state.query.sort, state.query.order);
        }

        return rows.slice(state.query.offset, state.query.offset + state.query.limit);
    },
    total: function total(state) {
        return state.all.length;
    },
    loading: function loading(state) {
        return state.loading;
    },
    relationships: function relationships(state) {
        return state.relationships;
    }
};

var actions = {
    fetchData: function fetchData(_ref) {
        var commit = _ref.commit,
            state = _ref.state;

        commit('setLoading', true);

        axios.get('/api/v1/users').then(function (response) {
            commit('setAll', response.data.data);
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        }).finally(function () {
            commit('setLoading', false);
        });
    },
    destroyData: function destroyData(_ref2, id) {
        var commit = _ref2.commit,
            state = _ref2.state;

        axios.delete('/api/v1/users/' + id).then(function (response) {
            commit('setAll', state.all.filter(function (item) {
                return item.id != id;
            }));
        }).catch(function (error) {
            message = error.response.data.message || error.message;
            commit('setError', message);
            console.log(message);
        });
    },
    setQuery: function setQuery(_ref3, value) {
        var commit = _ref3.commit;

        commit('setQuery', purify(value));
    },
    resetState: function resetState(_ref4) {
        var commit = _ref4.commit;

        commit('resetState');
    }
};

var mutations = {
    setAll: function setAll(state, items) {
        state.all = items;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    setQuery: function setQuery(state, query) {
        state.query = query;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/Users/single.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function initialState() {
    return {
        item: {
            id: null,
            name: null,
            email: null,
            password: null,
            role: []
        },
        rolesAll: [],

        loading: false
    };
}

var getters = {
    item: function item(state) {
        return state.item;
    },
    loading: function loading(state) {
        return state.loading;
    },
    rolesAll: function rolesAll(state) {
        return state.rolesAll;
    }

};

var actions = {
    storeData: function storeData(_ref) {
        var commit = _ref.commit,
            state = _ref.state,
            dispatch = _ref.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            if (_.isEmpty(state.item.role)) {
                params.delete('role');
            } else {
                for (var _index in state.item.role) {
                    params.set('role[' + _index + ']', state.item.role[_index].id);
                }
            }

            axios.post('/api/v1/users', params).then(function (response) {
                commit('resetState');
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    updateData: function updateData(_ref2) {
        var commit = _ref2.commit,
            state = _ref2.state,
            dispatch = _ref2.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = new FormData();
            params.set('_method', 'PUT');

            for (var fieldName in state.item) {
                var fieldValue = state.item[fieldName];
                if ((typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {
                    params.set(fieldName, fieldValue);
                } else {
                    if (fieldValue && _typeof(fieldValue[0]) !== 'object') {
                        params.set(fieldName, fieldValue);
                    } else {
                        for (var index in fieldValue) {
                            params.set(fieldName + '[' + index + ']', fieldValue[index]);
                        }
                    }
                }
            }

            if (_.isEmpty(state.item.role)) {
                params.delete('role');
            } else {
                for (var _index2 in state.item.role) {
                    params.set('role[' + _index2 + ']', state.item.role[_index2].id);
                }
            }

            axios.post('/api/v1/users/' + state.item.id, params).then(function (response) {
                commit('setItem', response.data.data);
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    fetchData: function fetchData(_ref3, id) {
        var commit = _ref3.commit,
            dispatch = _ref3.dispatch;

        axios.get('/api/v1/users/' + id).then(function (response) {
            commit('setItem', response.data.data);
        });

        dispatch('fetchRolesAll');
    },
    fetchRolesAll: function fetchRolesAll(_ref4) {
        var commit = _ref4.commit;

        axios.get('/api/v1/roles').then(function (response) {
            commit('setRolesAll', response.data.data);
        });
    },
    setName: function setName(_ref5, value) {
        var commit = _ref5.commit;

        commit('setName', value);
    },
    setEmail: function setEmail(_ref6, value) {
        var commit = _ref6.commit;

        commit('setEmail', value);
    },
    setPassword: function setPassword(_ref7, value) {
        var commit = _ref7.commit;

        commit('setPassword', value);
    },
    setRole: function setRole(_ref8, value) {
        var commit = _ref8.commit;

        commit('setRole', value);
    },
    resetState: function resetState(_ref9) {
        var commit = _ref9.commit;

        commit('resetState');
    }
};

var mutations = {
    setItem: function setItem(state, item) {
        state.item = item;
    },
    setName: function setName(state, value) {
        state.item.name = value;
    },
    setEmail: function setEmail(state, value) {
        state.item.email = value;
    },
    setPassword: function setPassword(state, value) {
        state.item.password = value;
    },
    setRole: function setRole(state, value) {
        state.item.role = value;
    },
    setRolesAll: function setRolesAll(state, value) {
        state.rolesAll = value;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/alert.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        message: null,
        errors: null,
        color: 'success'
    };
}

var getters = {
    message: function message(state) {
        return state.message;
    },
    errors: function errors(state) {
        return state.errors;
    },
    color: function color(state) {
        return state.color;
    }
};

var actions = {
    setMessage: function setMessage(_ref, message) {
        var commit = _ref.commit;

        commit('setMessage', message);
    },
    setErrors: function setErrors(_ref2, errors) {
        var commit = _ref2.commit;

        commit('setErrors', errors);
    },
    setColor: function setColor(_ref3, color) {
        var commit = _ref3.commit;

        commit('setColor', color);
    },
    setAlert: function setAlert(_ref4, data) {
        var commit = _ref4.commit;

        commit('setMessage', data.message || null);
        commit('setErrors', data.errors || null);
        commit('setColor', data.color || null);
    },
    resetState: function resetState(_ref5) {
        var commit = _ref5.commit;

        commit('resetState');
    }
};

var mutations = {
    setMessage: function setMessage(state, message) {
        state.message = message;
    },
    setErrors: function setErrors(state, errors) {
        state.errors = errors;
    },
    setColor: function setColor(state, color) {
        state.color = color || 'success';
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/change_password.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        current_password: null,
        new_password: null,
        new_password_confirmation: null,
        loading: false
    };
}

var getters = {
    current_password: function current_password(state) {
        return state.current_password;
    },
    new_password: function new_password(state) {
        return state.new_password;
    },
    new_password_confirmation: function new_password_confirmation(state) {
        return state.new_password_confirmation;
    },
    loading: function loading(state) {
        return state.loading;
    }
};

var actions = {
    storeData: function storeData(_ref) {
        var commit = _ref.commit,
            state = _ref.state,
            dispatch = _ref.dispatch;

        commit('setLoading', true);
        dispatch('Alert/resetState', null, { root: true });

        return new Promise(function (resolve, reject) {
            var params = {
                current_password: state.current_password,
                new_password: state.new_password,
                new_password_confirmation: state.new_password_confirmation
            };

            axios.post('/api/v1/change-password', params).then(function (response) {
                commit('resetState');
                resolve();
            }).catch(function (error) {
                var message = error.response.data.message || error.message;
                var errors = error.response.data.errors;

                dispatch('Alert/setAlert', { message: message, errors: errors, color: 'danger' }, { root: true });

                reject(error);
            }).finally(function () {
                commit('setLoading', false);
            });
        });
    },
    setCurrentPassword: function setCurrentPassword(_ref2, value) {
        var commit = _ref2.commit;

        commit('setCurrentPassword', value);
    },
    setNewPassword: function setNewPassword(_ref3, value) {
        var commit = _ref3.commit;

        commit('setNewPassword', value);
    },
    setNewPasswordConfirmation: function setNewPasswordConfirmation(_ref4, value) {
        var commit = _ref4.commit;

        commit('setNewPasswordConfirmation', value);
    },
    resetState: function resetState(_ref5) {
        var commit = _ref5.commit;

        commit('resetState');
    }
};

var mutations = {
    setCurrentPassword: function setCurrentPassword(state, value) {
        state.current_password = value;
    },
    setNewPassword: function setNewPassword(state, value) {
        state.new_password = value;
    },
    setNewPasswordConfirmation: function setNewPasswordConfirmation(state, value) {
        state.new_password_confirmation = value;
    },
    setLoading: function setLoading(state, loading) {
        state.loading = loading;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/store/modules/rules.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function initialState() {
    return {
        rules: null
    };
}

var getters = {
    rules: function rules(state) {
        return state.rules;
    }
};

var actions = {
    fetchData: function fetchData(_ref, rules) {
        var commit = _ref.commit;

        return new Promise(function (resolve, reject) {
            axios.get('/api/v1/rules').then(function (response) {
                commit('setRules', response.data.data);
                resolve();
            }).catch(function (error) {
                message = error.response.data.message || error.message;
                console.log(message);
                reject();
            });
        });
    },
    resetState: function resetState(_ref2) {
        var commit = _ref2.commit;

        commit('resetState');
    }
};

var mutations = {
    setRules: function setRules(state, rules) {
        state.rules = rules;
    },
    resetState: function resetState(state) {
        state = Object.assign(state, initialState());
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    namespaced: true,
    state: initialState,
    getters: getters,
    actions: actions,
    mutations: mutations
});

/***/ }),

/***/ "./resources/client/assets/js/vue-i18n-locales.generated.js":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (global, factory) {
    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.vuei18nLocales = factory();
})(this, function () {
    'use strict';

    return {
        "ar": {
            "pagination": {
                "previous": "«السابق",
                "next": "التالى &quot;"
            },
            "validation": {
                "accepted": "يجب قبول السمة:",
                "active_url": "السمة: ليست عنوان URL صالحًا.",
                "after": "يجب أن تكون السمة: تاريخ بعد: تاريخ.",
                "after_or_equal": "يجب أن تكون السمة: تاريخ بعد أو يساوي: تاريخ.",
                "alpha": "قد تحتوي السمة على أحرف فقط.",
                "alpha_dash": "قد تحتوي السمة: على أحرف وأرقام وشرطات وشرطات سفلية",
                "alpha_num": "قد تحتوي السمة على أحرف وأرقام فقط.",
                "array": "يجب أن تكون السمة صفيف.",
                "before": "يجب أن تكون السمة: تاريخ قبل: تاريخ.",
                "before_or_equal": "يجب أن تكون السمة: تاريخ قبل أو تساوي: تاريخ.",
                "between": {
                    "numeric": "يجب أن تكون السمة بين: min و: max.",
                    "file": "يجب أن تكون السمة: بين: min و: max كيلو بايت.",
                    "string": "يجب أن تكون السمة: بين: min و: الحد الأقصى لعدد الأحرف.",
                    "array": "يجب أن تحتوي السمة: على: العناصر min و: max."
                },
                "boolean": "يجب أن يكون حقل السمة صواب أو خطأ.",
                "confirmed": "تأكيد السمة غير متطابق.",
                "date": "السمة: ليست تاريخًا صالحًا.",
                "date_format": "السمة: لا تتطابق مع التنسيق: التنسيق.",
                "different": ": السمة و: يجب أن تكون مختلفة.",
                "digits": "يجب أن تكون السمة: digits digits.",
                "digits_between": "يجب أن تكون السمة بين: min و: أقصى عدد.",
                "dimensions": "تحتوي السمة: على أبعاد صور غير صالحة.",
                "distinct": "يحتوي حقل السمة على قيمة مكررة.",
                "email": "يجب أن تكون السمة: عنوان بريد إلكتروني صالحًا.",
                "exists": "السمة المحددة: غير صالحة.",
                "file": "يجب أن تكون السمة ملف.",
                "filled": "يجب أن يحتوي حقل السمة على قيمة.",
                "gt": {
                    "numeric": "يجب أن تكون السمة: أكبر من: قيمة.",
                    "file": "يجب أن تكون السمة: أكبر من: قيمة كيلو بايت.",
                    "string": "يجب أن تكون السمة: أكبر من: أحرف القيمة.",
                    "array": "يجب أن تحتوي السمة: على أكثر من: عناصر القيمة."
                },
                "gte": {
                    "numeric": "يجب أن تكون السمة: أكبر من أو تساوي: value.",
                    "file": "يجب أن تكون السمة: أكبر من أو تساوي: قيمة الكيلوبايت.",
                    "string": "يجب أن تكون السمة: أكبر من أو تساوي: أحرف القيمة.",
                    "array": "يجب أن تحتوي السمة: على عناصر قيمة أو أكثر."
                },
                "image": "يجب أن تكون السمة صورة.",
                "in": "السمة المحددة: غير صالحة.",
                "in_array": ": حقل السمة غير موجود في: الآخر.",
                "integer": "يجب أن تكون السمة عددًا صحيحًا.",
                "ip": "يجب أن تكون السمة: عنوان IP صالحًا.",
                "ipv4": "يجب أن تكون السمة: عنوان IPv4 صالحًا.",
                "ipv6": "يجب أن تكون السمة: عنوان IPv6 صالحًا.",
                "json": "يجب أن تكون السمة: سلسلة JSON صالحة.",
                "lt": {
                    "numeric": "يجب أن تكون السمة: أقل من: قيمة.",
                    "file": "يجب أن تكون السمة: أقل من: قيمة كيلو بايت.",
                    "string": "يجب أن تكون السمة: أقل من: قيمة الأحرف.",
                    "array": "يجب أن تحتوي السمة: على أقل من: عناصر القيمة."
                },
                "lte": {
                    "numeric": "يجب أن تكون السمة: أقل من أو تساوي: value.",
                    "file": "يجب أن تكون السمة: أقل من أو تساوي: قيمة الكيلوبايت.",
                    "string": "يجب أن تكون السمة: أقل من أو تساوي: أحرف القيمة.",
                    "array": "يجب ألا تحتوي السمة: على أكثر من: عناصر القيمة."
                },
                "max": {
                    "numeric": "قد لا تكون السمة: أكبر من:",
                    "file": "قد لا تكون السمة: أكبر من: كيلو بايت كحد أقصى.",
                    "string": "قد لا تكون السمة: أكبر من: الحد الأقصى لعدد الأحرف.",
                    "array": "قد لا تحتوي السمة: أكثر من: العناصر القصوى."
                },
                "mimes": "يجب أن تكون السمة: ملف نوع:: قيم.",
                "mimetypes": "يجب أن تكون السمة: ملف نوع:: قيم.",
                "min": {
                    "numeric": "يجب أن تكون السمة: min على الأقل.",
                    "file": "يجب أن تكون السمة: الأقل كيلوبايت.",
                    "string": "يجب أن تكون السمة: الأقل من الأحرف.",
                    "array": "يجب أن تحتوي السمة: على الأقل: عناصر دقيقة."
                },
                "not_in": "السمة المحددة: غير صالحة.",
                "not_regex": "تنسيق السمة: غير صالح.",
                "numeric": "يجب أن تكون السمة رقمًا.",
                "present": "يجب أن يكون حقل السمة موجودًا.",
                "regex": "تنسيق السمة: غير صالح.",
                "required": ": حقل السمة مطلوب.",
                "required_if": "حقل السمة: مطلوب عند: الآخر هو: قيمة.",
                "required_unless": "حقل السمة: مطلوب إلا إذا كان: الآخر في: القيم.",
                "required_with": "حقل السمة: مطلوب عند: القيم موجودة.",
                "required_with_all": "حقل السمة: مطلوب عند: القيم موجودة.",
                "required_without": "حقل السمة: مطلوب عندما تكون القيم غير موجودة.",
                "required_without_all": "حقل السمة: مطلوب عند عدم وجود: من القيم.",
                "same": "السمة: و الأخرى يجب أن تتطابق.",
                "size": {
                    "numeric": "يجب أن تكون السمة: size.",
                    "file": "يجب أن تكون السمة: size كيلوبايت.",
                    "string": "يجب أن تكون السمة: size size.",
                    "array": "يجب أن تحتوي السمة: عناصر الحجم."
                },
                "string": "يجب أن تكون السمة سلسلة.",
                "timezone": "يجب أن تكون السمة منطقة صالحة.",
                "unique": "السمة: تم اتخاذها بالفعل.",
                "uploaded": "فشلت السمة: في التحميل.",
                "url": "تنسيق السمة: غير صالح.",
                "custom": {
                    "attribute-name": {
                        "rule-name": "رسالة مخصصة"
                    }
                }
            },
            "sitethemes::global": {
                "site-theme": {
                    "make-default": "موضوع جديد مفعل"
                },
                "site-themes": {
                    "title": "سمات الموقع",
                    "yes": "نعم فعلا",
                    "no": "لا",
                    "not-allowed-default": "غير مسموح بتحرير المظهر الافتراضي. يمكنك تعديل في إعدادات الموقع.",
                    "not-valid-zip": "ملف zip غير صالح. يرجى تحميل ملف مضغوط صالح",
                    "not-valid-theme": "غير صالح لهم الملف",
                    "theme-already-exists": "السمة موجودة بالفعل",
                    "theme-install-success": "تم تثبيت السمة بنجاح",
                    "make-default": "موضوع جديد مفعل",
                    "fields": {
                        "title": "عنوان",
                        "slug": "سبيكة",
                        "theme-title-key": "مفتاح عنوان السمة",
                        "settings-data": "بيانات الإعدادات",
                        "description": "وصف",
                        "is-active": "نشط",
                        "theme-color": "لون الموضوع",
                        "make-default": "موضوع تعيين كافتراضي"
                    }
                }
            },
            "passwords": {
                "password": "يجب أن تتكون كلمات المرور من ستة أحرف على الأقل وأن تطابق التأكيد.",
                "reset": "تم إعادة تعيين كلمة المرور الخاصة بك!",
                "sent": "لقد أرسلنا رابط إعادة تعيين كلمة المرور عبر البريد الإلكتروني!",
                "token": "الرمز المميز لإعادة تعيين كلمة المرور غير صالح.",
                "user": "لا يمكننا العثور على مستخدم يحمل عنوان البريد الإلكتروني هذا."
            },
            "auth": {
                "throttle": "محاولات تسجيل الدخول كثيرة جدًا. يرجى المحاولة مرة أخرى بعد: ثوانٍ.",
                "suspended": "نحن اسفون!. تم تعليق حسابك. يرجى الاتصال المسؤول"
            },
            "global": {
                "user-management": {
                    "title": "إدارةالمستخدم"
                },
                "permissions": {
                    "title": "أذونات",
                    "fields": {
                        "title": "عنوان"
                    }
                },
                "roles": {
                    "title": "الأدوار",
                    "fields": {
                        "title": "عنوان",
                        "permission": "أذونات"
                    }
                },
                "users": {
                    "title": "المستخدمين",
                    "active": "نشيط",
                    "suspend": "تعليق",
                    "activate": "تفعيل",
                    "fields": {
                        "name": "اسم",
                        "email": "البريد الإلكتروني",
                        "password": "كلمه السر",
                        "role": "وظيفة",
                        "remember-token": "تذكر الرمز",
                        "contact-reference": "مرجع الاتصال",
                        "department": " قسم، أقسام",
                        "status": "الحالة"
                    }
                },
                "user-actions": {
                    "title": "إجراءات المستخدم",
                    "created_at": "زمن",
                    "fields": {
                        "user": "المستعمل",
                        "action": "عمل",
                        "action-model": "نموذج العمل",
                        "action-id": "معرف العمل"
                    }
                },
                "contact-management": {
                    "title": "إدارة الاتصال"
                },
                "contact-companies": {
                    "title": "الشركات",
                    "fields": {
                        "name": "اسم الشركة",
                        "email": "البريد الإلكتروني",
                        "address": "عنوان",
                        "website": "موقع الكتروني"
                    }
                },
                "contacts": {
                    "title": "جهات الاتصال",
                    "title_customers": "الزبائن",
                    "title_customer": "زبون",
                    "title_suppliers": "الموردين",
                    "title_supplier": "المورد",
                    "title_leads": "يؤدي",
                    "title_lead": "قيادة",
                    "title_profile": "الملف الشخصي",
                    "edit-profile": "تعديل الملف الشخصي",
                    "fields": {
                        "company": "شركة",
                        "group": "مجموعة",
                        "contact-type": "نوع الاتصال",
                        "first-name": "الاسم الاول",
                        "last-name": "الكنية",
                        "language": "لغة",
                        "phone1": "الهاتف 1",
                        "phone2": "الهاتف 2",
                        "phone1_code": "رقم الهاتف 1",
                        "phone2_code": "رمز الهاتف 2",
                        "email": "البريد الإلكتروني",
                        "skype": "سكايب",
                        "address": "عنوان",
                        "city": "مدينة",
                        "state-region": "الدولة / المنطقة",
                        "zip-postal-code": "الرمز البريدي / الرمز البريدي",
                        "tax-id": "الرقم الضريبي",
                        "country": "بلد"
                    }
                },
                "expense-management": {
                    "title": "محاسبة"
                },
                "expense-category": {
                    "title": "فئات النفقات",
                    "fields": {
                        "name": "اسم"
                    }
                },
                "income-category": {
                    "title": "فئات الدخل",
                    "fields": {
                        "name": "اسم"
                    }
                },
                "income": {
                    "title": "الإيرادات",
                    "fields": {
                        "account": "الحساب",
                        "income-category": "فئة الدخل",
                        "entry-date": "موعد الدخول",
                        "amount": "كمية",
                        "description": "وصف",
                        "description-file": "ملف الوصف",
                        "payer": "دافع",
                        "pay-method": "طريقة الدفع",
                        "ref-no": "الرقم المرجعي"
                    }
                },
                "expense": {
                    "title": "نفقات",
                    "fields": {
                        "account": "الحساب",
                        "expense-category": "فئة النفقات",
                        "entry-date": "موعد الدخول",
                        "amount": "كمية",
                        "description": "وصف",
                        "description-file": "ملف الوصف",
                        "payee": "المستفيد",
                        "payment-method": "طريقة الدفع او السداد",
                        "ref-no": "الرقم المرجعي"
                    }
                },
                "monthly-report": {
                    "title": "التقرير الشهري"
                },
                "faq-management": {
                    "title": "إدارة التعليمات",
                    "faq": "أسئلة وأجوبة"
                },
                "faq-categories": {
                    "title": "الاقسام",
                    "fields": {
                        "title": "الفئة"
                    }
                },
                "faq-questions": {
                    "title": "الأسئلة",
                    "fields": {
                        "category": "الفئة",
                        "question-text": "سؤال",
                        "answer-text": "إجابة"
                    }
                },
                "internal-notifications": {
                    "title": "إخطارات",
                    "fields": {
                        "text": "نص",
                        "link": "حلقة الوصل",
                        "users": "المستخدمين"
                    }
                },
                "task-management": {
                    "title": "ادارة المهام"
                },
                "task-statuses": {
                    "title": "الأوضاع",
                    "panel-default": "اللوحة الافتراضية",
                    "panel-primary": "لوحة الأولية",
                    "panel-success": "لوحة النجاح",
                    "panel-info": "لوحة المعلومات",
                    "panel-warning": "لوحة تحذير",
                    "panel-danger": "لوحة الخطر",
                    "fields": {
                        "name": "اسم",
                        "color": "اللون"
                    }
                },
                "task-tags": {
                    "title": "الكلمات",
                    "fields": {
                        "name": "اسم"
                    }
                },
                "tasks": {
                    "title": "مهام",
                    "task-status-updated": "تم تحديث حالة المهمة بنجاح",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف",
                        "status": "الحالة",
                        "tag": "الكلمات",
                        "attachment": "المرفق",
                        "start-date": "تاريخ البدء",
                        "due-date": "تاريخ الاستحقاق",
                        "user": "مخصص ل"
                    }
                },
                "task-calendar": {
                    "title": "التقويم",
                    "status-wise": "الوضع الحكيم"
                },
                "content-management": {
                    "title": "ادارة المحتوى"
                },
                "content-categories": {
                    "title": "الاقسام",
                    "fields": {
                        "title": "الفئة",
                        "slug": "سبيكة"
                    }
                },
                "content-tags": {
                    "title": "الكلمات",
                    "fields": {
                        "title": "بطاقة",
                        "slug": "سبيكة"
                    }
                },
                "content-pages": {
                    "title": "صفحات",
                    "fields": {
                        "title": "عنوان",
                        "category-id": "الاقسام",
                        "tag-id": "الكلمات",
                        "page-text": "نص",
                        "excerpt": "مقتطفات",
                        "featured-image": "صورة مميزة",
                        "created-at": "الوقت خلق"
                    }
                },
                "product-management": {
                    "title": "ادارة المنتج"
                },
                "product-categories": {
                    "title": "الاقسام",
                    "fields": {
                        "name": "اسم التصنيف",
                        "description": "وصف",
                        "photo": "الصورة (بحد أقصى 8 ميجابايت)"
                    }
                },
                "product-tags": {
                    "title": "الكلمات",
                    "fields": {
                        "name": "اسم"
                    }
                },
                "products": {
                    "title": "منتجات",
                    "gallery-file-types": "أنواع الملفات المقبولة: png، jpg، jpeg، gif",
                    "fields": {
                        "name": "اسم المنتج",
                        "product-code": "كود المنتج",
                        "actual-price": "السعر الفعلي",
                        "sale-price": "سعر البيع",
                        "category": "الفئة",
                        "tag": "بطاقة",
                        "ware-house": "وير المنزل",
                        "description": "وصف",
                        "excerpt": "مقتطفات",
                        "stock-quantity": "كمية المخزون",
                        "alert-quantity": "تنبيه الكمية",
                        "image-gallery": "معرض الصور",
                        "thumbnail": "صورة مصغرة",
                        "other-files": "ملفات اخرى",
                        "hsn-sac-code": "رمز HSN / SAC",
                        "product-size": "حجم المنتج",
                        "product-weight": "وزن المنتج",
                        "brand": "علامة تجارية"
                    }
                },
                "assets-management": {
                    "title": "إدارة الأصول"
                },
                "assets-categories": {
                    "title": "الاقسام",
                    "fields": {
                        "title": "عنوان"
                    }
                },
                "assets-statuses": {
                    "title": "الأوضاع",
                    "fields": {
                        "title": "عنوان"
                    }
                },
                "assets-locations": {
                    "title": "مواقع",
                    "fields": {
                        "title": "عنوان"
                    }
                },
                "assets": {
                    "title": "الأصول",
                    "fields": {
                        "category": "الفئة",
                        "serial-number": "رقم سري",
                        "title": "عنوان",
                        "photo1": "صورة مصغرة",
                        "photo2": "صالة عرض",
                        "attachments": "مرفقات",
                        "status": "الحالة",
                        "location": "موقعك",
                        "assigned-user": "معين (مستخدم)",
                        "notes": "ملاحظات"
                    }
                },
                "assets-history": {
                    "title": "تاريخ الأصول",
                    "created_at": "زمن",
                    "fields": {
                        "asset": "الأصول",
                        "status": "الحالة",
                        "location": "موقعك",
                        "assigned-user": "معين (مستخدم)"
                    }
                },
                "coupon-management": {
                    "title": "إدارة القسيمة"
                },
                "coupon-campaigns": {
                    "title": "حملات",
                    "fields": {
                        "title": "عنوان",
                        "description": "وصف",
                        "valid-from": "صالح من تاريخ",
                        "valid-to": "صالحة ل",
                        "discount-amount": "مقدار الخصم",
                        "discount-percent": "خصم في المئة",
                        "coupons-amount": "كوبونات المبلغ"
                    }
                },
                "coupons": {
                    "title": "كوبونات",
                    "fields": {
                        "campaign": "حملة",
                        "code": "الشفرة",
                        "valid-from": "صالح من تاريخ",
                        "valid-to": "صالحة ل",
                        "discount-amount": "مقدار الخصم",
                        "discount-percent": "خصم في المئة",
                        "redeem-time": "استرداد الوقت"
                    }
                },
                "expense-types": {
                    "title": "أنواع النفقات"
                },
                "global-settings": {
                    "title": "الاعدادات العامة"
                },
                "currencies": {
                    "title": "العملات",
                    "fields": {
                        "name": "اسم",
                        "symbol": "رمز",
                        "code": "الشفرة",
                        "rate": "معدل",
                        "status": "الحالة",
                        "is_default": "هو الافتراضي؟"
                    }
                },
                "sales-taxes": {
                    "title": "ضرائب المبيعات"
                },
                "email-templates": {
                    "title": "قوالب البريد الإلكتروني",
                    "fields": {
                        "name": "اسم",
                        "subject": "موضوع",
                        "body": "الجسم"
                    }
                },
                "companies": {
                    "title": "الشركات",
                    "fields": {
                        "company-name": "اسم الشركة",
                        "address": "عنوان",
                        "business-number": "عدد الأعمال",
                        "city": "مدينة",
                        "url": "رابط",
                        "state-region": "الدولة / المنطقة",
                        "email": "البريد الإلكتروني",
                        "zip-postal-code": "الرمز البريدي / الرمز البريدي",
                        "country": "بلد",
                        "phone": "هاتف",
                        "logo": "شعار"
                    }
                },
                "accounts": {
                    "title": "حسابات",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف",
                        "initial-balance": "الرصيد الافتتاحي",
                        "account-number": "رقم حساب",
                        "contact-person": "الشخص الذي يمكن الاتصال به",
                        "phone": "هاتف",
                        "url": "URL"
                    }
                },
                "payment-gateways": {
                    "title": "بوابات الدفع",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف",
                        "logo": "شعار"
                    }
                },
                "warehouses": {
                    "title": "المستودعات",
                    "fields": {
                        "name": "اسم",
                        "address": "عنوان",
                        "description": "وصف"
                    }
                },
                "taxes": {
                    "title": "الضرائب",
                    "fields": {
                        "name": "اسم",
                        "rate": "معدل",
                        "rate-type": "نوع معدل",
                        "description": "وصف"
                    }
                },
                "discounts": {
                    "title": "خصومات",
                    "fields": {
                        "name": "اسم",
                        "discount": "خصم",
                        "discount-type": "نوع الخصم",
                        "description": "وصف"
                    }
                },
                "recurring-periods": {
                    "title": "فترات متكررة",
                    "fields": {
                        "title": "عنوان",
                        "value": "القيمة",
                        "description": "وصف"
                    }
                },
                "languages": {
                    "title": "اللغات",
                    "fields": {
                        "language": "لغة",
                        "code": "الشفرة",
                        "is-rtl": "هل rtl"
                    }
                },
                "purchase-orders": {
                    "title": "طلبات الشراء",
                    "fields": {
                        "customer": "المورد",
                        "subject": "موضوع",
                        "status": "الحالة",
                        "address": "عنوان",
                        "invoice-prefix": "بادئة الفاتورة",
                        "show-quantity-as": "تظهر الكمية كما",
                        "invoice-no": "فاتورة #",
                        "reference": "مرجع",
                        "order-date": "تم إصداره في",
                        "order-due-date": "تاريخ استحقاق الطلب",
                        "update-stock": "تحديث الأسهم",
                        "notes": "ملاحظات",
                        "currency": "دقة",
                        "warehouse": "مستودع",
                        "tax": "ضريبة",
                        "discount": "خصم",
                        "amount": "كمية"
                    }
                },
                "manage-projects": {
                    "title": "إدارة المشاريع"
                },
                "projects": {
                    "title": "مشاريع"
                },
                "project-statuses": {
                    "title": "حالات المشروع",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف"
                    }
                },
                "client-projects": {
                    "title": "مشاريع العملاء",
                    "fields": {
                        "title": "عنوان",
                        "client": "عميل",
                        "priority": "أفضلية",
                        "budget": "ميزانية",
                        "billing-type": "نوع الفواتير",
                        "phase": "مرحلة",
                        "assigned-to": "مخصص ل",
                        "start-date": "تاريخ البدء",
                        "due-date": "تاريخ الاستحقاق",
                        "status": "الحالة",
                        "description": "وصف",
                        "demo-url": "عنوان URL التجريبي"
                    }
                },
                "project-billing-types": {
                    "title": "أنواع الفواتير المشروع",
                    "fields": {
                        "title": "عنوان",
                        "description": "وصف"
                    }
                },
                "time-entries": {
                    "title": "إدخالات الوقت",
                    "fields": {
                        "project": "مشروع",
                        "start-date": "تاريخ البدء",
                        "end-date": "تاريخ الانتهاء",
                        "description": "وصف"
                    }
                },
                "sales": {
                    "title": "مبيعات"
                },
                "invoices": {
                    "title": "الفواتير",
                    "fields": {
                        "customer": "زبون",
                        "currency": "دقة",
                        "title": "عنوان",
                        "address": "عنوان",
                        "invoice-prefix": "بادئة الفاتورة",
                        "show-quantity-as": "تظهر الكمية كما",
                        "invoice-no": "فاتورة #",
                        "status": "الحالة",
                        "reference": "مرجع",
                        "invoice-date": "تاريخ الفاتورة",
                        "invoice-due-date": "تاريخ استحقاق الفاتورة",
                        "invoice-notes": "ملاحظات الفاتورة",
                        "tax": "ضريبة",
                        "discount": "خصم",
                        "amount": "كمية",
                        "discount_format": "تنسيق الخصم",
                        "tax_format": "تنسيق الضريبة"
                    }
                },
                "quotes": {
                    "title": "يقتبس",
                    "fields": {
                        "customer": "زبون",
                        "status": "الحالة",
                        "title": "عنوان",
                        "address": "عنوان",
                        "quote-prefix": "بادئة اقتباس",
                        "show-quantity-as": "تظهر الكمية كما",
                        "quote-no": "اقتباس لا",
                        "reference": "مرجع",
                        "quote-date": "تاريخ الاقتباس",
                        "quote-expiry-date": "تاريخ انتهاء الصلاحية",
                        "proposal-text": "نص الاقتراح",
                        "currency": "دقة",
                        "tax": "ضريبة",
                        "discount": "خصم",
                        "amount": "كمية"
                    }
                },
                "recurring-invoices": {
                    "title": "الفواتير المتكررة",
                    "fields": {
                        "customer": "زبون",
                        "currency": "دقة",
                        "title": "عنوان",
                        "address": "عنوان",
                        "invoice-prefix": "بادئة الفاتورة",
                        "show-quantity-as": "تظهر الكمية كما",
                        "invoice-no": "فاتورة #",
                        "status": "الحالة",
                        "reference": "مرجع",
                        "invoice-date": "تاريخ الفاتورة",
                        "invoice-due-date": "تاريخ استحقاق الفاتورة",
                        "invoice-notes": "ملاحظات الفاتورة",
                        "tax": "ضريبة",
                        "discount": "خصم",
                        "recurring-period": "فترة متكررة",
                        "amount": "كمية",
                        "products": "منتجات",
                        "paymentstatus": "حالة السداد"
                    }
                },
                "contact-groups": {
                    "title": "مجموعات الاتصال",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف"
                    }
                },
                "contact-types": {
                    "title": "أنواع الاتصال",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف"
                    }
                },
                "contact-notes": {
                    "title": "ملاحظات الاتصال",
                    "fields": {
                        "title": "عنوان",
                        "contact": "اتصل",
                        "notes": "ملاحظات",
                        "attachment": "المرفق"
                    }
                },
                "contact-documents": {
                    "title": "وثائق الاتصال",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف",
                        "attachments": "مرفقات",
                        "contact": "اتصل"
                    }
                },
                "products-transfer": {
                    "title": "نقل المنتجات"
                },
                "products-return": {
                    "title": "عودة المنتجات",
                    "fields": {
                        "subject": "موضوع",
                        "customer": "زبون",
                        "currency": "دقة",
                        "status": "الحالة",
                        "address": "عنوان",
                        "invoice-prefix": "بادئة الفاتورة",
                        "show-quantity-as": "تظهر الكمية كما",
                        "invoice-no": "فاتورة #",
                        "reference": "مرجع",
                        "order-date": "تاريخ الطلب",
                        "order-due-date": "تاريخ استحقاق الطلب",
                        "update-stock": "تحديث الأسهم",
                        "notes": "ملاحظات",
                        "tax": "ضريبة",
                        "discount": "خصم",
                        "ware-house": "وير المنزل"
                    }
                },
                "brands": {
                    "title": "العلامات التجارية",
                    "fields": {
                        "title": "عنوان",
                        "icon": "أيقونة",
                        "status": "الحالة"
                    }
                },
                "database-backup": {
                    "title": "قاعدة بيانات النسخ الاحتياطي"
                },
                "departments": {
                    "title": "الإدارات",
                    "fields": {
                        "name": "اسم",
                        "description": "وصف",
                        "created-by": "صنع من قبل"
                    }
                },
                "support": {
                    "title": "الدعم",
                    "fields": {
                        "name": "اسم",
                        "email": "البريد الإلكتروني",
                        "subject": "موضوع",
                        "department": " قسم، أقسام",
                        "priority": "أفضلية",
                        "description": "وصف",
                        "attachments": "مرفقات",
                        "created-by": "صنع من قبل",
                        "assigned-to": "مخصص ل"
                    }
                },
                "knowledgebase": {
                    "title": "قاعدة المعرفة"
                },
                "transfers": {
                    "title": "نقل",
                    "fields": {
                        "from": "من عند",
                        "to": "إلى",
                        "date": "تاريخ",
                        "amount": "كمية",
                        "ref-no": "الرقم المرجعي",
                        "payment-method": "طريقة الدفع او السداد",
                        "description": "وصف"
                    }
                },
                "articles": {
                    "title": "مقالات",
                    "fields": {
                        "title": "عنوان",
                        "category-id": "الاقسام",
                        "tag-id": "الكلمات",
                        "page-text": "نص",
                        "excerpt": "مقتطفات",
                        "featured-image": "صورة مميزة",
                        "available-for": "متاح لى"
                    }
                },
                "balance-sheet": {
                    "title": "ورقة التوازن"
                },
                "general-settings": {
                    "title": "الاعدادات العامة"
                },
                "master-settings": {
                    "title": "إعدادات سيد",
                    "fields": {
                        "module": "وحدة",
                        "key": "مفتاح",
                        "description": "وصف"
                    }
                },
                "countries": {
                    "title": "بلدان",
                    "fields": {
                        "shortcode": "رمز قصير",
                        "title": "عنوان"
                    }
                },
                "measurement-units": {
                    "title": "وحدات القياس",
                    "fields": {
                        "title": "عنوان",
                        "status": "الحالة",
                        "description": "وصف"
                    }
                },
                "payments": {
                    "title": "المدفوعات",
                    "failed": "عملية الدفع فشلت",
                    "cancelled": "لقد ألغيت دفعتك"
                },
                "navigation-menues": {
                    "title": "قوائم التنقل"
                },
                "app_create": "خلق",
                "app_save": "حفظ",
                "app_edit": "تصحيح",
                "app_restore": "استعادة",
                "app_values": "القيم",
                "app_permadel": "الحذف بشكل نهائي",
                "app_all": "الكل",
                "app_trash": "قمامة، يدمر، يهدم",
                "app_view": "رأي",
                "app_update": "تحديث",
                "app_list": "قائمة",
                "app_no_entries_in_table": "لا توجد إدخالات في الجدول",
                "app_custom_controller_index": "مؤشر تحكم مخصص.",
                "app_logout": "الخروج",
                "app_add_new": "اضف جديد",
                "app_are_you_sure": "هل أنت واثق؟",
                "app_back_to_list": "الرجوع للقائمة",
                "app_dashboard": "لوحة القيادة",
                "app_delete": "حذف",
                "app_delete_selected": "احذف المختار",
                "app_category": "الفئة",
                "app_categories": "الاقسام",
                "app_sample_category": "فئة العينة",
                "app_questions": "الأسئلة",
                "app_question": "سؤال",
                "app_answer": "إجابة",
                "app_sample_question": "نموذج السؤال",
                "app_sample_answer": "عينة إجابة",
                "app_faq_management": "إدارة التعليمات",
                "app_administrator_can_create_other_users": "المسؤول (يمكنه إنشاء مستخدمين آخرين)",
                "app_simple_user": "مستخدم بسيط",
                "app_title": "عنوان",
                "app_roles": "الأدوار",
                "app_role": "وظيفة",
                "app_user_management": "إدارةالمستخدم",
                "app_users": "المستخدمين",
                "app_user": "المستعمل",
                "app_name": "اسم",
                "app_email": "البريد الإلكتروني",
                "app_password": "كلمه السر",
                "app_remember_token": "تذكر الرمز",
                "app_permissions": "أذونات",
                "app_user_actions": "إجراءات المستخدم",
                "app_action": "عمل",
                "app_action_model": "نموذج العمل",
                "app_action_id": "معرف العمل",
                "app_time": "زمن",
                "app_campaign": "حملة",
                "app_campaigns": "حملات",
                "app_description": "وصف",
                "app_valid_from": "صالح من تاريخ",
                "app_valid_to": "صالحة ل",
                "app_discount_amount": "مقدار الخصم",
                "app_discount_percent": "خصم في المئة",
                "app_coupons_amount": "كوبونات المبلغ",
                "app_coupons": "كوبونات",
                "app_code": "الشفرة",
                "app_redeem_time": "استرداد الوقت",
                "app_coupon_management": "إدارة القسيمة",
                "app_time_management": "إدارة الوقت",
                "app_projects": "مشاريع",
                "app_reports": "تقارير",
                "app_time_entries": "إدخالات الوقت",
                "app_work_type": "نوع العمل",
                "app_work_types": "أنواع العمل",
                "app_project": "مشروع",
                "app_start_time": "وقت البدء",
                "app_end_time": "وقت النهاية",
                "app_expense_category": "فئة النفقات",
                "app_expense_categories": "فئات النفقات",
                "app_expense_management": "إدارة حساب",
                "app_expenses": "نفقات",
                "app_expense": "مصروف",
                "app_entry_date": "موعد الدخول",
                "app_amount": "كمية",
                "app_income_categories": "فئات الدخل",
                "app_monthly_report": "التقرير الشهري",
                "app_companies": "الشركات",
                "app_company_name": "اسم الشركة",
                "app_address": "عنوان",
                "app_website": "موقع الكتروني",
                "app_contact_management": "إدارة الاتصال",
                "app_contacts": "جهات الاتصال",
                "app_company": "شركة",
                "app_first_name": "الاسم الاول",
                "app_last_name": "الكنية",
                "app_phone": "هاتف",
                "app_phone1": "الهاتف 1",
                "app_phone2": "الهاتف 2",
                "app_skype": "سكايب",
                "app_photo": "الصورة (بحد أقصى 8 ميجابايت)",
                "app_category_name": "اسم التصنيف",
                "app_product_management": "ادارة المنتج",
                "app_products": "منتجات",
                "app_product_name": "اسم المنتج",
                "app_price": "السعر",
                "app_tags": "الكلمات",
                "app_tag": "بطاقة",
                "app_photo1": "Photo1",
                "app_photo2": "Photo2",
                "app_photo3": "photo3 من",
                "app_calendar": "التقويم",
                "app_statuses": "الأوضاع",
                "app_task_management": "ادارة المهام",
                "app_tasks": "مهام",
                "app_status": "الحالة",
                "app_attachment": "المرفق",
                "app_due_date": "تاريخ الاستحقاق",
                "app_assigned_to": "مخصص ل",
                "app_assets": "الأصول",
                "app_asset": "الأصول",
                "app_serial_number": "رقم سري",
                "app_location": "موقعك",
                "app_locations": "مواقع",
                "app_assigned_user": "معين (مستخدم)",
                "app_notes": "ملاحظات",
                "app_assets_history": "تاريخ الأصول",
                "app_assets_management": "إدارة الأصول",
                "app_slug": "سبيكة",
                "app_content_management": "ادارة المحتوى",
                "app_text": "نص",
                "app_excerpt": "مقتطفات",
                "app_featured_image": "صورة مميزة",
                "app_pages": "صفحات",
                "app_axis": "محور",
                "app_show": "تبين",
                "app_group_by": "مجموعة من",
                "app_chart_type": "نوع الرسم البياني",
                "app_create_new_report": "إنشاء تقرير جديد",
                "app_no_reports_yet": "لا توجد تقارير حتى الآن.",
                "app_created_at": "أنشئت في",
                "app_updated_at": "تم التحديث في",
                "app_deleted_at": "تم الحذف في",
                "app_reports_x_axis_field": "المحور السيني - يرجى اختيار أحد حقول التاريخ / الوقت",
                "app_reports_y_axis_field": "المحور ص - الرجاء اختيار أحد حقول الأرقام",
                "app_select_crud_placeholder": "يرجى اختيار واحدة من CRUDs الخاص بك",
                "app_select_dt_placeholder": "يرجى اختيار واحد من حقول التاريخ / الوقت",
                "app_aggregate_function_use": "مجموع وظيفة للاستخدام",
                "app_x_axis_group_by": "مجموعة المحور س",
                "app_x_axis_field": "مجال المحور السيني (التاريخ / الوقت)",
                "app_y_axis_field": "مجال المحور ص",
                "app_integer_float_placeholder": "يرجى اختيار أحد الحقول الصحيحة / الطافية",
                "app_change_notifications_field_1_label": "إرسال إشعار البريد الإلكتروني للمستخدم",
                "app_change_notifications_field_2_label": "عند الدخول على CRUD",
                "app_select_users_placeholder": "يرجى اختيار واحد من المستخدمين لديك",
                "app_is_created": "تم إنشاؤه",
                "app_is_updated": "يتم تحديث",
                "app_is_deleted": "يتم حذف",
                "app_notifications": "إخطارات",
                "app_notify_user": "أبلغ المستخدم",
                "app_when_crud": "عندما الخام",
                "app_create_new_notification": "إنشاء إشعار جديد",
                "app_stripe_transactions": "المعاملات الشريط",
                "app_upgrade_to_premium": "الترقية إلى بريميوم",
                "app_messages": "رسائل",
                "app_you_have_no_messages": "ليس لديك رسائل.",
                "app_all_messages": "جميع الرسائل",
                "app_new_message": "رسالة جديدة",
                "app_outbox": "صندوق الحفظ",
                "app_inbox": "صندوق الوارد",
                "app_recipient": "مستلم",
                "app_subject": "موضوع",
                "app_message": "رسالة",
                "app_send": "إرسال",
                "app_reply": "الرد",
                "app_calendar_sources": "مصادر التقويم",
                "app_new_calendar_source": "إنشاء مصدر تقويم جديد",
                "app_crud_title": "العنوان الخام",
                "app_crud_date_field": "حقل تاريخ الخام",
                "app_prefix": "اختصار",
                "app_label_field": "حقل التسمية",
                "app_suffix": "Sufix",
                "app_no_calendar_sources": "لا توجد مصادر للتقويم حتى الآن.",
                "app_crud_event_field": "مجال تسمية الحدث",
                "app_create_new_calendar_source": "إنشاء مصدر تقويم جديد",
                "app_edit_calendar_source": "تحرير مصدر التقويم",
                "app_client_management": "إدارة العملاء",
                "app_client_management_settings": "إعدادات إدارة العميل",
                "app_country": "بلد",
                "app_client_status": "حالة العميل",
                "app_clients": "عملاء",
                "app_client_statuses": "حالات العميل",
                "app_currencies": "العملات",
                "app_main_currency": "العملة الرئيسية",
                "app_documents": "مستندات",
                "app_file": "ملف",
                "app_income_source": "مصدر دخل",
                "app_income_sources": "مصادر الدخل",
                "app_fee_percent": "رسوم في المئة",
                "app_note_text": "ملاحظة النص",
                "app_client": "عميل",
                "app_start_date": "تاريخ البدء",
                "app_budget": "ميزانية",
                "app_project_status": "حالة المشروع",
                "app_project_statuses": "حالات المشروع",
                "app_transactions": "المعاملات",
                "app_transaction_types": "أنواع المعاملات",
                "app_transaction_type": "نوع المعاملة",
                "app_transaction_date": "تاريخ الصفقة",
                "app_currency": "دقة",
                "app_current_password": "كلمة المرور الحالي",
                "app_new_password": "كلمة السر الجديدة",
                "app_password_confirm": "تأكيد كلمة السر الجديدة",
                "app_dashboard_text": "لقد سجلت الدخول!",
                "app_forgot_password": "نسيت رقمك السري؟",
                "app_remember_me": "تذكرنى",
                "app_login": "تسجيل الدخول",
                "app_change_password": "غير كلمة السر",
                "app_csv": "CSV",
                "app_print": "طباعة",
                "app_excel": "تفوق",
                "app_copy": "نسخ",
                "app_colvis": "رؤية العمود",
                "app_pdf": "PDF",
                "app_reset_password": "إعادة تعيين كلمة المرور",
                "app_reset_password_woops": "<strong>يصيح!</strong> كانت هناك مشاكل في الإدخال:",
                "app_email_line1": "أنت تتلقى هذا البريد الإلكتروني لأننا تلقينا طلب إعادة تعيين كلمة المرور لحسابك.",
                "app_email_line2": "إذا لم تطلب إعادة تعيين كلمة المرور ، فلا يلزم اتخاذ أي إجراء إضافي",
                "app_email_greet": "مرحبا",
                "app_email_regards": "مع تحياتي",
                "app_confirm_password": "تأكيد كلمة المرور",
                "app_if_you_are_having_trouble": "إذا كنت تواجه مشكلة في النقر فوق",
                "app_copy_paste_url_bellow": "زر ، انسخ والصق عنوان URL أدناه في متصفح الويب الخاص بك:",
                "app_please_select": "يرجى اختيار",
                "app_register": "تسجيل",
                "app_registration": "التسجيل",
                "app_not_approved_title": "أنت غير معتمد",
                "app_not_approved_p": "حسابك لا يزال غير معتمد من قبل المسؤول. يرجى التحلي بالصبر والمحاولة مرة أخرى في وقت لاحق.",
                "app_there_were_problems_with_input": "كانت هناك مشاكل مع المدخلات",
                "app_whoops": "يصيح!",
                "app_file_contains_header_row": "يحتوي الملف على صف الرأس؟",
                "app_csvImport": "استيراد ملف CSV",
                "app_csv_file_to_import": "ملف CSV للاستيراد",
                "app_parse_csv": "تحليل CSV",
                "app_import_data": "بيانات الاستيراد",
                "app_imported_rows_to_table": "المستوردة: الصفوف الصفوف إلى: الجدول الجدول",
                "app_subscription-billing": "الاشتراكات",
                "app_subscription-payments": "المدفوعات",
                "app_basic_crm": "إدارة علاقات العملاء الأساسية",
                "app_customers": "الزبائن",
                "app_customer": "زبون",
                "app_select_all": "اختر الكل",
                "app_deselect_all": "الغاء تحديد الكل",
                "app_team-management": "فرق",
                "app_team-management-singular": "الفريق",
                "global_title": "ديجي المحاسبة ، الفواتير وفواتير CRM",
                "app_add_key": "إضافة مفتاح",
                "app_settings": "الإعدادات",
                "app_make_default": "جعل الافتراضي",
                "info": "معلومات",
                "operations_disabled": "تم تعطيل العملية في الوضع التجريبي",
                "download-template": "تحميل القالب",
                "app_refresh": "تحديث",
                "app_loading": "جار التحميل"
            },
            "custom": {
                "messages": {
                    "record_saved": "تم حفظ السجل بنجاح",
                    "record_updated": "تم تحديث السجل بنجاح",
                    "record_deleted": "تم حذف السجل بنجاح",
                    "records_deleted": "تم حذف السجلات بنجاح",
                    "record_restored": "سجل استعادة بنجاح",
                    "crud_disabled": "تم تعطيل عمليات CRUD في العرض التوضيحي",
                    "somethiswentwrong": "هناك خطأ ما",
                    "failed": "فشل:",
                    "success": "نجاح:",
                    "info": "معلومات:",
                    "mailsent": "تم إرسال البريد الإلكتروني بنجاح",
                    "smssent": "تم إرسال الرسائل القصيرة بنجاح",
                    "status-changed": "تم تغيير الحالة بنجاح",
                    "not_allowed": "آسف! غير مسموح لك بالوصول إلى هذه الصفحة",
                    "not_found": "آسف! لم يتم العثور على السجل.",
                    "profile_updated": "تم تحديث الملف الشخصي بنجاح",
                    "not_found_payment": "سجل الدفع غير موجود.",
                    "invalid_record": "سجل غير صالح",
                    "time_out": "نفذ الوقت",
                    "already-exists": "جهة الاتصال هذه لديها بالفعل وصول للمستخدم",
                    "already-exists-email": "عنوان البريد الإلكتروني هذا موجود بالفعل",
                    "contact-dont-have-email": "جهة الاتصال هذه لا تملك عنوان البريد الإلكتروني. أدخل عنوان البريد الالكتروني",
                    "click-here": "انقر <a href=\"{url}\">هنا</a> للتحرير"
                },
                "menu": {
                    "sales": "مبيعات",
                    "create-invoice": "فاتورة جديدة",
                    "create-quote": "اقتباس جديد",
                    "stock": "مخزون",
                    "crm": "CRM",
                    "create-contact": "إنشاء اتصال",
                    "project": "مشروع",
                    "balance": "توازن",
                    "miscellaneous": "متنوع",
                    "customers": "الزبائن",
                    "support": "الدعم",
                    "tickets": "تذاكر"
                },
                "translations": {
                    "title": "ترجمة"
                },
                "common": {
                    "percent": "نسبه مئويه(٪)",
                    "value": "القيمة",
                    "next": "التالى",
                    "previous": "سابق",
                    "print": "طباعة",
                    "download-pdf": "تحميل PDF",
                    "preview": "معاينة",
                    "change-status": "تغيير الوضع",
                    "cancel": "إلغاء",
                    "extra": "إضافي",
                    "sms": "رسالة قصيرة",
                    "mark-as": "وضع علامة باسم",
                    "pdf": "PDF",
                    "view-pdf": "عرض قوات الدفاع الشعبي",
                    "update-manage": "تحديث وإدارة",
                    "loading": "جار التحميل...",
                    "close": "قريب",
                    "phone": "هاتف:",
                    "email": "البريد الإلكتروني:",
                    "send": "إرسال",
                    "save": "حفظ",
                    "time": "زمن",
                    "ip": "عنوان IP",
                    "country": "بلد",
                    "city": "مدينة",
                    "browser": "المتصفح",
                    "description": "وصف",
                    "comments": "تعليقات",
                    "duplicate": "استنساخ",
                    "yes": "نعم فعلا",
                    "no": "لا",
                    "not-allowed": "آسف! غير مسموح لك بالوصول إلى هذه الصفحة",
                    "are-you-sure": "هل أنت واثق؟",
                    "are-you-sure-delete": "هل أنت متأكد أنك تريد حذف السجل؟",
                    "are-you-sure-duplicate": "هل أنت متأكد من أنك تريد تكرار هذا السجل؟",
                    "active": "نشيط",
                    "inactive": "غير نشط"
                },
                "email": {
                    "to": "إلى",
                    "customer-name": "اسم الزبون",
                    "cc": "CC",
                    "bcc": "مخفية",
                    "subject": "موضوع",
                    "message-body": "نص الرسالة",
                    "attach-pdf": "نعلق قوات الدفاع الشعبي؟",
                    "bcc-admin": "إرسال نسخة مخفية إلى المسؤول؟",
                    "send": "إرسال"
                },
                "products-transfer": {
                    "title": "نقل المنتجات",
                    "transfer_from": "نقل من (مستودع)",
                    "transfer_to": "نقل إلى (مستودع)",
                    "transfered": "تم نقل المنتجات بنجاح",
                    "no_products_transfered": "لا توجد منتجات نقل"
                },
                "currencies": {
                    "update_currency_online": "تحديث أسعار صرف العملات على الانترنت؟",
                    "currency_layer_message": "وقد التطبيق متكامل APIlaylay.com. إنه يوفر تحويل عملة في الوقت الفعلي لفواتيرك. أسعار صرف دقيقة لـ 168 عملة عالمية مع تحديثات بيانات تتراوح بين كل 60 دقيقة إلى 60 ثانية مذهلة يرجى زيارة: رابط للحصول على مفتاح API. يرجى تحديث مفتاح API: settings_url. تأكد من أنك تأخذ أفضل خطة. ملاحظة: الخطة المجانية لن تدعم تحويل العملات."
                },
                "products": {
                    "item_name": "اسم العنصر",
                    "quantity": "كمية",
                    "rate": "معدل",
                    "tax_percent": "ضريبة(٪)",
                    "tax": "ضريبة",
                    "discount": "خصم",
                    "amount": "كمية",
                    "action": "عمل",
                    "currency_help": "دفع العملة لعميلك على أساس السوق الحية",
                    "default_tax": "معدل الضريبة الافتراضي",
                    "default_discount": "معدل الخصم الافتراضي",
                    "add_new": "اضف سطر",
                    "total_tax": "إجمالي الضريبة (+)",
                    "total_discount": "إجمالي الخصم (-)",
                    "grand_total": "المجموع الكلي",
                    "discount_percent": "خصم(٪)",
                    "sub_total": "المجموع الفرعي",
                    "keep_blank": "احتفظ بها فارغة لإنشاء رقم الفاتورة تلقائيًا",
                    "please_select": "يرجى اختيار",
                    "already-in-cart": "المنتج بالفعل في العربة. هل تريد زيادة الكمية؟",
                    "already-in-cart-message": "المنتج بالفعل في العربة.",
                    "please-select-product": "يرجى اختيار المنتج",
                    "should-be-one": "يجب ألا تكون الكمية صفرا",
                    "additional-tax": "ضريبة إضافية (+)",
                    "additional-discount": "خصم إضافي (-)",
                    "amount-payable": "المبلغ المستحق",
                    "fields": {
                        "product_status": "الحالة",
                        "excerpt": "مقتطفات",
                        "excerpt_placeholder": "وصف قصير عن المنتج"
                    }
                },
                "settings": {
                    "settings": "الإعدادات",
                    "no_records_found": "لا توجد سجلات",
                    "meta_description": "ميتا الوصف",
                    "meta_keywords": "كلمات دلالية",
                    "google_analytics": "تحليلات كوكل",
                    "mail_host": "مضيف البريد",
                    "mail_port": "ميناء البريد",
                    "mail_driver": "سائق البريد",
                    "mail_password": "بريد كلمة المرور",
                    "mail_username": "البريد اسم المستخدم",
                    "mail_encryption": "التشفير",
                    "sms_driver": "سائق الرسائل القصيرة",
                    "twilio_sid": "Twilio سيد",
                    "twilio_token": "Twilio رمز",
                    "plivo_auth_id": "معرف المصادقة Plivo",
                    "plivo_auth_token": "Plivo Auth رمز",
                    "stripe_key": "شريط مفتاح",
                    "stripe_secret": "الشريط السري",
                    "stripe_currency": "عملة الشريط",
                    "site_title": "عنوان الموقع",
                    "site_logo": "شعار الموقع",
                    "site_favicon": "فافيكون",
                    "site_address": "عنوان",
                    "site_city": "مدينة الموقع",
                    "site_state": "دولة الموقع",
                    "site_country": "بلد الموقع",
                    "site_zipcode": "الرمز البريدي",
                    "country_code": "الرقم الدولي",
                    "site_phone": "هاتف الموقع",
                    "system_timezone": "وحدة زمنية",
                    "phone_number_expression": "التعبير عن رقم الهاتف",
                    "currency_code": "رمز العملة",
                    "contact_email": "تواصل بالبريد الاكتروني",
                    "rights_reserved": "حقوق الإنسان",
                    "date_format": "صيغة التاريخ",
                    "date_format_js": "تاريخ Fromat JS",
                    "home_page_caption": "الصفحة الرئيسية التسمية التوضيحية",
                    "home_page_tagline": "خط الصفحة الرئيسية",
                    "theme_color": "لون الموضوع",
                    "email": "البريد الإلكتروني",
                    "image": "صورة",
                    "currency": "دقة",
                    "account_type": "نوع الحساب",
                    "update": "تحديث",
                    "payu_salt": "ملح",
                    "payu_testmode": "هو وضع الاختبار؟",
                    "payu_merchant_key": "مفتاح التاجر",
                    "payu_working_key": "مفتاح العمل",
                    "crud_disabled": "تم تعطيل عمليات CRUD في العرض التوضيحي",
                    "not_found": "لم يتم العثور على السجل",
                    "products_selection": "اختيار المنتجات",
                    "enable_products_slider": "تمكين منزلق المنتجات؟",
                    "slider_type": "نوع الإعدادات",
                    "message_type": "نوع الرسالة",
                    "key": "مفتاح",
                    "tool-tip": "تلميح",
                    "type": "نوع",
                    "total-options": "إجمالي الخيارات",
                    "value": "القيمة",
                    "option-text": "نص الخيار",
                    "save": "حفظ",
                    "TWILIO_SID": "Twillio SID",
                    "TWILIO_TOKEN EDIT": "Twilio رمز",
                    "moduletype": "نوع الوحدة",
                    "default-payment-gateway": "بوابة الدفع الافتراضية",
                    "default-sms-gateway": "بوابة الرسائل الافتراضية",
                    "Company_Name_On_Invoice": "اسم الشركة على الفاتورة",
                    "Company-Address": "عنوان الشركة",
                    "Authorized-Person": "الشخص المرخص",
                    "Authorized-Person-Designation": "تسمية الشخص المعتمد",
                    "Authorized-Person-Signature": "توقيع الشخص المفوض",
                    "Invoice-Logo": "فاتورة الشعار",
                    "paypal": "باي بال",
                    "cash": "السيولة النقدية",
                    "payu": "PayU",
                    "make_default": "جعل الافتراضي",
                    "enable-signature-part": "تمكين جزء التوقيع",
                    "description": "وصف",
                    "company-name": "اسم الشركة",
                    "address": "عنوان",
                    "phone": "هاتف",
                    "status": "الحالة",
                    "with-out-payment": "قبول أوامر مع خارج الدفع؟",
                    "default-account": "الحساب الافتراضي لمدفوعات الطلب",
                    "stripe_mode": "الوضع",
                    "hide_stripe_remember_me_box": "إخفاء تذكرني مربع",
                    "require_billing_address": "يتطلب عنوان الفواتير",
                    "stripe_checkout_popup_image": "الصورة المنبثقة",
                    "stripe_checkout_popup_title": "عنوان منبثق",
                    "stripe_checkout_popup_description": "وصف",
                    "stripe_checkout_button_label": "تسمية زر الخروج",
                    "site-title": "عنوان الموقع",
                    "site-logo": "شعار الموقع",
                    "site-mini-name": "اسم الموقع المصغر"
                },
                "invoices": {
                    "messages": {
                        "account": "يرجى اختيار الحساب",
                        "date": "يرجى تحديد التاريخ",
                        "amount": "الرجاء إدخال المبلغ",
                        "category": "يرجى اختيار الفئة",
                        "paymethod": "يرجى اختيار طريقة الدفع",
                        "toemail": "الرجاء إدخال عنوان البريد الإلكتروني",
                        "save-success": "تمت إضافة الدفعة بنجاح",
                        "transaction_id": "الرجاء إدخال معرف المعاملة"
                    },
                    "transaction_id": "معرف المعاملة",
                    "qty": "الكمية",
                    "edit": "تحرير الفاتورة",
                    "make-payment": "قم بالدفع",
                    "email": "البريد الإلكتروني",
                    "notification": "إشعار الفاتورة",
                    "payment-reminder": "تذكير الدفع",
                    "payment-received": "تلقى الدفع",
                    "payment-overdue": "التأخر في الدفع",
                    "payment-refund": "برد المتولدة",
                    "invoice-notification": "إشعار الفاتورة",
                    "paid": "دفع",
                    "due": "مستحق (غير مدفوع)",
                    "partial": "دفع جزئي",
                    "cancelled": "ألغيت",
                    "unpaid": "الامم المتحدة مدفوعة",
                    "Unpaid": "الامم المتحدة مدفوعة",
                    "upload-documents": "تحميل الوثائق",
                    "invoice_no": "Invocie #",
                    "title-caps": "فاتورة",
                    "invoice-to": "فاتورة إلى:",
                    "attn": "عناية:",
                    "invoice-date": "تاريخ الفواتير:",
                    "due-date": "تاريخ الاستحقاق :",
                    "invoice-total": "إجمالي الفواتير:",
                    "total-paid": "مجموع المبالغ المدفوعة :",
                    "amount-due": "المبلغ المستحق:",
                    "invoice_total": "إجمالي الفاتورة:",
                    "account": "الحساب",
                    "date": "تاريخ",
                    "description": "وصف",
                    "amount": "كمية",
                    "category": "الفئة",
                    "payer": "دافع",
                    "method": "طريقة الدفع او السداد",
                    "payment-for": "الدفع مقابل",
                    "related-transactions": "المعاملات المتعلقة",
                    "history": "تاريخ العمليات",
                    "app_back_to_invoice": "العودة إلى الفاتورة",
                    "upload-success": "تم تحميل الملفات بنجاح",
                    "duplicated": "تم استنساخ الفاتورة بنجاح",
                    "repeat-on": "كرر في:",
                    "authorized-person": "الشخص المرخص",
                    "signature": "التوقيع",
                    "business-owner": "صاحب العمل",
                    "reference": "مرجع",
                    "invoice-status": "حالة الفاتورة :",
                    "payment-method": "طريقة الدفع او السداد :",
                    "note": "ملحوظة :",
                    "no-payment": "لا يوجد دفع حتى الآن",
                    "ontime": "مره واحده",
                    "stripe": "شريط",
                    "signature-saved": "تم حفظ التوقيع بنجاح",
                    "sign-above": "التوقيع أعلاه",
                    "clear-signature": "توقيع واضح",
                    "accepted": "وافقت",
                    "rejected": "مرفوض"
                },
                "articles": {
                    "related-articles": "مقالات في هذا القسم",
                    "category": "الفئة :",
                    "tag": "العلامة:"
                },
                "expense": {
                    "summary-in": "ملخص النفقات في",
                    "total-expense": "المصاريف الكلية",
                    "total-expense-this-month": "إجمالي النفقات هذا الشهر",
                    "total-expense-this-week": "إجمالي النفقات هذا الأسبوع",
                    "total-expense-last-30days": "إجمالي المصاريف آخر 30 يومًا"
                },
                "incomes": {
                    "receipt": "إيصال",
                    "for": "إلى عن على :",
                    "spent-to": "أنفق على:",
                    "na": "N / A",
                    "date": "تاريخ :",
                    "id": "معرف المعاملة: TRN #",
                    "paymethod": "طريقة الدفع:",
                    "receipt-generated-on": "الإيصال الإلكتروني. تم إنشاؤه على:",
                    "show-report": "عرض تقرير",
                    "summary-in": "ملخص الدخل في",
                    "total-income": "إجمالي الدخل",
                    "total-income-this-month": "إجمالي الدخل هذا الشهر",
                    "total-income-this-week": "إجمالي الدخل هذا الأسبوع",
                    "total-income-last-30days": "إجمالي الدخل آخر 30 يوما",
                    "show-graph": "عرض الرسم البياني"
                },
                "transfers": {
                    "account-shouldnot-same": "لا يمكنك نقل بين نفس الحساب",
                    "amount-transfered": "تم نقل المبلغ بنجاح"
                },
                "accounts": {
                    "sum-of-all-accounts": ". مجموع السجلات في كل صفحة"
                },
                "purchase_orders": {
                    "title": "طلبات الشراء",
                    "title-single": "أمر شراء",
                    "edit": "تصحيح",
                    "convert-to-invoice": "تحويل إلى فاتورة",
                    "reference": "مرجع",
                    "quote_no": "طلب #",
                    "recipient": "مستلم",
                    "quote-date": "تاريخ الطلب :",
                    "due-date": "تاريخ الاستحقاق :",
                    "total": "مجموع :",
                    "note": "ملحوظة :",
                    "delivered": "تم التوصيل",
                    "on-hold": "في الانتظار",
                    "accepted": "وافقت",
                    "rejected": "مرفوض",
                    "dead": "ميت",
                    "authorized-person": "الشخص المرخص",
                    "send-quote": "أجل خلق",
                    "quote-accepted": "ترتيب مقبول",
                    "quote-cancelled": "تم الغاء الأمر او الطلب",
                    "are-you-sure": "هل أنت واثق؟",
                    "convert-to-invoice-are-you-sure": "تحويل الاقتباس كفاتورة. هل أنت واثق؟",
                    "convertedtoinvoice": "تم تحويل الطلب إلى فاتورة بنجاح",
                    "payment-inserted": "تم إدخال الدفع بنجاح",
                    "status-changed-delivered": "تغير الوضع لتسليمها",
                    "status-changed-on-hold": "تم تغيير الحالة إلى الانتظار",
                    "quote-created": "أجل خلق",
                    "quote-created-duplicate": "ترتيب تم إنشاؤه عن طريق تكرار اقتباس آخر",
                    "status-changed-accepted": "تم تغيير الوضع إلى مقبول",
                    "status-changed-rejected": "تم تغيير الحالة إلى مرفوض",
                    "status-changed-dead": "تغير الوضع إلى الموتى",
                    "documents-uploaded": "المستندات المحملة",
                    "invoice-created-quote": "الفاتورة التي تم إنشاؤها من الاقتباس",
                    "quote-already-convert": "تم تحويل الطلب بالفعل إلى فاتورة",
                    "view-now": "عرض الآن",
                    "app_back_to_quote": "العودة للطلب",
                    "order_no": "رقم الطلب",
                    "history": "تاريخ الطلب",
                    "related-transactions": "تاريخ الدفع",
                    "date": "تاريخ",
                    "amount": "كمية",
                    "description": "وصف",
                    "payment-deleted": "تم حذف الدفع بنجاح",
                    "upload-documents": "تحميل الوثائق",
                    "upload-success": "تحميل الملف بنجاح",
                    "unpaid": "الامم المتحدة مدفوعة"
                },
                "dashboard": {
                    "phone1": "هاتف 1:"
                },
                "payments": {
                    "success": "نجاح الدفع الخاص بك.",
                    "order-no": "رقم الطلب:",
                    "customer": "العميل:",
                    "amount": "كمية :",
                    "date": "تاريخ :",
                    "status": "الحالة",
                    "products": "منتجات"
                },
                "tasks": {
                    "messages": {
                        "task-created": "تم إنشاء المهمة بنجاح",
                        "task-updated": "تم تحديث المهمة بنجاح",
                        "task-deleted": "تم حذف المهمة بنجاح"
                    },
                    "statuswise-tasks": "المهام الحالة",
                    "calendar": "المهام التقويم"
                },
                "reports": {
                    "generated-reports": "تقارير تم إنشاؤها",
                    "expense-report": "تقرير المصاريف",
                    "income-report": "تقرير الدخل",
                    "users-report": "تقرير المستخدمين",
                    "projects-report": "تقارير المشاريع",
                    "tasks-report": "تقرير المهام",
                    "assets-report": "تقرير الأصول",
                    "products-report": "تقرير المنتجات",
                    "purchase-order-report": "تقرير أوامر الشراء"
                },
                "app_messages": "رسائل"
            }
        },
        "en": {
            "Verify Your Email Address": "Verify Your Email Address",
            "A fresh verification link has been sent to your email address.": "A fresh verification link has been sent to your email address.",
            "Before proceeding, please check your email for a verification link.": "Before proceeding, please check your email for a verification link.",
            "If you did not receive the email": "If you did not receive the email",
            "click here to request another": "click here to request another",
            "Register": "Register",
            "Name": "Name",
            "E-Mail Address": "E-Mail Address",
            "Password": "Password",
            "Confirm Password": "Confirm Password",
            "pagination": {
                "previous": "« Previous",
                "next": "Next »"
            },
            "_json": {
                "Verify Your Email Address": "Verify Your Email Address",
                "A fresh verification link has been sent to your email address": {
                    "": "A fresh verification link has been sent to your email address."
                },
                "Before proceeding, please check your email for a verification link": {
                    "": "Before proceeding, please check your email for a verification link."
                },
                "If you did not receive the email": "If you did not receive the email",
                "click here to request another": "click here to request another",
                "Register": "Register",
                "Name": "Name",
                "E-Mail Address": "E-Mail Address",
                "Password": "Password",
                "Confirm Password": "Confirm Password"
            },
            "validation": {
                "accepted": "The {attribute} must be accepted.",
                "active_url": "The {attribute} is not a valid URL.",
                "after": "The {attribute} must be a date after {date}.",
                "after_or_equal": "The {attribute} must be a date after or equal to {date}.",
                "alpha": "The {attribute} may only contain letters.",
                "alpha_dash": "The {attribute} may only contain letters, numbers, dashes and underscores.",
                "alpha_num": "The {attribute} may only contain letters and numbers.",
                "array": "The {attribute} must be an array.",
                "before": "The {attribute} must be a date before {date}.",
                "before_or_equal": "The {attribute} must be a date before or equal to {date}.",
                "between": {
                    "numeric": "The {attribute} must be between {min} and {max}.",
                    "file": "The {attribute} must be between {min} and {max} kilobytes.",
                    "string": "The {attribute} must be between {min} and {max} characters.",
                    "array": "The {attribute} must have between {min} and {max} items."
                },
                "boolean": "The {attribute} field must be true or false.",
                "confirmed": "The {attribute} confirmation does not match.",
                "date": "The {attribute} is not a valid date.",
                "date_format": "The {attribute} does not match the format {format}.",
                "different": "The {attribute} and {other} must be different.",
                "digits": "The {attribute} must be {digits} digits.",
                "digits_between": "The {attribute} must be between {min} and {max} digits.",
                "dimensions": "The {attribute} has invalid image dimensions.",
                "distinct": "The {attribute} field has a duplicate value.",
                "email": "The {attribute} must be a valid email address.",
                "exists": "The selected {attribute} is invalid.",
                "file": "The {attribute} must be a file.",
                "filled": "The {attribute} field must have a value.",
                "gt": {
                    "numeric": "The {attribute} must be greater than {value}.",
                    "file": "The {attribute} must be greater than {value} kilobytes.",
                    "string": "The {attribute} must be greater than {value} characters.",
                    "array": "The {attribute} must have more than {value} items."
                },
                "gte": {
                    "numeric": "The {attribute} must be greater than or equal {value}.",
                    "file": "The {attribute} must be greater than or equal {value} kilobytes.",
                    "string": "The {attribute} must be greater than or equal {value} characters.",
                    "array": "The {attribute} must have {value} items or more."
                },
                "image": "The {attribute} must be an image.",
                "in": "The selected {attribute} is invalid.",
                "in_array": "The {attribute} field does not exist in {other}.",
                "integer": "The {attribute} must be an integer.",
                "ip": "The {attribute} must be a valid IP address.",
                "ipv4": "The {attribute} must be a valid IPv4 address.",
                "ipv6": "The {attribute} must be a valid IPv6 address.",
                "json": "The {attribute} must be a valid JSON string.",
                "lt": {
                    "numeric": "The {attribute} must be less than {value}.",
                    "file": "The {attribute} must be less than {value} kilobytes.",
                    "string": "The {attribute} must be less than {value} characters.",
                    "array": "The {attribute} must have less than {value} items."
                },
                "lte": {
                    "numeric": "The {attribute} must be less than or equal {value}.",
                    "file": "The {attribute} must be less than or equal {value} kilobytes.",
                    "string": "The {attribute} must be less than or equal {value} characters.",
                    "array": "The {attribute} must not have more than {value} items."
                },
                "max": {
                    "numeric": "The {attribute} may not be greater than {max}.",
                    "file": "The {attribute} may not be greater than {max} kilobytes.",
                    "string": "The {attribute} may not be greater than {max} characters.",
                    "array": "The {attribute} may not have more than {max} items."
                },
                "mimes": "The {attribute} must be a file of type: {values}.",
                "mimetypes": "The {attribute} must be a file of type: {values}.",
                "min": {
                    "numeric": "The {attribute} must be at least {min}.",
                    "file": "The {attribute} must be at least {min} kilobytes.",
                    "string": "The {attribute} must be at least {min} characters.",
                    "array": "The {attribute} must have at least {min} items."
                },
                "not_in": "The selected {attribute} is invalid.",
                "not_regex": "The {attribute} format is invalid.",
                "numeric": "The {attribute} must be a number.",
                "present": "The {attribute} field must be present.",
                "regex": "The {attribute} format is invalid.",
                "required": "The {attribute} field is required.",
                "required_if": "The {attribute} field is required when {other} is {value}.",
                "required_unless": "The {attribute} field is required unless {other} is in {values}.",
                "required_with": "The {attribute} field is required when {values} is present.",
                "required_with_all": "The {attribute} field is required when {values} is present.",
                "required_without": "The {attribute} field is required when {values} is not present.",
                "required_without_all": "The {attribute} field is required when none of {values} are present.",
                "same": "The {attribute} and {other} must match.",
                "size": {
                    "numeric": "The {attribute} must be {size}.",
                    "file": "The {attribute} must be {size} kilobytes.",
                    "string": "The {attribute} must be {size} characters.",
                    "array": "The {attribute} must contain {size} items."
                },
                "string": "The {attribute} must be a string.",
                "timezone": "The {attribute} must be a valid zone.",
                "unique": "The {attribute} has already been taken.",
                "uploaded": "The {attribute} failed to upload.",
                "url": "The {attribute} format is invalid.",
                "custom": {
                    "attribute-name": {
                        "rule-name": "custom-message"
                    }
                }
            },
            "passwords": {
                "password": "Passwords must be at least six characters and match the confirmation.",
                "reset": "Your password has been reset!",
                "sent": "We have e-mailed your password reset link!",
                "token": "This password reset token is invalid.",
                "user": "We can't find a user with that e-mail address."
            },
            "quickadmin": {
                "quickadmin_title": "Accounting CRM",
                "qa_dashboard_text": "You are logged in!",
                "qa_login": "Login",
                "qa_there_were_problems_with_input": "There were problems with input",
                "qa_remember_me": "Remember me",
                "qa_reset_password_woops": "<strong>Whoops!</strong> There were problems with input:",
                "qa_reset_password": "Reset password",
                "qa_edit": "Edit",
                "qa_current_password": "Current password",
                "qa_new_password": "New password",
                "qa_password_confirm": "New password confirmation",
                "qa_save": "Save"
            },
            "others": {
                "dashboard": {
                    "recent-incomes": "Recently added incomes",
                    "recent-expenses": "Recently added expenses",
                    "recent-invoices": "Recently added invoices",
                    "recent-orders": "Recently added orders",
                    "recent-quotes": "Recently added quotes"
                },
                "suspended": "We are sorry!. Your account has been suspended. Please contact administrator"
            },
            "auth": {
                "throttle": "Too many login attempts. Please try again in {seconds} seconds.",
                "suspended": "We are sorry!. Your account has been suspended. Please contact administrator"
            },
            "global": {
                "user-management": {
                    "title": "User management"
                },
                "permissions": {
                    "title": "Permissions",
                    "fields": {
                        "title": "Title"
                    }
                },
                "roles": {
                    "title": "Roles",
                    "fields": {
                        "title": "Title",
                        "permission": "Permissions"
                    }
                },
                "users": {
                    "title": "Users",
                    "active": "Active",
                    "suspend": "Suspend",
                    "activate": "Activate",
                    "fields": {
                        "name": "Name",
                        "email": "Email",
                        "password": "Password",
                        "role": "Role",
                        "remember-token": "Remember token",
                        "contact-reference": "Contact reference",
                        "department": "Department",
                        "status": "Status"
                    }
                },
                "user-actions": {
                    "title": "User actions",
                    "created_at": "Time",
                    "fields": {
                        "user": "User",
                        "action": "Action",
                        "action-model": "Action model",
                        "action-id": "Action id"
                    }
                },
                "contact-management": {
                    "title": "Contact management"
                },
                "contact-companies": {
                    "title": "Companies",
                    "fields": {
                        "name": "Company name",
                        "email": "Email",
                        "address": "Address",
                        "website": "Website"
                    }
                },
                "contacts": {
                    "title": "Contacts",
                    "title_customers": "Customers",
                    "title_customer": "Customer",
                    "title_suppliers": "Suppliers",
                    "title_supplier": "Supplier",
                    "title_leads": "Leads",
                    "title_lead": "Lead",
                    "title_profile": "Profile",
                    "edit-profile": "Edit Profile",
                    "fields": {
                        "company": "Company",
                        "group": "Group",
                        "contact-type": "Contact type",
                        "first-name": "First name",
                        "last-name": "Last name",
                        "language": "Language",
                        "phone1": "Phone 1",
                        "phone2": "Phone 2",
                        "phone1_code": "Phone 1 Code",
                        "phone2_code": "Phone 2 Code",
                        "email": "Email",
                        "skype": "Skype",
                        "address": "Address",
                        "city": "City",
                        "state-region": "State/region",
                        "zip-postal-code": "Zip/postal code",
                        "tax-id": "Tax ID",
                        "country": "Country"
                    }
                },
                "expense-management": {
                    "title": "Accounting"
                },
                "expense-category": {
                    "title": "Expense Categories",
                    "fields": {
                        "name": "Name"
                    }
                },
                "income-category": {
                    "title": "Income categories",
                    "fields": {
                        "name": "Name"
                    }
                },
                "income": {
                    "title": "Income",
                    "fields": {
                        "account": "Account",
                        "income-category": "Income Category",
                        "entry-date": "Entry date",
                        "amount": "Amount",
                        "description": "Description",
                        "description-file": "Description file",
                        "payer": "Payer",
                        "pay-method": "Pay method",
                        "ref-no": "Ref #"
                    }
                },
                "expense": {
                    "title": "Expenses",
                    "fields": {
                        "account": "Account",
                        "expense-category": "Expense Category",
                        "entry-date": "Entry date",
                        "amount": "Amount",
                        "description": "Description",
                        "description-file": "Description file",
                        "payee": "Payee",
                        "payment-method": "Payment method",
                        "ref-no": "Ref #"
                    }
                },
                "monthly-report": {
                    "title": "Monthly report"
                },
                "faq-management": {
                    "title": "FAQ Management",
                    "faq": "FAQs"
                },
                "faq-categories": {
                    "title": "Categories",
                    "fields": {
                        "title": "Category"
                    }
                },
                "faq-questions": {
                    "title": "Questions",
                    "fields": {
                        "category": "Category",
                        "question-text": "Question",
                        "answer-text": "Answer"
                    }
                },
                "internal-notifications": {
                    "title": "Notifications",
                    "fields": {
                        "text": "Text",
                        "link": "Link",
                        "users": "Users"
                    }
                },
                "task-management": {
                    "title": "Task management"
                },
                "task-statuses": {
                    "title": "Statuses",
                    "panel-default": "Default panel",
                    "panel-primary": "Primary panel",
                    "panel-success": "Success panel",
                    "panel-info": "Info panel",
                    "panel-warning": "Warning panel",
                    "panel-danger": "Danger panel",
                    "fields": {
                        "name": "Name",
                        "color": "Color"
                    }
                },
                "task-tags": {
                    "title": "Tags",
                    "fields": {
                        "name": "Name"
                    }
                },
                "tasks": {
                    "title": "Tasks",
                    "task-status-updated": "Task status updated successfully",
                    "fields": {
                        "name": "Name",
                        "description": "Description",
                        "status": "Status",
                        "tag": "Tags",
                        "attachment": "Attachment",
                        "start-date": "Start date",
                        "due-date": "Due date",
                        "user": "Assigned to"
                    }
                },
                "task-calendar": {
                    "title": "Calendar",
                    "status-wise": "Status wise"
                },
                "content-management": {
                    "title": "Content management"
                },
                "content-categories": {
                    "title": "Categories",
                    "fields": {
                        "title": "Category",
                        "slug": "Slug"
                    }
                },
                "content-tags": {
                    "title": "Tags",
                    "fields": {
                        "title": "Tag",
                        "slug": "Slug"
                    }
                },
                "content-pages": {
                    "title": "Pages",
                    "fields": {
                        "title": "Title",
                        "category-id": "Categories",
                        "tag-id": "Tags",
                        "page-text": "Text",
                        "excerpt": "Excerpt",
                        "featured-image": "Featured image",
                        "created-at": "Time Created"
                    }
                },
                "product-management": {
                    "title": "Product management"
                },
                "product-categories": {
                    "title": "Categories",
                    "fields": {
                        "name": "Category name",
                        "description": "Description",
                        "photo": "Photo (max 8mb)"
                    }
                },
                "product-tags": {
                    "title": "Tags",
                    "fields": {
                        "name": "Name"
                    }
                },
                "products": {
                    "title": "Products",
                    "gallery-file-types": "Accepted file types: png,jpg,jpeg,gif",
                    "fields": {
                        "name": "Product name",
                        "product-code": "Product code",
                        "actual-price": "Actual price",
                        "sale-price": "Sale price",
                        "category": "Category",
                        "tag": "Tag",
                        "ware-house": "Ware house",
                        "description": "Description",
                        "excerpt": "Excerpt",
                        "stock-quantity": "Stock quantity",
                        "alert-quantity": "Alert quantity",
                        "image-gallery": "Image gallery",
                        "thumbnail": "Thumbnail",
                        "other-files": "Other files",
                        "hsn-sac-code": "HSN/SAC code",
                        "product-size": "Product size",
                        "product-weight": "Product weight",
                        "brand": "Brand"
                    }
                },
                "assets-management": {
                    "title": "Assets management"
                },
                "assets-categories": {
                    "title": "Categories",
                    "fields": {
                        "title": "Title"
                    }
                },
                "assets-statuses": {
                    "title": "Statuses",
                    "fields": {
                        "title": "Title"
                    }
                },
                "assets-locations": {
                    "title": "Locations",
                    "fields": {
                        "title": "Title"
                    }
                },
                "assets": {
                    "title": "Assets",
                    "fields": {
                        "category": "Category",
                        "serial-number": "Serial number",
                        "title": "Title",
                        "photo1": "Thumbnail",
                        "photo2": "Gallery",
                        "attachments": "Attachments",
                        "status": "Status",
                        "location": "Location",
                        "assigned-user": "Assigned (user)",
                        "notes": "Notes"
                    }
                },
                "assets-history": {
                    "title": "Assets history",
                    "created_at": "Time",
                    "fields": {
                        "asset": "Asset",
                        "status": "Status",
                        "location": "Location",
                        "assigned-user": "Assigned (user)"
                    }
                },
                "coupon-management": {
                    "title": "Coupon Management"
                },
                "coupon-campaigns": {
                    "title": "Campaigns",
                    "fields": {
                        "title": "Title",
                        "description": "Description",
                        "valid-from": "Valid from",
                        "valid-to": "Valid to",
                        "discount-amount": "Discount amount",
                        "discount-percent": "Discount percent",
                        "coupons-amount": "Coupons amount"
                    }
                },
                "coupons": {
                    "title": "Coupons",
                    "fields": {
                        "campaign": "Campaign",
                        "code": "Code",
                        "valid-from": "Valid from",
                        "valid-to": "Valid to",
                        "discount-amount": "Discount amount",
                        "discount-percent": "Discount percent",
                        "redeem-time": "Redeem time"
                    }
                },
                "expense-types": {
                    "title": "Expense types"
                },
                "global-settings": {
                    "title": "Global settings"
                },
                "currencies": {
                    "title": "Currencies",
                    "fields": {
                        "name": "Name",
                        "symbol": "Symbol",
                        "code": "Code",
                        "rate": "Rate",
                        "status": "Status",
                        "is_default": "Is Default?"
                    }
                },
                "sales-taxes": {
                    "title": "Sales taxes"
                },
                "email-templates": {
                    "title": "Email templates",
                    "fields": {
                        "name": "Name",
                        "subject": "Subject",
                        "body": "Body"
                    }
                },
                "companies": {
                    "title": "Companies",
                    "fields": {
                        "company-name": "Company name",
                        "address": "Address",
                        "business-number": "Business number",
                        "city": "City",
                        "url": "Url",
                        "state-region": "State/region",
                        "email": "Email",
                        "zip-postal-code": "Zip/postal code",
                        "country": "Country",
                        "phone": "Phone",
                        "logo": "Logo"
                    }
                },
                "accounts": {
                    "title": "Accounts",
                    "fields": {
                        "name": "Name",
                        "description": "Description",
                        "initial-balance": "Initial balance",
                        "account-number": "Account number",
                        "contact-person": "Contact person",
                        "phone": "Phone",
                        "url": "URL"
                    }
                },
                "payment-gateways": {
                    "title": "Payment gateways",
                    "fields": {
                        "name": "Name",
                        "description": "Description",
                        "logo": "Logo"
                    }
                },
                "warehouses": {
                    "title": "Warehouses",
                    "fields": {
                        "name": "Name",
                        "address": "Address",
                        "description": "Description"
                    }
                },
                "taxes": {
                    "title": "Taxes",
                    "fields": {
                        "name": "Name",
                        "rate": "Rate",
                        "rate-type": "Rate type",
                        "description": "Description"
                    }
                },
                "discounts": {
                    "title": "Discounts",
                    "fields": {
                        "name": "Name",
                        "discount": "Discount",
                        "discount-type": "Discount type",
                        "description": "Description"
                    }
                },
                "recurring-periods": {
                    "title": "Recurring periods",
                    "fields": {
                        "title": "Title",
                        "value": "Value",
                        "description": "Description"
                    }
                },
                "languages": {
                    "title": "Languages",
                    "fields": {
                        "language": "Language",
                        "code": "Code",
                        "is-rtl": "Is rtl"
                    }
                },
                "purchase-orders": {
                    "title": "Purchase orders",
                    "fields": {
                        "customer": "Supplier",
                        "subject": "Subject",
                        "status": "Status",
                        "address": "Address",
                        "invoice-prefix": "Invoice prefix",
                        "show-quantity-as": "Show quantity as",
                        "invoice-no": "Invoice #",
                        "reference": "Reference",
                        "order-date": "Issued at",
                        "order-due-date": "Order due date",
                        "update-stock": "Update stock",
                        "notes": "Notes",
                        "currency": "Currency",
                        "warehouse": "Warehouse",
                        "tax": "Tax",
                        "discount": "Discount",
                        "amount": "Amount"
                    }
                },
                "manage-projects": {
                    "title": "Manage projects"
                },
                "projects": {
                    "title": "Projects"
                },
                "project-statuses": {
                    "title": "Project statuses",
                    "fields": {
                        "name": "Name",
                        "description": "Description"
                    }
                },
                "client-projects": {
                    "title": "Client projects",
                    "fields": {
                        "title": "Title",
                        "client": "Client",
                        "priority": "Priority",
                        "budget": "Budget",
                        "billing-type": "Billing type",
                        "phase": "Phase",
                        "assigned-to": "Assigned to",
                        "start-date": "Start date",
                        "due-date": "Due date",
                        "status": "Status",
                        "description": "Description",
                        "demo-url": "Demo url"
                    }
                },
                "project-billing-types": {
                    "title": "Project billing types",
                    "fields": {
                        "title": "Title",
                        "description": "Description"
                    }
                },
                "time-entries": {
                    "title": "Time entries",
                    "fields": {
                        "project": "Project",
                        "start-date": "Start date",
                        "end-date": "End date",
                        "description": "Description"
                    }
                },
                "sales": {
                    "title": "Sales"
                },
                "invoices": {
                    "title": "Invoices",
                    "fields": {
                        "customer": "Customer",
                        "currency": "Currency",
                        "title": "Title",
                        "address": "Address",
                        "invoice-prefix": "Invoice prefix",
                        "show-quantity-as": "Show quantity as",
                        "invoice-no": "Invoice #",
                        "status": "Status",
                        "reference": "Reference",
                        "invoice-date": "Invoice date",
                        "invoice-due-date": "Invoice due date",
                        "invoice-notes": "Invoice notes",
                        "tax": "Tax",
                        "discount": "Discount",
                        "amount": "Amount",
                        "discount_format": "Discount Format",
                        "tax_format": "Tax Format"
                    }
                },
                "quotes": {
                    "title": "Quotes",
                    "fields": {
                        "customer": "Customer",
                        "status": "Status",
                        "title": "Title",
                        "address": "Address",
                        "quote-prefix": "Quote prefix",
                        "show-quantity-as": "Show quantity as",
                        "quote-no": "Quote no",
                        "reference": "Reference",
                        "quote-date": "Quote date",
                        "quote-expiry-date": "Quote expiry date",
                        "proposal-text": "Proposal text",
                        "currency": "Currency",
                        "tax": "Tax",
                        "discount": "Discount",
                        "amount": "Amount"
                    }
                },
                "recurring-invoices": {
                    "title": "Recurring invoices",
                    "fields": {
                        "customer": "Customer",
                        "currency": "Currency",
                        "title": "Title",
                        "address": "Address",
                        "invoice-prefix": "Invoice prefix",
                        "show-quantity-as": "Show quantity as",
                        "invoice-no": "Invoice #",
                        "status": "Status",
                        "reference": "Reference",
                        "invoice-date": "Invoice date",
                        "invoice-due-date": "Invoice due date",
                        "invoice-notes": "Invoice notes",
                        "tax": "Tax",
                        "discount": "Discount",
                        "recurring-period": "Recurring period",
                        "amount": "Amount",
                        "products": "Products",
                        "paymentstatus": "Paymentstatus"
                    }
                },
                "contact-groups": {
                    "title": "Contact groups",
                    "fields": {
                        "name": "Name",
                        "description": "Description"
                    }
                },
                "contact-types": {
                    "title": "Contact types",
                    "fields": {
                        "name": "Name",
                        "description": "Description"
                    }
                },
                "contact-notes": {
                    "title": "Contact notes",
                    "fields": {
                        "title": "Title",
                        "contact": "Contact",
                        "notes": "Notes",
                        "attachment": "Attachment"
                    }
                },
                "contact-documents": {
                    "title": "Contact documents",
                    "fields": {
                        "name": "Name",
                        "description": "Description",
                        "attachments": "Attachments",
                        "contact": "Contact"
                    }
                },
                "products-transfer": {
                    "title": "Products transfer"
                },
                "products-return": {
                    "title": "Products return",
                    "fields": {
                        "subject": "Subject",
                        "customer": "Customer",
                        "currency": "Currency",
                        "status": "Status",
                        "address": "Address",
                        "invoice-prefix": "Invoice prefix",
                        "show-quantity-as": "Show quantity as",
                        "invoice-no": "Invoice #",
                        "reference": "Reference",
                        "order-date": "Order date",
                        "order-due-date": "Order due date",
                        "update-stock": "Update stock",
                        "notes": "Notes",
                        "tax": "Tax",
                        "discount": "Discount",
                        "ware-house": "Ware house"
                    }
                },
                "brands": {
                    "title": "Brands",
                    "fields": {
                        "title": "Title",
                        "icon": "Icon",
                        "status": "Status"
                    }
                },
                "database-backup": {
                    "title": "Database backup"
                },
                "departments": {
                    "title": "Departments",
                    "fields": {
                        "name": "Name",
                        "description": "Description",
                        "created-by": "Created by"
                    }
                },
                "support": {
                    "title": "Support",
                    "fields": {
                        "name": "Name",
                        "email": "Email",
                        "subject": "Subject",
                        "department": "Department",
                        "priority": "Priority",
                        "description": "Description",
                        "attachments": "Attachments",
                        "created-by": "Created by",
                        "assigned-to": "Assigned to"
                    }
                },
                "knowledgebase": {
                    "title": "Knowledgebase"
                },
                "transfers": {
                    "title": "Transfers",
                    "fields": {
                        "from": "From",
                        "to": "To",
                        "date": "Date",
                        "amount": "Amount",
                        "ref-no": "Ref #",
                        "payment-method": "Payment method",
                        "description": "Description"
                    }
                },
                "articles": {
                    "title": "Articles",
                    "fields": {
                        "title": "Title",
                        "category-id": "Categories",
                        "tag-id": "Tags",
                        "page-text": "Text",
                        "excerpt": "Excerpt",
                        "featured-image": "Featured image",
                        "available-for": "Available for"
                    }
                },
                "balance-sheet": {
                    "title": "Balance sheet"
                },
                "general-settings": {
                    "title": "General settings"
                },
                "master-settings": {
                    "title": "Master settings",
                    "fields": {
                        "module": "Module",
                        "key": "Key",
                        "description": "Description"
                    }
                },
                "countries": {
                    "title": "Countries",
                    "fields": {
                        "shortcode": "Shortcode",
                        "title": "Title"
                    }
                },
                "measurement-units": {
                    "title": "Measurement units",
                    "fields": {
                        "title": "Title",
                        "status": "Status",
                        "description": "Description"
                    }
                },
                "payments": {
                    "title": "Payments",
                    "failed": "Payment Failed",
                    "cancelled": "You have cancelled your payment"
                },
                "navigation-menues": {
                    "title": "Navigation Menues"
                },
                "app_create": "Create",
                "app_save": "Save",
                "app_edit": "Edit",
                "app_restore": "Restore",
                "app_values": "Values",
                "app_permadel": "Delete Permanently",
                "app_all": "All",
                "app_trash": "Trash",
                "app_view": "View",
                "app_update": "Update",
                "app_list": "List",
                "app_no_entries_in_table": "No entries in table",
                "app_custom_controller_index": "Custom controller index.",
                "app_logout": "Logout",
                "app_add_new": "Add new",
                "app_are_you_sure": "Are you sure?",
                "app_back_to_list": "Back to list",
                "app_dashboard": "Dashboard",
                "app_delete": "Delete",
                "app_delete_selected": "Delete selected",
                "app_category": "Category",
                "app_categories": "Categories",
                "app_sample_category": "Sample category",
                "app_questions": "Questions",
                "app_question": "Question",
                "app_answer": "Answer",
                "app_sample_question": "Sample question",
                "app_sample_answer": "Sample answer",
                "app_faq_management": "FAQ Management",
                "app_administrator_can_create_other_users": "Administrator (can create other users)",
                "app_simple_user": "Simple user",
                "app_title": "Title",
                "app_roles": "Roles",
                "app_role": "Role",
                "app_user_management": "User management",
                "app_users": "Users",
                "app_user": "User",
                "app_name": "Name",
                "app_email": "Email",
                "app_password": "Password",
                "app_remember_token": "Remember token",
                "app_permissions": "Permissions",
                "app_user_actions": "User actions",
                "app_action": "Action",
                "app_action_model": "Action model",
                "app_action_id": "Action id",
                "app_time": "Time",
                "app_campaign": "Campaign",
                "app_campaigns": "Campaigns",
                "app_description": "Description",
                "app_valid_from": "Valid from",
                "app_valid_to": "Valid to",
                "app_discount_amount": "Discount amount",
                "app_discount_percent": "Discount percent",
                "app_coupons_amount": "Coupons amount",
                "app_coupons": "Coupons",
                "app_code": "Code",
                "app_redeem_time": "Redeem time",
                "app_coupon_management": "Coupon Management",
                "app_time_management": "Time management",
                "app_projects": "Projects",
                "app_reports": "Reports",
                "app_time_entries": "Time entries",
                "app_work_type": "Work type",
                "app_work_types": "Work types",
                "app_project": "Project",
                "app_start_time": "Start time",
                "app_end_time": "End time",
                "app_expense_category": "Expense Category",
                "app_expense_categories": "Expense Categories",
                "app_expense_management": "Expense Management",
                "app_expenses": "Expenses",
                "app_expense": "Expense",
                "app_entry_date": "Entry date",
                "app_amount": "Amount",
                "app_income_categories": "Income categories",
                "app_monthly_report": "Monthly report",
                "app_companies": "Companies",
                "app_company_name": "Company name",
                "app_address": "Address",
                "app_website": "Website",
                "app_contact_management": "Contact management",
                "app_contacts": "Contacts",
                "app_company": "Company",
                "app_first_name": "First name",
                "app_last_name": "Last name",
                "app_phone": "Phone",
                "app_phone1": "Phone 1",
                "app_phone2": "Phone 2",
                "app_skype": "Skype",
                "app_photo": "Photo (max 8mb)",
                "app_category_name": "Category name",
                "app_product_management": "Product management",
                "app_products": "Products",
                "app_product_name": "Product name",
                "app_price": "Price",
                "app_tags": "Tags",
                "app_tag": "Tag",
                "app_photo1": "Photo1",
                "app_photo2": "Photo2",
                "app_photo3": "Photo3",
                "app_calendar": "Calendar",
                "app_statuses": "Statuses",
                "app_task_management": "Task management",
                "app_tasks": "Tasks",
                "app_status": "Status",
                "app_attachment": "Attachment",
                "app_due_date": "Due date",
                "app_assigned_to": "Assigned to",
                "app_assets": "Assets",
                "app_asset": "Asset",
                "app_serial_number": "Serial number",
                "app_location": "Location",
                "app_locations": "Locations",
                "app_assigned_user": "Assigned (user)",
                "app_notes": "Notes",
                "app_assets_history": "Assets history",
                "app_assets_management": "Assets management",
                "app_slug": "Slug",
                "app_content_management": "Content management",
                "app_text": "Text",
                "app_excerpt": "Excerpt",
                "app_featured_image": "Featured image",
                "app_pages": "Pages",
                "app_axis": "Axis",
                "app_show": "Show",
                "app_group_by": "Group by",
                "app_chart_type": "Chart type",
                "app_create_new_report": "Create new report",
                "app_no_reports_yet": "No reports yet.",
                "app_created_at": "Created at",
                "app_updated_at": "Updated at",
                "app_deleted_at": "Deleted at",
                "app_reports_x_axis_field": "X-axis - please choose one of date/time fields",
                "app_reports_y_axis_field": "Y-axis - please choose one of number fields",
                "app_select_crud_placeholder": "Please select one of your CRUDs",
                "app_select_dt_placeholder": "Please select one of date/time fields",
                "app_aggregate_function_use": "Aggregate function to use",
                "app_x_axis_group_by": "X-axis group by",
                "app_x_axis_field": "X-axis field (date/time)",
                "app_y_axis_field": "Y-axis field",
                "app_integer_float_placeholder": "Please select one of integer/float fields",
                "app_change_notifications_field_1_label": "Send email notification to User",
                "app_change_notifications_field_2_label": "When Entry on CRUD",
                "app_select_users_placeholder": "Please select one of your Users",
                "app_is_created": "is created",
                "app_is_updated": "is updated",
                "app_is_deleted": "is deleted",
                "app_notifications": "Notifications",
                "app_notify_user": "Notify User",
                "app_when_crud": "When CRUD",
                "app_create_new_notification": "Create new Notification",
                "app_stripe_transactions": "Stripe Transactions",
                "app_upgrade_to_premium": "Upgrade to Premium",
                "app_messages": "Messages",
                "app_you_have_no_messages": "You have no messages.",
                "app_all_messages": "All Messages",
                "app_new_message": "New message",
                "app_outbox": "Outbox",
                "app_inbox": "Inbox",
                "app_recipient": "Recipient",
                "app_subject": "Subject",
                "app_message": "Message",
                "app_send": "Send",
                "app_reply": "Reply",
                "app_calendar_sources": "Calendar sources",
                "app_new_calendar_source": "Create new calendar source",
                "app_crud_title": "Crud title",
                "app_crud_date_field": "Crud date field",
                "app_prefix": "Prefix",
                "app_label_field": "Label field",
                "app_suffix": "Sufix",
                "app_no_calendar_sources": "No calendar sources yet.",
                "app_crud_event_field": "Event label field",
                "app_create_new_calendar_source": "Create new Calendar Source",
                "app_edit_calendar_source": "Edit Calendar Source",
                "app_client_management": "Client management",
                "app_client_management_settings": "Client management settings",
                "app_country": "Country",
                "app_client_status": "Client status",
                "app_clients": "Clients",
                "app_client_statuses": "Client statuses",
                "app_currencies": "Currencies",
                "app_main_currency": "Main currency",
                "app_documents": "Documents",
                "app_file": "File",
                "app_income_source": "Income source",
                "app_income_sources": "Income sources",
                "app_fee_percent": "Fee percent",
                "app_note_text": "Note text",
                "app_client": "Client",
                "app_start_date": "Start date",
                "app_budget": "Budget",
                "app_project_status": "Project status",
                "app_project_statuses": "Project statuses",
                "app_transactions": "Transactions",
                "app_transaction_types": "Transaction types",
                "app_transaction_type": "Transaction type",
                "app_transaction_date": "Transaction date",
                "app_currency": "Currency",
                "app_current_password": "Current password",
                "app_new_password": "New password",
                "app_password_confirm": "New password confirmation",
                "app_dashboard_text": "You are logged in!",
                "app_forgot_password": "Forgot your password?",
                "app_remember_me": "Remember me",
                "app_login": "Login",
                "app_change_password": "Change password",
                "app_csv": "CSV",
                "app_print": "Print",
                "app_excel": "Excel",
                "app_copy": "Copy",
                "app_colvis": "Column visibility",
                "app_pdf": "PDF",
                "app_reset_password": "Reset password",
                "app_reset_password_woops": "<strong>Whoops!</strong> There were problems with input:",
                "app_email_line1": "You are receiving this email because we received a password reset request for your account.",
                "app_email_line2": "If you did not request a password reset, no further action is required.",
                "app_email_greet": "Hello",
                "app_email_regards": "Regards",
                "app_confirm_password": "Confirm password",
                "app_if_you_are_having_trouble": "If you’re having trouble clicking the",
                "app_copy_paste_url_bellow": "button, copy and paste the URL below into your web browser:",
                "app_please_select": "Please select",
                "app_register": "Register",
                "app_registration": "Registration",
                "app_not_approved_title": "You are not approved",
                "app_not_approved_p": "Your account is still not approved by administrator. Please, be patient and try again later.",
                "app_there_were_problems_with_input": "There were problems with input",
                "app_whoops": "Whoops!",
                "app_file_contains_header_row": "File contains header row?",
                "app_csvImport": "CSV Import",
                "app_csv_file_to_import": "CSV file to import",
                "app_parse_csv": "Parse CSV",
                "app_import_data": "Import data",
                "app_imported_rows_to_table": "Imported {rows} rows to {table} table",
                "app_subscription-billing": "Subscriptions",
                "app_subscription-payments": "Payments",
                "app_basic_crm": "Basic CRM",
                "app_customers": "Customers",
                "app_customer": "Customer",
                "app_select_all": "Select all",
                "app_deselect_all": "Deselect all",
                "app_team-management": "Teams",
                "app_team-management-singular": "Team",
                "global_title": "Digi Accounting, Invoicing & Billing CRM",
                "app_add_key": "Add Key",
                "app_settings": "Settings",
                "app_make_default": "Make default",
                "info": "Info",
                "operations_disabled": "Operation disabled on demo mode",
                "download-template": "Download Template",
                "app_refresh": "Refresh",
                "app_loading": "Loading"
            },
            "custom": {
                "messages": {
                    "record_saved": "Record saved successfully",
                    "record_updated": "Record updated successfully",
                    "record_deleted": "Record deleted successfully",
                    "records_deleted": "Records deleted successfully",
                    "record_restored": "Record restored successfully",
                    "crud_disabled": "CRUD operations disabled on demo",
                    "somethiswentwrong": "Something went wrong",
                    "failed": "Failed:",
                    "success": "Success:",
                    "info": "Info:",
                    "mailsent": "Email sent successfully",
                    "smssent": "SMS sent successfully",
                    "status-changed": "Status changed successfully",
                    "not_allowed": "Sorry! You are not allowed to access this page",
                    "not_found": "Sorry! record not found.",
                    "profile_updated": "Profile updated successfully",
                    "not_found_payment": "Payment record not found.",
                    "invalid_record": "Invalid record",
                    "time_out": "Time out",
                    "already-exists": "This contact already has user access",
                    "already-exists-email": "This email address already exists",
                    "contact-dont-have-email": "This contact dont have email address. Enter email address",
                    "click-here": "Click <a href=\"{url}\">here</a> to edit"
                },
                "menu": {
                    "sales": "Sales",
                    "create-invoice": "New invoice",
                    "create-quote": "New quote",
                    "stock": "Stock",
                    "crm": "CRM",
                    "create-contact": "Create contact",
                    "project": "Project",
                    "balance": "Balance",
                    "miscellaneous": "Miscellaneous",
                    "customers": "Customers",
                    "support": "Support",
                    "tickets": "Tickets"
                },
                "translations": {
                    "title": "Translations"
                },
                "common": {
                    "percent": "Percent(%)",
                    "value": "Value",
                    "next": "Next",
                    "previous": "Previous",
                    "print": "Print",
                    "download-pdf": "Download PDF",
                    "preview": "Preview",
                    "change-status": "Change Status",
                    "cancel": "Cancel",
                    "extra": "Extra",
                    "sms": "SMS",
                    "mark-as": "Mark As",
                    "pdf": "PDF",
                    "view-pdf": "View PDF",
                    "update-manage": "Update & Manage",
                    "loading": "Loading...",
                    "close": "Close",
                    "phone": "Phone:",
                    "email": "Email:",
                    "send": "Send",
                    "save": "Save",
                    "time": "Time",
                    "ip": "IP Address",
                    "country": "Country",
                    "city": "City",
                    "browser": "Browser",
                    "description": "Description",
                    "comments": "Comments",
                    "duplicate": "Clone",
                    "yes": "Yes",
                    "no": "No",
                    "not-allowed": "Sorry! You are not allowed to access this page",
                    "are-you-sure": "Are you sure?",
                    "are-you-sure-delete": "Are you sure you want to delete the record?",
                    "are-you-sure-duplicate": "Are you sure you want to duplicate this record?",
                    "active": "Active",
                    "inactive": "In-Active"
                },
                "email": {
                    "to": "To",
                    "customer-name": "Customer Name",
                    "cc": "CC",
                    "bcc": "Bcc",
                    "subject": "Subject",
                    "message-body": "Message Body",
                    "attach-pdf": "Attach PDF?",
                    "bcc-admin": "Send Bcc to Admin?",
                    "send": "Send"
                },
                "products-transfer": {
                    "title": "Products Transfer",
                    "transfer_from": "Transfer From (Warehouse)",
                    "transfer_to": "Transfer To (Warehouse)",
                    "transfered": "Products transfered successfully",
                    "no_products_transfered": "No Products Transfered"
                },
                "currencies": {
                    "update_currency_online": "Update currency exchange rates online?",
                    "currency_layer_message": "Application has integrated currencylayer.com API. It offers a real-time currency conversion for your invoices. Accurate Exchange Rates for 168 World Currencies with data updates ranging from every 60 minutes down to stunning 60 seconds. Please visit {url} to get API key. Please update API key {settings_url}. Make sure you are taking best plan. Note: Free plan will not support currency switching."
                },
                "products": {
                    "item_name": "Item name",
                    "quantity": "Quantity",
                    "rate": "Rate",
                    "tax_percent": "Tax(%)",
                    "tax": "Tax",
                    "discount": "Discount",
                    "amount": "Amount",
                    "action": "Action",
                    "currency_help": "Payment Currency for your client based on live market",
                    "default_tax": "Default TAX Rate",
                    "default_discount": "Default Discount Rate",
                    "add_new": "Add Row",
                    "total_tax": "Total Tax (+)",
                    "total_discount": "Total Discount (-)",
                    "grand_total": "Grand Total",
                    "discount_percent": "Discount(%)",
                    "sub_total": "Sub Total",
                    "keep_blank": "Keep it Blank to Generate Invoice Number Automatically",
                    "please_select": "Please select",
                    "already-in-cart": "Product already in cart. Do you want to increase quantity?",
                    "already-in-cart-message": "Product already in cart.",
                    "please-select-product": "Please select product",
                    "should-be-one": "Quantity should not be zero",
                    "additional-tax": "Additional Tax (+)",
                    "additional-discount": "Additional Discount (-)",
                    "amount-payable": "Amount Payable",
                    "fields": {
                        "product_status": "Status",
                        "excerpt": "Excerpt",
                        "excerpt_placeholder": "Short description about product"
                    }
                },
                "settings": {
                    "settings": "Settings",
                    "no_records_found": "No Records Found",
                    "meta_description": "Meta Description",
                    "meta_keywords": "Meta Keywords",
                    "google_analytics": "Google Analytics",
                    "mail_host": "Mail Host",
                    "mail_port": "Mail Port",
                    "mail_driver": "Mail Driver",
                    "mail_password": "Mail Password",
                    "mail_username": "Mail User name",
                    "mail_encryption": "Encryption",
                    "sms_driver": "SMS Driver",
                    "twilio_sid": "Twilio sid",
                    "twilio_token": "Twilio Token",
                    "plivo_auth_id": "Plivo Auth ID",
                    "plivo_auth_token": "Plivo Auth Token",
                    "stripe_key": "Stripe Key",
                    "stripe_secret": "Stripe Secret",
                    "stripe_currency": "Stripe Currency",
                    "site_title": "Site Title",
                    "site_logo": "Site Logo",
                    "site_favicon": "Favicon",
                    "site_address": "Address",
                    "site_city": "Site City",
                    "site_state": "Site State",
                    "site_country": "Site Country",
                    "site_zipcode": "Zip Code",
                    "country_code": "Country Code",
                    "site_phone": "Site Phone",
                    "system_timezone": "Time Zone",
                    "phone_number_expression": "Phone Number Expression",
                    "currency_code": "Currency Code",
                    "contact_email": "Contact Email",
                    "rights_reserved": "Cope Rights",
                    "date_format": "Date Format",
                    "date_format_js": "Date Fromat JS",
                    "home_page_caption": "Home Page Caption",
                    "home_page_tagline": "Home Page Tag Line",
                    "theme_color": "Theme Color",
                    "email": "Email",
                    "image": "Image",
                    "currency": "Currency",
                    "account_type": "Account Type",
                    "update": "Update",
                    "payu_salt": "Salt",
                    "payu_testmode": "Is Test Mode?",
                    "payu_merchant_key": "Merchant Key",
                    "payu_working_key": "Working Key",
                    "crud_disabled": "CRUD operations disabled on demo",
                    "not_found": "Record not found",
                    "products_selection": "Products Selection",
                    "enable_products_slider": "Enable Products Slider?",
                    "slider_type": "Settings Type",
                    "message_type": "Message Type",
                    "key": "Key",
                    "tool-tip": "Tool Tip",
                    "type": "Type",
                    "total-options": "Total Options",
                    "value": "Value",
                    "option-text": "Option Text",
                    "save": "Save",
                    "TWILIO_SID": "Twillio SID",
                    "TWILIO_TOKEN EDIT": "Twilio Token",
                    "moduletype": "Module Type",
                    "default-payment-gateway": "Default Payment Gateway",
                    "default-sms-gateway": "Default SMS Gateway",
                    "Company_Name_On_Invoice": "Company Name On Invoice",
                    "Company-Address": "Company Address",
                    "Authorized-Person": "Authorized Person",
                    "Authorized-Person-Designation": "Authorized Person Designation",
                    "Authorized-Person-Signature": "Authorized Person Signature",
                    "Invoice-Logo": "Invoice Logo",
                    "paypal": "Paypal",
                    "cash": "Cash",
                    "payu": "PayU",
                    "make_default": "Make Default",
                    "enable-signature-part": "Enable signature part",
                    "description": "Description",
                    "company-name": "Company name",
                    "address": "Address",
                    "phone": "Phone",
                    "status": "Status",
                    "with-out-payment": "Accept orders with out payment?",
                    "default-account": "Default account for order payments",
                    "stripe_mode": "Mode",
                    "hide_stripe_remember_me_box": "Hide remember me box",
                    "require_billing_address": "Require billing address",
                    "stripe_checkout_popup_image": "Popup image",
                    "stripe_checkout_popup_title": "Popup title",
                    "stripe_checkout_popup_description": "Description",
                    "stripe_checkout_button_label": "Checkout button label",
                    "site-title": "Site title",
                    "site-logo": "Site logo",
                    "site-mini-name": "Site mini name"
                },
                "invoices": {
                    "messages": {
                        "account": "Please select account",
                        "date": "Please select date",
                        "amount": "Please enter amount",
                        "category": "Please select category",
                        "paymethod": "Please select payment method",
                        "toemail": "Please enter email address",
                        "save-success": "Payment added successfully",
                        "transaction_id": "Please enter transaction ID"
                    },
                    "transaction_id": "Transaction ID",
                    "qty": "Qty",
                    "edit": "Edit Invoice",
                    "make-payment": "Make Payment",
                    "email": "Email",
                    "notification": "Invoice Notification",
                    "payment-reminder": "Payment Reminder",
                    "payment-received": "Payment Received",
                    "payment-overdue": "Payment Overdue",
                    "payment-refund": "Refund Generated",
                    "invoice-notification": "Invoice Notification",
                    "paid": "Paid",
                    "due": "Due (Unpaid)",
                    "partial": "Partial Paid",
                    "cancelled": "Cancelled",
                    "unpaid": "Un-Paid",
                    "Unpaid": "Un-Paid",
                    "upload-documents": "Upload documents",
                    "invoice_no": "Invocie #",
                    "title-caps": "INVOICE",
                    "invoice-to": "Invoice To:",
                    "attn": "ATTN:",
                    "invoice-date": "Invoices Date : ",
                    "due-date": "Due Date : ",
                    "invoice-total": "Invoices Total :",
                    "total-paid": "Total Paid : ",
                    "amount-due": "Amount Due : ",
                    "invoice_total": "Invoice Total:",
                    "account": "Account",
                    "date": "Date",
                    "description": "Description",
                    "amount": "Amount",
                    "category": "Category",
                    "payer": "Payer",
                    "method": "Payment Method",
                    "payment-for": "Payment for",
                    "related-transactions": "Related Transactions",
                    "history": "Operations history",
                    "app_back_to_invoice": "Back to invoice",
                    "upload-success": "Files uploaded successfully",
                    "duplicated": "Invoice cloned successfully",
                    "repeat-on": "Repeat on : ",
                    "authorized-person": "Authorized person",
                    "signature": "signature",
                    "business-owner": "Business Owner",
                    "reference": "Reference",
                    "invoice-status": "Invoice Status : ",
                    "payment-method": "Payment Method : ",
                    "note": "Note : ",
                    "no-payment": "No Payment Yet",
                    "ontime": "Onetime",
                    "stripe": "Stripe",
                    "signature-saved": "Signature saved successfully",
                    "sign-above": "Sign above",
                    "clear-signature": "Clear signature",
                    "accepted": "Accepted",
                    "rejected": "Rejected"
                },
                "articles": {
                    "related-articles": "Articles in this section",
                    "category": "Category : ",
                    "tag": "Tag : "
                },
                "expense": {
                    "summary-in": "Expense summary in ",
                    "total-expense": "Total Expense",
                    "total-expense-this-month": "Total Expense This Month",
                    "total-expense-this-week": "Total Expense This Week",
                    "total-expense-last-30days": "Total Expense Last 30 days"
                },
                "incomes": {
                    "receipt": "Receipt",
                    "for": "For : ",
                    "spent-to": "Spent to : ",
                    "na": "N/A",
                    "date": "Date : ",
                    "id": "Transaction ID : TRN#",
                    "paymethod": "Pay Method : ",
                    "receipt-generated-on": "Electronic Receipt. Generated On: ",
                    "show-report": "Show Report",
                    "summary-in": "Income summary in ",
                    "total-income": "Total Income",
                    "total-income-this-month": "Total Income This Month",
                    "total-income-this-week": "Total Income This Week",
                    "total-income-last-30days": "Total Income Last 30 days",
                    "show-graph": "Show Graph"
                },
                "transfers": {
                    "account-shouldnot-same": "You can not Transfer between same account",
                    "amount-transfered": "Amount transfered successfully"
                },
                "accounts": {
                    "sum-of-all-accounts": ". Sum of records per page "
                },
                "purchase_orders": {
                    "title": "Purchase Orders",
                    "title-single": "Purchase Order",
                    "edit": "Edit",
                    "convert-to-invoice": "Convert to invoice",
                    "reference": "Reference",
                    "quote_no": "Order #",
                    "recipient": "Recipient",
                    "quote-date": "Order Date : ",
                    "due-date": "Due Date : ",
                    "total": "Total : ",
                    "note": "Note : ",
                    "delivered": "Delivered",
                    "on-hold": "On Hold",
                    "accepted": "Accepted",
                    "rejected": "Rejected",
                    "dead": "Dead",
                    "authorized-person": "Authorized person",
                    "send-quote": "Order Created",
                    "quote-accepted": "Order Accepted",
                    "quote-cancelled": "Order Cancelled",
                    "are-you-sure": "Are you sure?",
                    "convert-to-invoice-are-you-sure": "Convert the quote as invoice. Are you sure?",
                    "convertedtoinvoice": "Order converted to invoice successfully",
                    "payment-inserted": "Payment inserted successfully",
                    "status-changed-delivered": "Status changed to delivered",
                    "status-changed-on-hold": "Status changed to on-hold",
                    "quote-created": "Order Created",
                    "quote-created-duplicate": "Order Created by Duplicating another quote",
                    "status-changed-accepted": "Status changed to accepted",
                    "status-changed-rejected": "Status changed to rejected",
                    "status-changed-dead": "Status changed to dead",
                    "documents-uploaded": "Documents uploaded",
                    "invoice-created-quote": "Invoice Created from quote",
                    "quote-already-convert": "Order already converted to Invoice",
                    "view-now": "View Now",
                    "app_back_to_quote": "Back to Orders",
                    "order_no": "Order No.",
                    "history": "Order history",
                    "related-transactions": "Payment history",
                    "date": "Date",
                    "amount": "Amount",
                    "description": "Description",
                    "payment-deleted": "Payment deleted successfully",
                    "upload-documents": "Upload documents",
                    "upload-success": "Upload file successfully",
                    "unpaid": "Un-Paid"
                },
                "dashboard": {
                    "phone1": "Phone1 : "
                },
                "payments": {
                    "success": "Your payment success.",
                    "order-no": "Order No. : ",
                    "customer": "Customer : ",
                    "amount": "Amount : ",
                    "date": "Date : ",
                    "status": "Status",
                    "products": "Products"
                },
                "tasks": {
                    "messages": {
                        "task-created": "Task created successfully",
                        "task-updated": "Task updated successfully",
                        "task-deleted": "Task deleted successfully"
                    },
                    "statuswise-tasks": "Statuswise tasks",
                    "calendar": "Tasks Calendar"
                },
                "reports": {
                    "generated-reports": "Generated Reports",
                    "expense-report": "Expense Report",
                    "income-report": "Income Report",
                    "users-report": "Users Report",
                    "projects-report": "Contacts Projects Reports",
                    "tasks-report": "Tasks Report",
                    "assets-report": "Assets Report",
                    "products-report": "Products Report",
                    "purchase-order-report": "Purchase Orders Report"
                },
                "app_messages": "Messages"
            }
        },
        "hi": {
            "Verify Your Email Address": "अपने ईमेल पते की पुष्टि करें",
            "A fresh verification link has been sent to your email address.": "आपके ईमेल पते पर एक ताजा सत्यापन लिंक भेजा गया है।",
            "Before proceeding, please check your email for a verification link.": "आगे बढ़ने से पहले, कृपया सत्यापन लिंक के लिए अपना ईमेल देखें।",
            "If you did not receive the email": "यदि आपको ईमेल प्राप्त नहीं हुआ है",
            "click here to request another": "दूसरा अनुरोध करने के लिए यहां क्लिक करें",
            "Register": "रजिस्टर",
            "Name": "नाम",
            "E-Mail Address": "ईमेल पता",
            "Password": "पारण शब्द",
            "Confirm Password": "पासवर्ड की पुष्टि कीजिये",
            "pagination": {
                "previous": "&quot; पिछला",
                "next": "आगामी &quot;"
            },
            "_json": {
                "Verify Your Email Address": "अपने ईमेल पते की पुष्टि करें",
                "A fresh verification link has been sent to your email address": {
                    "": "आपके ईमेल पते पर एक ताजा सत्यापन लिंक भेजा गया है।"
                },
                "Before proceeding, please check your email for a verification link": {
                    "": "आगे बढ़ने से पहले, कृपया सत्यापन लिंक के लिए अपना ईमेल देखें।"
                },
                "If you did not receive the email": "यदि आपको ईमेल प्राप्त नहीं हुआ है",
                "click here to request another": "दूसरा अनुरोध करने के लिए यहां क्लिक करें",
                "Register": "रजिस्टर",
                "Name": "नाम",
                "E-Mail Address": "ईमेल पता",
                "Password": "पारण शब्द",
                "Confirm Password": "पासवर्ड की पुष्टि कीजिये"
            },
            "validation": {
                "accepted": ": विशेषता को स्वीकार किया जाना चाहिए।",
                "active_url": ": विशेषता एक मान्य URL नहीं है।",
                "after": "ए: विशेषता के बाद की तारीख होनी चाहिए: तारीख।",
                "after_or_equal": "विशेषता: तारीख के बाद या उसके बराबर की तारीख होना चाहिए।",
                "alpha": ": विशेषता में केवल अक्षर हो सकते हैं।",
                "alpha_dash": ": विशेषता में केवल अक्षर, संख्याएं, डैश और अंडरस्कोर हो सकते हैं।",
                "alpha_num": ": विशेषता में केवल अक्षर और संख्याएँ हो सकती हैं।",
                "array": ": विशेषता एक सरणी होनी चाहिए।",
                "before": "विशेषता: तारीख से पहले की तारीख होनी चाहिए।",
                "before_or_equal": "विशेषता: तिथि से पहले या उसके बराबर की तारीख होना चाहिए।",
                "between": {
                    "numeric": "ए: विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम।",
                    "file": "ए: विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम किलोबाइट।",
                    "string": ": विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम वर्ण।",
                    "array": ": गुण के बीच होना चाहिए: न्यूनतम और: अधिकतम आइटम।"
                },
                "boolean": ": विशेषता फ़ील्ड सही या गलत होना चाहिए।",
                "confirmed": ": विशेषता पुष्टि मेल नहीं खाती।",
                "date": ": विशेषता मान्य दिनांक नहीं है।",
                "date_format": ": विशेषता प्रारूप से मेल नहीं खाती: प्रारूप।",
                "different": ": विशेषता और: अन्य अलग होना चाहिए।",
                "digits": ": गुण होना चाहिए: अंक अंक।",
                "digits_between": ": विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम अंक।",
                "dimensions": ": विशेषता में अमान्य छवि आयाम हैं।",
                "distinct": "विशेषता फ़ील्ड में डुप्लिकेट मान है।",
                "email": ": विशेषता एक मान्य ईमेल पता होना चाहिए।",
                "exists": "चयनित: विशेषता अमान्य है।",
                "file": ": विशेषता एक फ़ाइल होनी चाहिए।",
                "filled": "विशेषता फ़ील्ड का मान होना चाहिए।",
                "gt": {
                    "numeric": "गुण: मान से अधिक होना चाहिए।",
                    "file": "गुण: मान किलोबाइट से अधिक होना चाहिए।",
                    "string": "गुण: मान वर्णों से अधिक होना चाहिए।",
                    "array": "गुण: मान आइटम से अधिक होना चाहिए।"
                },
                "gte": {
                    "numeric": "गुण: मान से अधिक या बराबर होना चाहिए: मान।",
                    "file": "ए: विशेषता से अधिक या बराबर होना चाहिए: मूल्य किलोबाइट।",
                    "string": "गुण: मान वर्ण से अधिक या बराबर होना चाहिए।",
                    "array": "ए: विशेषता के पास होना चाहिए: मूल्य आइटम या अधिक।"
                },
                "image": ": विशेषता एक छवि होनी चाहिए।",
                "in": "चयनित: विशेषता अमान्य है।",
                "in_array": ": विशेषता फ़ील्ड में मौजूद नहीं है: अन्य।",
                "integer": "विशेषता: पूर्णांक होना आवश्यक है।",
                "ip": ": विशेषता एक मान्य IP पता होना चाहिए।",
                "ipv4": "विशेषता: एक मान्य IPv4 पता होना चाहिए।",
                "ipv6": "विशेषता: एक मान्य IPv6 पता होना चाहिए।",
                "json": "विशेषता: एक वैध JSON स्ट्रिंग होना चाहिए।",
                "lt": {
                    "numeric": "गुण: मान से कम होना चाहिए।",
                    "file": "गुण: मान किलोबाइट से कम होना चाहिए।",
                    "string": "गुण: मान वर्णों से कम होना चाहिए।",
                    "array": "गुण: से कम होना चाहिए: मूल्य आइटम।"
                },
                "lte": {
                    "numeric": "गुण: मान इससे कम या बराबर होना चाहिए: मान।",
                    "file": "ए: विशेषता से कम या बराबर होना चाहिए: मूल्य किलोबाइट।",
                    "string": "गुण: मान वर्ण से कम या बराबर होना चाहिए।",
                    "array": ": विशेषता से अधिक नहीं होना चाहिए: मूल्य आइटम।"
                },
                "max": {
                    "numeric": "विशेषता: अधिकतम से अधिक नहीं हो सकती है।",
                    "file": "विशेषता: अधिकतम किलोबाइट से अधिक नहीं हो सकती है।",
                    "string": ": विशेषता से अधिक नहीं हो सकता है: अधिकतम वर्ण।",
                    "array": ": विशेषता से अधिक नहीं हो सकता है: अधिकतम आइटम।"
                },
                "mimes": ": विशेषता प्रकार की एक फ़ाइल होनी चाहिए: मान।",
                "mimetypes": ": विशेषता प्रकार की एक फ़ाइल होनी चाहिए: मान।",
                "min": {
                    "numeric": "ए: विशेषता कम से कम होनी चाहिए: न्यूनतम।",
                    "file": "ए: विशेषता कम से कम होनी चाहिए: न्यूनतम किलोबाइट।",
                    "string": "ए: विशेषता कम से कम होनी चाहिए: मिन वर्ण।",
                    "array": ": विशेषता में कम से कम: न्यूनतम आइटम होना चाहिए।"
                },
                "not_in": "चयनित: विशेषता अमान्य है।",
                "not_regex": ": विशेषता स्वरूप अमान्य है।",
                "numeric": ": विशेषता एक संख्या होनी चाहिए।",
                "present": ": विशेषता फ़ील्ड मौजूद होना चाहिए।",
                "regex": ": विशेषता स्वरूप अमान्य है।",
                "required": ": विशेषता फ़ील्ड आवश्यक है।",
                "required_if": ": विशेषता फ़ील्ड आवश्यक है जब: अन्य है: मान।",
                "required_unless": "जब तक: अन्य: में है: विशेषता फ़ील्ड आवश्यक है।",
                "required_with": ": मान मौजूद होने पर विशेषता फ़ील्ड आवश्यक है।",
                "required_with_all": ": मान मौजूद होने पर विशेषता फ़ील्ड आवश्यक है।",
                "required_without": "जब मान मौजूद नहीं है: विशेषता फ़ील्ड आवश्यक है।",
                "required_without_all": "जब कोई भी मान मौजूद नहीं है: विशेषता फ़ील्ड आवश्यक है।",
                "same": ": विशेषता और: अन्य मेल खाना चाहिए।",
                "size": {
                    "numeric": "ए: विशेषता होनी चाहिए: आकार।",
                    "file": "ए: विशेषता होनी चाहिए: आकार किलोबाइट।",
                    "string": ": गुण होना चाहिए: आकार वर्ण।",
                    "array": ": विशेषता में: आइटम होना चाहिए।"
                },
                "string": ": विशेषता एक स्ट्रिंग होनी चाहिए।",
                "timezone": ": विशेषता मान्य क्षेत्र होनी चाहिए।",
                "unique": "The: विशेषता को पहले ही लिया जा चुका है।",
                "uploaded": ": विशेषता अपलोड करने में विफल रही।",
                "url": ": विशेषता स्वरूप अमान्य है।",
                "custom": {
                    "attribute-name": {
                        "rule-name": "सीमा शुल्क संदेश"
                    }
                }
            },
            "sitethemes::global": {
                "site-theme": {
                    "make-default": "नई थीम सक्रिय की गई"
                },
                "site-themes": {
                    "title": "साइट थीम",
                    "yes": "हाँ",
                    "no": "नहीं",
                    "not-allowed-default": "डिफ़ॉल्ट थीम को संपादित करने की अनुमति नहीं है। आप साइट सेटिंग्स में संपादित कर सकते हैं।",
                    "not-valid-zip": "मान्य ज़िप फ़ाइल नहीं। कृपया मान्य ज़िप फ़ाइल अपलोड करें",
                    "not-valid-theme": "उन्हें फ़ाइल मान्य नहीं है",
                    "theme-already-exists": "थीम पहले से मौजूद है",
                    "theme-install-success": "थीम सफलतापूर्वक स्थापित किया गया",
                    "make-default": "नई थीम सक्रिय की गई",
                    "fields": {
                        "title": "शीर्षक",
                        "slug": "काउंटर",
                        "theme-title-key": "थीम शीर्षक कुंजी",
                        "settings-data": "सेटिंग्स डेटा",
                        "description": "विवरण",
                        "is-active": "सक्रिय है",
                        "theme-color": "थीम का रंग",
                        "make-default": "थीम डिफ़ॉल्ट के रूप में सेट"
                    }
                }
            },
            "passwords": {
                "password": "पासवर्ड कम से कम छह वर्ण का होना चाहिए और पुष्टि से मेल खाना चाहिए।",
                "reset": "आपका पासवर्ड रिसेट कर दिया गया है!",
                "sent": "हमने आपका पासवर्ड रीसेट लिंक ई-मेल कर दिया है!",
                "token": "यह पासवर्ड रीसेट टोकन अमान्य है।",
                "user": "हमें उस ई-मेल पते वाला उपयोगकर्ता नहीं मिल रहा है।"
            },
            "quickadmin": {
                "quickadmin_title": "लेखा सीआरएम",
                "qa_dashboard_text": "आप लोग्ड इन हो चुके हैं!",
                "qa_login": "लॉग इन करें",
                "qa_there_were_problems_with_input": "इनपुट में समस्याएं थीं",
                "qa_remember_me": "मुझे याद रखना",
                "qa_reset_password_woops": "<strong>ओह!</strong> इनपुट में समस्याएं थीं:",
                "qa_reset_password": "पासवर्ड रीसेट",
                "qa_edit": "संपादित करें",
                "qa_current_password": "वर्तमान पासवर्ड",
                "qa_new_password": "नया पासवर्ड",
                "qa_password_confirm": "नया पासवर्ड पुष्टि",
                "qa_save": "बचाना"
            },
            "auth": {
                "throttle": "बहुत सारे लॉगिन प्रयास। कृपया फिर से प्रयास करें: सेकंड सेकंड।",
                "suspended": "हमें खेद है!। आपका खाता निरस्त कर दिया गया है। कृपया व्यवस्थापक से संपर्क करें"
            },
            "global": {
                "user-management": {
                    "title": "उपयोगकर्ता प्रबंधन"
                },
                "permissions": {
                    "title": "अनुमतियां",
                    "fields": {
                        "title": "शीर्षक"
                    }
                },
                "roles": {
                    "title": "भूमिकाएँ",
                    "fields": {
                        "title": "शीर्षक",
                        "permission": "अनुमतियां"
                    }
                },
                "users": {
                    "title": "उपयोगकर्ता",
                    "active": "सक्रिय",
                    "suspend": "निलंबित करें",
                    "activate": "सक्रिय",
                    "fields": {
                        "name": "नाम",
                        "email": "ईमेल",
                        "password": "पारण शब्द",
                        "role": "भूमिका",
                        "remember-token": "टोकन याद रखें",
                        "contact-reference": "संदर्भ से संपर्क करें",
                        "department": "विभाग",
                        "status": "स्थिति"
                    }
                },
                "user-actions": {
                    "title": "उपयोगकर्ता क्रियाएँ",
                    "created_at": "पहर",
                    "fields": {
                        "user": "उपयोगकर्ता",
                        "action": "कार्य",
                        "action-model": "एक्शन मॉडल",
                        "action-id": "कार्रवाई आईडी"
                    }
                },
                "contact-management": {
                    "title": "संपर्क प्रबंधन"
                },
                "contact-companies": {
                    "title": "कंपनियों",
                    "fields": {
                        "name": "कंपनी का नाम",
                        "email": "ईमेल",
                        "address": "पता",
                        "website": "वेबसाइट"
                    }
                },
                "contacts": {
                    "title": "संपर्क",
                    "title_customers": "ग्राहकों",
                    "title_customer": "ग्राहक",
                    "title_suppliers": "आपूर्तिकर्ता",
                    "title_supplier": "प्रदायक",
                    "title_leads": "सुराग",
                    "title_lead": "लीड",
                    "title_profile": "प्रोफाइल",
                    "edit-profile": "प्रोफाइल एडिट करें",
                    "fields": {
                        "company": "कंपनी",
                        "group": "समूह",
                        "contact-type": "संपर्क प्रकार",
                        "first-name": "पहला नाम",
                        "last-name": "अंतिम नाम",
                        "language": "भाषा",
                        "phone1": "फोन 1",
                        "phone2": "फ़ोन २",
                        "phone1_code": "फोन 1 कोड",
                        "phone2_code": "फोन 2 कोड",
                        "email": "ईमेल",
                        "skype": "स्काइप",
                        "address": "पता",
                        "city": "शहर",
                        "state-region": "राज्य / क्षेत्र",
                        "zip-postal-code": "ज़िप / पोस्टल कोड",
                        "tax-id": "टैक्स आईडी",
                        "country": "देश"
                    }
                },
                "expense-management": {
                    "title": "लेखांकन"
                },
                "expense-category": {
                    "title": "व्यय श्रेणियाँ",
                    "fields": {
                        "name": "नाम"
                    }
                },
                "income-category": {
                    "title": "आय श्रेणियों",
                    "fields": {
                        "name": "नाम"
                    }
                },
                "income": {
                    "title": "आय",
                    "fields": {
                        "account": "लेखा",
                        "income-category": "आय श्रेणी",
                        "entry-date": "प्रवेश की तिथि",
                        "amount": "रकम",
                        "description": "विवरण",
                        "description-file": "विवरण फ़ाइल",
                        "payer": "भुगतानकर्ता",
                        "pay-method": "वेतन विधि",
                        "ref-no": "रेफरी #"
                    }
                },
                "expense": {
                    "title": "व्यय",
                    "fields": {
                        "account": "लेखा",
                        "expense-category": "व्यय की श्रेणी",
                        "entry-date": "प्रवेश की तिथि",
                        "amount": "रकम",
                        "description": "विवरण",
                        "description-file": "विवरण फ़ाइल",
                        "payee": "आदाता",
                        "payment-method": "भुगतान का तरीका",
                        "ref-no": "रेफरी #"
                    }
                },
                "monthly-report": {
                    "title": "मासिक रिपोर्ट"
                },
                "faq-management": {
                    "title": "प्रबंधन",
                    "faq": "पूछे जाने वाले प्रश्न"
                },
                "faq-categories": {
                    "title": "श्रेणियाँ",
                    "fields": {
                        "title": "वर्ग"
                    }
                },
                "faq-questions": {
                    "title": "प्रशन",
                    "fields": {
                        "category": "वर्ग",
                        "question-text": "सवाल",
                        "answer-text": "उत्तर"
                    }
                },
                "internal-notifications": {
                    "title": "सूचनाएं",
                    "fields": {
                        "text": "टेक्स्ट",
                        "link": "संपर्क",
                        "users": "उपयोगकर्ता"
                    }
                },
                "task-management": {
                    "title": "कार्य प्रबंधन"
                },
                "task-statuses": {
                    "title": "वे स्थितियां",
                    "panel-default": "डिफ़ॉल्ट पैनल",
                    "panel-primary": "प्राथमिक पैनल",
                    "panel-success": "सफलता पैनल",
                    "panel-info": "जानकारी पैनल",
                    "panel-warning": "चेतावनी पैनल",
                    "panel-danger": "खतरे का पैनल",
                    "fields": {
                        "name": "नाम",
                        "color": "रंग"
                    }
                },
                "task-tags": {
                    "title": "टैग",
                    "fields": {
                        "name": "नाम"
                    }
                },
                "tasks": {
                    "title": "कार्य",
                    "task-status-updated": "टास्क की स्थिति सफलतापूर्वक अपडेट की गई",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण",
                        "status": "स्थिति",
                        "tag": "टैग",
                        "attachment": "आसक्ति",
                        "start-date": "आरंभ करने की तिथि",
                        "due-date": "नियत तारीख",
                        "user": "को सौंपना"
                    }
                },
                "task-calendar": {
                    "title": "कैलेंडर",
                    "status-wise": "स्थिति वार"
                },
                "content-management": {
                    "title": "सामग्री प्रबंधन"
                },
                "content-categories": {
                    "title": "श्रेणियाँ",
                    "fields": {
                        "title": "वर्ग",
                        "slug": "काउंटर"
                    }
                },
                "content-tags": {
                    "title": "टैग",
                    "fields": {
                        "title": "टैग",
                        "slug": "काउंटर"
                    }
                },
                "content-pages": {
                    "title": "पेज",
                    "fields": {
                        "title": "शीर्षक",
                        "category-id": "श्रेणियाँ",
                        "tag-id": "टैग",
                        "page-text": "टेक्स्ट",
                        "excerpt": "अंश",
                        "featured-image": "निरूपित चित्र",
                        "created-at": "समय बनाया गया"
                    }
                },
                "product-management": {
                    "title": "उत्पाद प्रबंधन"
                },
                "product-categories": {
                    "title": "श्रेणियाँ",
                    "fields": {
                        "name": "श्रेणी नाम",
                        "description": "विवरण",
                        "photo": "फोटो (अधिकतम 8mb)"
                    }
                },
                "product-tags": {
                    "title": "टैग",
                    "fields": {
                        "name": "नाम"
                    }
                },
                "products": {
                    "title": "उत्पाद",
                    "gallery-file-types": "स्वीकृत फ़ाइल प्रकार: png, jpg, jpeg, gif",
                    "fields": {
                        "name": "उत्पाद का नाम",
                        "product-code": "उत्पाद कोड",
                        "actual-price": "वास्तविक कीमत",
                        "sale-price": "विक्रय कीमत",
                        "category": "वर्ग",
                        "tag": "टैग",
                        "ware-house": "वेयर हाउस",
                        "description": "विवरण",
                        "excerpt": "अंश",
                        "stock-quantity": "शेयर मात्रा",
                        "alert-quantity": "चेतावनी मात्रा",
                        "image-gallery": "छवि गैलरी",
                        "thumbnail": "थंबनेल",
                        "other-files": "अन्य फ़ाइलें",
                        "hsn-sac-code": "HSN / SAC कोड",
                        "product-size": "उत्पाद का आकार",
                        "product-weight": "उत्पाद - भार",
                        "brand": "ब्रांड"
                    }
                },
                "assets-management": {
                    "title": "संपत्ति प्रबंधन"
                },
                "assets-categories": {
                    "title": "श्रेणियाँ",
                    "fields": {
                        "title": "शीर्षक"
                    }
                },
                "assets-statuses": {
                    "title": "वे स्थितियां",
                    "fields": {
                        "title": "शीर्षक"
                    }
                },
                "assets-locations": {
                    "title": "स्थान",
                    "fields": {
                        "title": "शीर्षक"
                    }
                },
                "assets": {
                    "title": "संपत्ति",
                    "fields": {
                        "category": "वर्ग",
                        "serial-number": "क्रमांक",
                        "title": "शीर्षक",
                        "photo1": "थंबनेल",
                        "photo2": "गेलरी",
                        "attachments": "संलग्नक",
                        "status": "स्थिति",
                        "location": "स्थान",
                        "assigned-user": "सौंपा (उपयोगकर्ता)",
                        "notes": "टिप्पणियाँ"
                    }
                },
                "assets-history": {
                    "title": "इतिहास मान लेता है",
                    "created_at": "पहर",
                    "fields": {
                        "asset": "एसेट",
                        "status": "स्थिति",
                        "location": "स्थान",
                        "assigned-user": "सौंपा (उपयोगकर्ता)"
                    }
                },
                "coupon-management": {
                    "title": "कूपन प्रबंधन"
                },
                "coupon-campaigns": {
                    "title": "अभियान",
                    "fields": {
                        "title": "शीर्षक",
                        "description": "विवरण",
                        "valid-from": "से मान्य",
                        "valid-to": "इस तक मान्य",
                        "discount-amount": "छूट राशि",
                        "discount-percent": "छूट का प्रतिशत",
                        "coupons-amount": "कूपन राशि"
                    }
                },
                "coupons": {
                    "title": "कूपन",
                    "fields": {
                        "campaign": "अभियान",
                        "code": "कोड",
                        "valid-from": "से मान्य",
                        "valid-to": "इस तक मान्य",
                        "discount-amount": "छूट राशि",
                        "discount-percent": "छूट का प्रतिशत",
                        "redeem-time": "रिडीम समय"
                    }
                },
                "expense-types": {
                    "title": "व्यय प्रकार"
                },
                "global-settings": {
                    "title": "वैश्विक व्यवस्था"
                },
                "currencies": {
                    "title": "मुद्राओं",
                    "fields": {
                        "name": "नाम",
                        "symbol": "प्रतीक",
                        "code": "कोड",
                        "rate": "मूल्यांकन करें",
                        "status": "स्थिति",
                        "is_default": "डिफ़ॉल्ट है?"
                    }
                },
                "sales-taxes": {
                    "title": "बिक्री कर"
                },
                "email-templates": {
                    "title": "ईमेल टेम्प्लेट",
                    "fields": {
                        "name": "नाम",
                        "subject": "विषय",
                        "body": "तन"
                    }
                },
                "companies": {
                    "title": "कंपनियों",
                    "fields": {
                        "company-name": "कंपनी का नाम",
                        "address": "पता",
                        "business-number": "व्यापार संबंधी अंक",
                        "city": "शहर",
                        "url": "यूआरएल",
                        "state-region": "राज्य / क्षेत्र",
                        "email": "ईमेल",
                        "zip-postal-code": "ज़िप / पोस्टल कोड",
                        "country": "देश",
                        "phone": "फ़ोन",
                        "logo": "प्रतीक चिन्ह"
                    }
                },
                "accounts": {
                    "title": "हिसाब किताब",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण",
                        "initial-balance": "प्रारंभिक संतुलन",
                        "account-number": "खाता संख्या",
                        "contact-person": "सम्पर्क सूत्र",
                        "phone": "फ़ोन",
                        "url": "यूआरएल"
                    }
                },
                "payment-gateways": {
                    "title": "भुगतान द्वार",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण",
                        "logo": "प्रतीक चिन्ह"
                    }
                },
                "warehouses": {
                    "title": "गोदामों",
                    "fields": {
                        "name": "नाम",
                        "address": "पता",
                        "description": "विवरण"
                    }
                },
                "taxes": {
                    "title": "करों",
                    "fields": {
                        "name": "नाम",
                        "rate": "मूल्यांकन करें",
                        "rate-type": "दर प्रकार",
                        "description": "विवरण"
                    }
                },
                "discounts": {
                    "title": "छूट",
                    "fields": {
                        "name": "नाम",
                        "discount": "छूट",
                        "discount-type": "डिस्काउंट प्रकार",
                        "description": "विवरण"
                    }
                },
                "recurring-periods": {
                    "title": "आवर्ती अवधि",
                    "fields": {
                        "title": "शीर्षक",
                        "value": "मूल्य",
                        "description": "विवरण"
                    }
                },
                "languages": {
                    "title": "बोली",
                    "fields": {
                        "language": "भाषा",
                        "code": "कोड",
                        "is-rtl": "Rtl है"
                    }
                },
                "purchase-orders": {
                    "title": "क्रय आदेश",
                    "fields": {
                        "customer": "प्रदायक",
                        "subject": "विषय",
                        "status": "स्थिति",
                        "address": "पता",
                        "invoice-prefix": "चालान उपसर्ग",
                        "show-quantity-as": "मात्रा के रूप में दिखाएं",
                        "invoice-no": "चालान #",
                        "reference": "संदर्भ",
                        "order-date": "पर जारी किया",
                        "order-due-date": "नियत तिथि पर आदेश",
                        "update-stock": "स्टॉक अपडेट करें",
                        "notes": "टिप्पणियाँ",
                        "currency": "मुद्रा",
                        "warehouse": "गोदाम",
                        "tax": "कर",
                        "discount": "छूट",
                        "amount": "रकम"
                    }
                },
                "manage-projects": {
                    "title": "परियोजनाओं का प्रबंधन करें"
                },
                "projects": {
                    "title": "परियोजनाओं"
                },
                "project-statuses": {
                    "title": "परियोजना की स्थिति",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण"
                    }
                },
                "client-projects": {
                    "title": "ग्राहक परियोजनाओं",
                    "fields": {
                        "title": "शीर्षक",
                        "client": "ग्राहक",
                        "priority": "प्राथमिकता",
                        "budget": "बजट",
                        "billing-type": "बिलिंग प्रकार",
                        "phase": "अवस्था",
                        "assigned-to": "को सौंपना",
                        "start-date": "आरंभ करने की तिथि",
                        "due-date": "नियत तारीख",
                        "status": "स्थिति",
                        "description": "विवरण",
                        "demo-url": "डेमो यूआरएल"
                    }
                },
                "project-billing-types": {
                    "title": "प्रोजेक्ट बिलिंग प्रकार",
                    "fields": {
                        "title": "शीर्षक",
                        "description": "विवरण"
                    }
                },
                "time-entries": {
                    "title": "समय की प्रविष्टियाँ",
                    "fields": {
                        "project": "परियोजना",
                        "start-date": "आरंभ करने की तिथि",
                        "end-date": "अंतिम तिथि",
                        "description": "विवरण"
                    }
                },
                "sales": {
                    "title": "बिक्री"
                },
                "invoices": {
                    "title": "चालान",
                    "fields": {
                        "customer": "ग्राहक",
                        "currency": "मुद्रा",
                        "title": "शीर्षक",
                        "address": "पता",
                        "invoice-prefix": "चालान उपसर्ग",
                        "show-quantity-as": "मात्रा के रूप में दिखाएं",
                        "invoice-no": "चालान #",
                        "status": "स्थिति",
                        "reference": "संदर्भ",
                        "invoice-date": "चालान की तारीख",
                        "invoice-due-date": "बिल की देय तिथि",
                        "invoice-notes": "चालान नोट",
                        "tax": "कर",
                        "discount": "छूट",
                        "amount": "रकम",
                        "discount_format": "छूट प्रारूप",
                        "tax_format": "कर प्रारूप"
                    }
                },
                "quotes": {
                    "title": "उल्लेख। उद्धरण",
                    "fields": {
                        "customer": "ग्राहक",
                        "status": "स्थिति",
                        "title": "शीर्षक",
                        "address": "पता",
                        "quote-prefix": "भाव उपसर्ग",
                        "show-quantity-as": "मात्रा के रूप में दिखाएं",
                        "quote-no": "बोली नहीं",
                        "reference": "संदर्भ",
                        "quote-date": "भाव तिथि",
                        "quote-expiry-date": "एक्सपायरी डेट का उद्धरण दें",
                        "proposal-text": "प्रस्ताव पाठ",
                        "currency": "मुद्रा",
                        "tax": "कर",
                        "discount": "छूट",
                        "amount": "रकम"
                    }
                },
                "recurring-invoices": {
                    "title": "आवर्ती चालान",
                    "fields": {
                        "customer": "ग्राहक",
                        "currency": "मुद्रा",
                        "title": "शीर्षक",
                        "address": "पता",
                        "invoice-prefix": "चालान उपसर्ग",
                        "show-quantity-as": "मात्रा के रूप में दिखाएं",
                        "invoice-no": "चालान #",
                        "status": "स्थिति",
                        "reference": "संदर्भ",
                        "invoice-date": "चालान की तारीख",
                        "invoice-due-date": "बिल की देय तिथि",
                        "invoice-notes": "चालान नोट",
                        "tax": "कर",
                        "discount": "छूट",
                        "recurring-period": "आवर्ती अवधि",
                        "amount": "रकम",
                        "products": "उत्पाद",
                        "paymentstatus": "भुगतान की स्थिति"
                    }
                },
                "contact-groups": {
                    "title": "समूहों से संपर्क करें",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण"
                    }
                },
                "contact-types": {
                    "title": "संपर्क प्रकार",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण"
                    }
                },
                "contact-notes": {
                    "title": "संपर्क नोट",
                    "fields": {
                        "title": "शीर्षक",
                        "contact": "संपर्क करें",
                        "notes": "टिप्पणियाँ",
                        "attachment": "आसक्ति"
                    }
                },
                "contact-documents": {
                    "title": "दस्तावेजों से संपर्क करें",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण",
                        "attachments": "संलग्नक",
                        "contact": "संपर्क करें"
                    }
                },
                "products-transfer": {
                    "title": "उत्पाद स्थानांतरण"
                },
                "products-return": {
                    "title": "उत्पाद लौटते हैं",
                    "fields": {
                        "subject": "विषय",
                        "customer": "ग्राहक",
                        "currency": "मुद्रा",
                        "status": "स्थिति",
                        "address": "पता",
                        "invoice-prefix": "चालान उपसर्ग",
                        "show-quantity-as": "मात्रा के रूप में दिखाएं",
                        "invoice-no": "चालान #",
                        "reference": "संदर्भ",
                        "order-date": "आदेश की तारीख",
                        "order-due-date": "नियत तिथि पर आदेश",
                        "update-stock": "स्टॉक अपडेट करें",
                        "notes": "टिप्पणियाँ",
                        "tax": "कर",
                        "discount": "छूट",
                        "ware-house": "वेयर हाउस"
                    }
                },
                "brands": {
                    "title": "ब्रांड्स",
                    "fields": {
                        "title": "शीर्षक",
                        "icon": "चिह्न",
                        "status": "स्थिति"
                    }
                },
                "database-backup": {
                    "title": "डेटाबेस बैकअप"
                },
                "departments": {
                    "title": "विभागों",
                    "fields": {
                        "name": "नाम",
                        "description": "विवरण",
                        "created-by": "के द्वारा बनाई गई"
                    }
                },
                "support": {
                    "title": "समर्थन",
                    "fields": {
                        "name": "नाम",
                        "email": "ईमेल",
                        "subject": "विषय",
                        "department": "विभाग",
                        "priority": "प्राथमिकता",
                        "description": "विवरण",
                        "attachments": "संलग्नक",
                        "created-by": "के द्वारा बनाई गई",
                        "assigned-to": "को सौंपना"
                    }
                },
                "knowledgebase": {
                    "title": "ज्ञानधार"
                },
                "transfers": {
                    "title": "स्थानांतरण",
                    "fields": {
                        "from": "से",
                        "to": "सेवा मेरे",
                        "date": "दिनांक",
                        "amount": "रकम",
                        "ref-no": "रेफरी #",
                        "payment-method": "भुगतान का तरीका",
                        "description": "विवरण"
                    }
                },
                "articles": {
                    "title": "सामग्री",
                    "fields": {
                        "title": "शीर्षक",
                        "category-id": "श्रेणियाँ",
                        "tag-id": "टैग",
                        "page-text": "टेक्स्ट",
                        "excerpt": "अंश",
                        "featured-image": "निरूपित चित्र",
                        "available-for": "के लिए उपलब्ध है"
                    }
                },
                "balance-sheet": {
                    "title": "तुलन पत्र"
                },
                "general-settings": {
                    "title": "सामान्य सेटिंग्स"
                },
                "master-settings": {
                    "title": "मास्टर सेटिंग्स",
                    "fields": {
                        "module": "मॉड्यूल",
                        "key": "कुंजी",
                        "description": "विवरण"
                    }
                },
                "countries": {
                    "title": "देश",
                    "fields": {
                        "shortcode": "छोटे संकेत",
                        "title": "शीर्षक"
                    }
                },
                "measurement-units": {
                    "title": "नाप की इकाइयां",
                    "fields": {
                        "title": "शीर्षक",
                        "status": "स्थिति",
                        "description": "विवरण"
                    }
                },
                "payments": {
                    "title": "भुगतान",
                    "failed": "भुगतान असफल हुआ",
                    "cancelled": "आपने अपना भुगतान रद्द कर दिया है"
                },
                "navigation-menues": {
                    "title": "नेविगेशन मेन्स"
                },
                "app_create": "सर्जन करना",
                "app_save": "बचाना",
                "app_edit": "संपादित करें",
                "app_restore": "पुनर्स्थापित",
                "app_values": "मान",
                "app_permadel": "स्थायी रूप से मिटाएं",
                "app_all": "सब",
                "app_trash": "कचरा",
                "app_view": "राय",
                "app_update": "अद्यतन करें",
                "app_list": "सूची",
                "app_no_entries_in_table": "तालिका में कोई प्रविष्टि नहीं",
                "app_custom_controller_index": "कस्टम नियंत्रक सूचकांक।",
                "app_logout": "लोग आउट",
                "app_add_new": "नया जोड़ें",
                "app_are_you_sure": "क्या आपको यकीन है?",
                "app_back_to_list": "दोबारा सूची को जाएं",
                "app_dashboard": "डैशबोर्ड",
                "app_delete": "हटाना",
                "app_delete_selected": "चयनित मिटाएं",
                "app_category": "वर्ग",
                "app_categories": "श्रेणियाँ",
                "app_sample_category": "नमूना श्रेणी",
                "app_questions": "प्रशन",
                "app_question": "सवाल",
                "app_answer": "उत्तर",
                "app_sample_question": "नमूना सवाल",
                "app_sample_answer": "नमूना जवाब",
                "app_faq_management": "प्रबंधन",
                "app_administrator_can_create_other_users": "व्यवस्थापक (अन्य उपयोगकर्ता बना सकते हैं)",
                "app_simple_user": "सरल उपयोगकर्ता",
                "app_title": "शीर्षक",
                "app_roles": "भूमिकाएँ",
                "app_role": "भूमिका",
                "app_user_management": "उपयोगकर्ता प्रबंधन",
                "app_users": "उपयोगकर्ता",
                "app_user": "उपयोगकर्ता",
                "app_name": "नाम",
                "app_email": "ईमेल",
                "app_password": "पारण शब्द",
                "app_remember_token": "टोकन याद रखें",
                "app_permissions": "अनुमतियां",
                "app_user_actions": "उपयोगकर्ता क्रियाएँ",
                "app_action": "कार्य",
                "app_action_model": "एक्शन मॉडल",
                "app_action_id": "कार्रवाई आईडी",
                "app_time": "पहर",
                "app_campaign": "अभियान",
                "app_campaigns": "अभियान",
                "app_description": "विवरण",
                "app_valid_from": "से मान्य",
                "app_valid_to": "इस तक मान्य",
                "app_discount_amount": "छूट राशि",
                "app_discount_percent": "छूट का प्रतिशत",
                "app_coupons_amount": "कूपन राशि",
                "app_coupons": "कूपन",
                "app_code": "कोड",
                "app_redeem_time": "रिडीम समय",
                "app_coupon_management": "कूपन प्रबंधन",
                "app_time_management": "समय प्रबंधन",
                "app_projects": "परियोजनाओं",
                "app_reports": "रिपोर्ट",
                "app_time_entries": "समय की प्रविष्टियाँ",
                "app_work_type": "कार्य प्रकार",
                "app_work_types": "काम के प्रकार",
                "app_project": "परियोजना",
                "app_start_time": "समय शुरू",
                "app_end_time": "अंतिम समय",
                "app_expense_category": "व्यय की श्रेणी",
                "app_expense_categories": "व्यय श्रेणियाँ",
                "app_expense_management": "व्यय प्रबंधन",
                "app_expenses": "व्यय",
                "app_expense": "व्यय",
                "app_entry_date": "प्रवेश की तिथि",
                "app_amount": "रकम",
                "app_income_categories": "आय श्रेणियों",
                "app_monthly_report": "मासिक रिपोर्ट",
                "app_companies": "कंपनियों",
                "app_company_name": "कंपनी का नाम",
                "app_address": "पता",
                "app_website": "वेबसाइट",
                "app_contact_management": "संपर्क प्रबंधन",
                "app_contacts": "संपर्क",
                "app_company": "कंपनी",
                "app_first_name": "पहला नाम",
                "app_last_name": "अंतिम नाम",
                "app_phone": "फ़ोन",
                "app_phone1": "फोन 1",
                "app_phone2": "फ़ोन २",
                "app_skype": "स्काइप",
                "app_photo": "फोटो (अधिकतम 8mb)",
                "app_category_name": "श्रेणी नाम",
                "app_product_management": "उत्पाद प्रबंधन",
                "app_products": "उत्पाद",
                "app_product_name": "उत्पाद का नाम",
                "app_price": "मूल्य",
                "app_tags": "टैग",
                "app_tag": "टैग",
                "app_photo1": "photo1",
                "app_photo2": "photo2",
                "app_photo3": "photo3",
                "app_calendar": "कैलेंडर",
                "app_statuses": "वे स्थितियां",
                "app_task_management": "कार्य प्रबंधन",
                "app_tasks": "कार्य",
                "app_status": "स्थिति",
                "app_attachment": "आसक्ति",
                "app_due_date": "नियत तारीख",
                "app_assigned_to": "को सौंपना",
                "app_assets": "संपत्ति",
                "app_asset": "एसेट",
                "app_serial_number": "क्रमांक",
                "app_location": "स्थान",
                "app_locations": "स्थान",
                "app_assigned_user": "सौंपा (उपयोगकर्ता)",
                "app_notes": "टिप्पणियाँ",
                "app_assets_history": "इतिहास मान लेता है",
                "app_assets_management": "संपत्ति प्रबंधन",
                "app_slug": "काउंटर",
                "app_content_management": "सामग्री प्रबंधन",
                "app_text": "टेक्स्ट",
                "app_excerpt": "अंश",
                "app_featured_image": "निरूपित चित्र",
                "app_pages": "पेज",
                "app_axis": "एक्सिस",
                "app_show": "प्रदर्शन",
                "app_group_by": "समूह द्वारा",
                "app_chart_type": "चार्ट प्रकार",
                "app_create_new_report": "नई रिपोर्ट बनाएं",
                "app_no_reports_yet": "अभी तक कोई रिपोर्ट नहीं।",
                "app_created_at": "पर बनाया गया",
                "app_updated_at": "पर अपडेट किया गया",
                "app_deleted_at": "पर हटा दिया गया",
                "app_reports_x_axis_field": "X- अक्ष - कृपया किसी एक तिथि / समय क्षेत्र को चुनें",
                "app_reports_y_axis_field": "Y- अक्ष - कृपया संख्या फ़ील्ड में से एक चुनें",
                "app_select_crud_placeholder": "कृपया अपना एक CRUD चुनें",
                "app_select_dt_placeholder": "कृपया किसी एक दिनांक / समय क्षेत्र का चयन करें",
                "app_aggregate_function_use": "उपयोग करने के लिए अलग कार्य",
                "app_x_axis_group_by": "द्वारा एक्स-अक्ष समूह",
                "app_x_axis_field": "एक्स-अक्ष फ़ील्ड (दिनांक / समय)",
                "app_y_axis_field": "Y- अक्ष क्षेत्र",
                "app_integer_float_placeholder": "कृपया पूर्णांक / फ्लोट क्षेत्रों में से एक का चयन करें",
                "app_change_notifications_field_1_label": "उपयोगकर्ता को ईमेल सूचना भेजें",
                "app_change_notifications_field_2_label": "जब CRUD पर प्रवेश",
                "app_select_users_placeholder": "कृपया अपने उपयोगकर्ताओं में से एक का चयन करें",
                "app_is_created": "बनाया गया है",
                "app_is_updated": "यह अद्यतित है",
                "app_is_deleted": "हटा दिया गया है",
                "app_notifications": "सूचनाएं",
                "app_notify_user": "उपयोगकर्ता को सूचित करें",
                "app_when_crud": "जब सी.आर.यू.डी.",
                "app_create_new_notification": "नई अधिसूचना बनाएँ",
                "app_stripe_transactions": "धारीदार लेन-देन",
                "app_upgrade_to_premium": "प्रीमियम में अपग्रेड करें",
                "app_messages": "संदेश",
                "app_you_have_no_messages": "आपके लिए कोई सन्देश नहीं है।",
                "app_all_messages": "सभी संदेश",
                "app_new_message": "नया संदेश",
                "app_outbox": "आउटबॉक्स",
                "app_inbox": "इनबॉक्स",
                "app_recipient": "प्राप्त करने वाला",
                "app_subject": "विषय",
                "app_message": "संदेश",
                "app_send": "भेजना",
                "app_reply": "जवाब दे दो",
                "app_calendar_sources": "कैलेंडर स्रोत",
                "app_new_calendar_source": "नया कैलेंडर स्रोत बनाएं",
                "app_crud_title": "क्रूड शीर्षक",
                "app_crud_date_field": "क्रूड तिथि क्षेत्र",
                "app_prefix": "उपसर्ग",
                "app_label_field": "लेबल फ़ील्ड",
                "app_suffix": "SUFIX",
                "app_no_calendar_sources": "कोई कैलेंडर स्रोत अभी तक नहीं।",
                "app_crud_event_field": "इवेंट लेबल फ़ील्ड",
                "app_create_new_calendar_source": "नया कैलेंडर स्रोत बनाएं",
                "app_edit_calendar_source": "कैलेंडर स्रोत संपादित करें",
                "app_client_management": "ग्राहक प्रबंधन",
                "app_client_management_settings": "ग्राहक प्रबंधन सेटिंग्स",
                "app_country": "देश",
                "app_client_status": "ग्राहक की स्थिति",
                "app_clients": "ग्राहकों",
                "app_client_statuses": "ग्राहक की स्थिति",
                "app_currencies": "मुद्राओं",
                "app_main_currency": "मुख्य मुद्रा",
                "app_documents": "दस्तावेज़",
                "app_file": "फ़ाइल",
                "app_income_source": "आय स्रोत",
                "app_income_sources": "आय के स्रोत",
                "app_fee_percent": "फीस प्रतिशत",
                "app_note_text": "नोट पाठ",
                "app_client": "ग्राहक",
                "app_start_date": "आरंभ करने की तिथि",
                "app_budget": "बजट",
                "app_project_status": "परियोजना की स्थिति",
                "app_project_statuses": "परियोजना की स्थिति",
                "app_transactions": "लेन-देन",
                "app_transaction_types": "लेन-देन के प्रकार",
                "app_transaction_type": "सौदे का प्रकार",
                "app_transaction_date": "लेन - देन की तारीख",
                "app_currency": "मुद्रा",
                "app_current_password": "वर्तमान पासवर्ड",
                "app_new_password": "नया पासवर्ड",
                "app_password_confirm": "नया पासवर्ड पुष्टि",
                "app_dashboard_text": "आप लोग्ड इन हो चुके हैं!",
                "app_forgot_password": "अपना कूट शब्द भूल गए?",
                "app_remember_me": "मुझे याद रखना",
                "app_login": "लॉग इन करें",
                "app_change_password": "पासवर्ड बदलें",
                "app_csv": "सीएसवी",
                "app_print": "छाप",
                "app_excel": "एक्सेल",
                "app_copy": "प्रतिलिपि",
                "app_colvis": "स्तंभ दृश्यता",
                "app_pdf": "पीडीएफ",
                "app_reset_password": "पासवर्ड रीसेट",
                "app_reset_password_woops": "<strong>ओह!</strong> इनपुट में समस्याएं थीं:",
                "app_email_line1": "आप यह ईमेल प्राप्त कर रहे हैं क्योंकि हमें आपके खाते के लिए पासवर्ड रीसेट अनुरोध प्राप्त हुआ है।",
                "app_email_line2": "यदि आपने पासवर्ड रीसेट का अनुरोध नहीं किया है, तो आगे की कार्रवाई की आवश्यकता नहीं है।",
                "app_email_greet": "नमस्ते",
                "app_email_regards": "सादर",
                "app_confirm_password": "पासवर्ड की पुष्टि कीजिये",
                "app_if_you_are_having_trouble": "यदि आपको क्लिक करने में समस्या हो रही है",
                "app_copy_paste_url_bellow": "नीचे दिए गए URL को अपने वेब ब्राउज़र में बटन, कॉपी और पेस्ट करें:",
                "app_please_select": "कृपया चुने",
                "app_register": "रजिस्टर",
                "app_registration": "पंजीकरण",
                "app_not_approved_title": "आपको मंजूर नहीं है",
                "app_not_approved_p": "आपका खाता अभी भी व्यवस्थापक द्वारा अनुमोदित नहीं है। कृपया, धैर्य रखें और बाद में फिर से प्रयास करें।",
                "app_there_were_problems_with_input": "इनपुट में समस्याएं थीं",
                "app_whoops": "ओह!",
                "app_file_contains_header_row": "फ़ाइल में शीर्ष लेख पंक्ति है?",
                "app_csvImport": "CSV आयात",
                "app_csv_file_to_import": "आयात करने के लिए CSV फ़ाइल",
                "app_parse_csv": "पार्स सीएसवी",
                "app_import_data": "आयात आंकड़ा",
                "app_imported_rows_to_table": "आयातित: पंक्तियाँ पंक्तियाँ: तालिका तालिका",
                "app_subscription-billing": "सदस्यता",
                "app_subscription-payments": "भुगतान",
                "app_basic_crm": "मूल CRM",
                "app_customers": "ग्राहकों",
                "app_customer": "ग्राहक",
                "app_select_all": "सभी का चयन करे",
                "app_deselect_all": "सभी को अचिन्हिंत करें",
                "app_team-management": "टीमें",
                "app_team-management-singular": "टीम",
                "global_title": "डिजी लेखा, चालान और बिलिंग सीआरएम",
                "app_add_key": "कुंजी जोड़ें",
                "app_settings": "सेटिंग्स",
                "app_make_default": "डिफ़ॉल्ट बनाना",
                "info": "जानकारी",
                "operations_disabled": "डेमो मोड पर ऑपरेशन अक्षम",
                "download-template": "टेम्पलेट डाउनलोड करें",
                "app_refresh": "ताज़ा करना",
                "app_loading": "लोड हो रहा है"
            },
            "custom": {
                "messages": {
                    "record_saved": "रिकॉर्ड सफलतापूर्वक सहेजा गया",
                    "record_updated": "रिकॉर्ड सफलतापूर्वक अपडेट किया गया",
                    "record_deleted": "रिकॉर्ड सफलतापूर्वक हटाया गया",
                    "records_deleted": "रिकॉर्ड सफलतापूर्वक हटाए गए",
                    "record_restored": "रिकॉर्ड सफलतापूर्वक बहाल किया गया",
                    "crud_disabled": "डेमो पर CRUD संचालन अक्षम है",
                    "somethiswentwrong": "कुछ गलत हो गया",
                    "failed": "अनुत्तीर्ण होना:",
                    "success": "सफलता:",
                    "info": "जानकारी:",
                    "mailsent": "सफलतापूर्वक भेजा गया ईमेल",
                    "smssent": "एसएमएस सफलतापूर्वक भेजा गया",
                    "status-changed": "स्थिति सफलतापूर्वक बदल गई",
                    "not_allowed": "माफ़ कीजिये! आपको इस पृष्ठ पर पहुंचने की अनुमति नहीं है",
                    "not_found": "माफ़ कीजिये! रिकॉर्ड नहीं मिला।",
                    "profile_updated": "प्रोफाइल को सफलतापूर्वक अपडेट किया गया",
                    "not_found_payment": "भुगतान रिकॉर्ड नहीं मिला",
                    "invalid_record": "अमान्य रिकॉर्ड",
                    "time_out": "समय समाप्त",
                    "already-exists": "इस संपर्क में पहले से ही उपयोगकर्ता की पहुंच है",
                    "already-exists-email": "यह ईमेल पहले से मौजूद है",
                    "contact-dont-have-email": "इस संपर्क में ईमेल पता नहीं है। ईमेल पता दर्ज",
                    "click-here": "संपादित करने के लिए <a href=\"{url}\">यहां</a> क्लिक करें"
                },
                "menu": {
                    "sales": "बिक्री",
                    "create-invoice": "नया चालान",
                    "create-quote": "नई बोली",
                    "stock": "भण्डार",
                    "crm": "सीआरएम",
                    "create-contact": "संपर्क बनाएं",
                    "project": "परियोजना",
                    "balance": "संतुलन",
                    "miscellaneous": "कई तरह का",
                    "customers": "ग्राहकों",
                    "support": "समर्थन",
                    "tickets": "टिकट"
                },
                "translations": {
                    "title": "अनुवाद"
                },
                "common": {
                    "percent": "प्रतिशत (%)",
                    "value": "मूल्य",
                    "next": "आगामी",
                    "previous": "पिछला",
                    "print": "छाप",
                    "download-pdf": "पीडीएफ़ डाउनलोड करें",
                    "preview": "पूर्वावलोकन",
                    "change-status": "अवस्था बदलो",
                    "cancel": "रद्द करना",
                    "extra": "अतिरिक्त",
                    "sms": "एसएमएस",
                    "mark-as": "ऐसे चिन्हित कीजिये",
                    "pdf": "पीडीएफ",
                    "view-pdf": "पीडीएफ देखें",
                    "update-manage": "अद्यतन और प्रबंधित करें",
                    "loading": "लोड हो रहा है...",
                    "close": "बंद करे",
                    "phone": "फ़ोन:",
                    "email": "ईमेल:",
                    "send": "भेजना",
                    "save": "बचाना",
                    "time": "पहर",
                    "ip": "आईपी पता",
                    "country": "देश",
                    "city": "शहर",
                    "browser": "ब्राउज़र",
                    "description": "विवरण",
                    "comments": "टिप्पणियाँ",
                    "duplicate": "क्लोन",
                    "yes": "हाँ",
                    "no": "नहीं",
                    "not-allowed": "माफ़ कीजिये! आपको इस पृष्ठ पर पहुंचने की अनुमति नहीं है",
                    "are-you-sure": "क्या आपको यकीन है?",
                    "are-you-sure-delete": "क्या आप वाकई रिकॉर्ड हटाना चाहते हैं?",
                    "are-you-sure-duplicate": "क्या आप वाकई इस रिकॉर्ड की नकल करना चाहते हैं?",
                    "active": "सक्रिय",
                    "inactive": "इन-सक्रिय"
                },
                "email": {
                    "to": "सेवा मेरे",
                    "customer-name": "ग्राहक का नाम",
                    "cc": "सीसी",
                    "bcc": "गुप्त प्रतिलिपि",
                    "subject": "विषय",
                    "message-body": "संदेश का मुख्य हिस्सा",
                    "attach-pdf": "पीडीएफ संलग्न करें?",
                    "bcc-admin": "Bcc को व्यवस्थापन पर भेजें?",
                    "send": "भेजना"
                },
                "products-transfer": {
                    "title": "उत्पाद स्थानांतरण",
                    "transfer_from": "गोदाम से स्थानांतरण",
                    "transfer_to": "(वेयरहाउस) में स्थानांतरण",
                    "transfered": "उत्पाद सफलतापूर्वक स्थानांतरित हो गए",
                    "no_products_transfered": "कोई उत्पाद स्थानांतरित नहीं किया गया"
                },
                "currencies": {
                    "update_currency_online": "मुद्रा विनिमय दरों को ऑनलाइन अपडेट करें?",
                    "currency_layer_message": "आवेदन में एकीकृत करेंसी.कॉम.कॉम एपीआई है। यह आपके चालान के लिए एक वास्तविक समय मुद्रा रूपांतरण प्रदान करता है। 168 विश्व मुद्राओं के लिए सटीक विनिमय दरें हर 60 मिनट से लेकर तेजस्वी 60 सेकंड तक डेटा अपडेट के साथ। कृपया देखें: एपीआई कुंजी प्राप्त करने के लिए url। कृपया API कुंजी अपडेट करें: settings_url। सुनिश्चित करें कि आप सबसे अच्छी योजना ले रहे हैं। नोट: नि: शुल्क योजना मुद्रा स्विचिंग का समर्थन नहीं करेगी।"
                },
                "products": {
                    "item_name": "वस्तु का नाम",
                    "quantity": "मात्रा",
                    "rate": "मूल्यांकन करें",
                    "tax_percent": "कर(%)",
                    "tax": "कर",
                    "discount": "छूट",
                    "amount": "रकम",
                    "action": "कार्य",
                    "currency_help": "लाइव बाजार के आधार पर अपने ग्राहक के लिए भुगतान मुद्रा",
                    "default_tax": "डिफ़ॉल्ट टैक्स दर",
                    "default_discount": "डिफ़ॉल्ट छूट दर",
                    "add_new": "लाइन जोड़ो",
                    "total_tax": "कुल कर (+)",
                    "total_discount": "कुल छूट (-)",
                    "grand_total": "कुल योग",
                    "discount_percent": "छूट(%)",
                    "sub_total": "उप कुल",
                    "keep_blank": "इसे स्वचालित रूप से चालान संख्या उत्पन्न करने के लिए रिक्त रखें",
                    "please_select": "कृपया चुने",
                    "already-in-cart": "उत्पाद पहले से ही कार्ट में है। क्या आप मात्रा बढ़ाना चाहते हैं?",
                    "already-in-cart-message": "उत्पाद पहले से ही कार्ट में है।",
                    "please-select-product": "कृपया उत्पाद चुनें",
                    "should-be-one": "मात्रा शून्य नहीं होनी चाहिए",
                    "additional-tax": "अतिरिक्त कर (+)",
                    "additional-discount": "अतिरिक्त छूट (-)",
                    "amount-payable": "देय राशि",
                    "fields": {
                        "product_status": "स्थिति",
                        "excerpt": "अंश",
                        "excerpt_placeholder": "उत्पाद के बारे में संक्षिप्त विवरण"
                    }
                },
                "settings": {
                    "settings": "सेटिंग्स",
                    "no_records_found": "कोई रिकॉर्ड नहीं मिला",
                    "meta_description": "मेटा विवरण",
                    "meta_keywords": "मेटा कीवर्ड",
                    "google_analytics": "गूगल विश्लेषिकी",
                    "mail_host": "मेल होस्ट",
                    "mail_port": "मेल पोर्ट",
                    "mail_driver": "मेल ड्राइवर",
                    "mail_password": "मेल पासवर्ड",
                    "mail_username": "मेल उपयोगकर्ता नाम",
                    "mail_encryption": "एन्क्रिप्शन",
                    "sms_driver": "एसएमएस चालक",
                    "twilio_sid": "टिलिओ का किनारा",
                    "twilio_token": "ट्विलियो टोकन",
                    "plivo_auth_id": "Plivo प्रामाणिक आईडी",
                    "plivo_auth_token": "प्लावो प्रामाणिक टोकन",
                    "stripe_key": "धारी की",
                    "stripe_secret": "धारी गुप्त",
                    "stripe_currency": "धारी मुद्रा",
                    "site_title": "क्षेत्र शीर्षक",
                    "site_logo": "साइट लोगो",
                    "site_favicon": "फ़ेविकॉन",
                    "site_address": "पता",
                    "site_city": "साइट सिटी",
                    "site_state": "साइट राज्य",
                    "site_country": "साइट देश",
                    "site_zipcode": "पिन कोड",
                    "country_code": "देश कोड",
                    "site_phone": "साइट फोन",
                    "system_timezone": "समय क्षेत्र",
                    "phone_number_expression": "फ़ोन नंबर अभिव्यक्ति",
                    "currency_code": "मुद्रा कोड",
                    "contact_email": "ई - मेल से संपर्क करे",
                    "rights_reserved": "कोप अधिकार",
                    "date_format": "डेटा प्रारूप",
                    "date_format_js": "डेट फ्रॉम जेएसटी",
                    "home_page_caption": "होम पेज कैप्शन",
                    "home_page_tagline": "होम पेज टैग लाइन",
                    "theme_color": "थीम रंग",
                    "email": "ईमेल",
                    "image": "छवि",
                    "currency": "मुद्रा",
                    "account_type": "खाते का प्रकार",
                    "update": "अद्यतन करें",
                    "payu_salt": "नमक",
                    "payu_testmode": "टेस्ट मोड है?",
                    "payu_merchant_key": "व्यापारी कुंजी",
                    "payu_working_key": "काम की कुंजी",
                    "crud_disabled": "डेमो पर CRUD संचालन अक्षम है",
                    "not_found": "रिकॉर्ड नहीं मिला",
                    "products_selection": "उत्पादों का चयन",
                    "enable_products_slider": "उत्पाद स्लाइडर सक्षम करें?",
                    "slider_type": "सेटिंग्स प्रकार",
                    "message_type": "संदेश प्रकार",
                    "key": "कुंजी",
                    "tool-tip": "टूल टिप",
                    "type": "प्रकार",
                    "total-options": "कुल विकल्प",
                    "value": "मूल्य",
                    "option-text": "विकल्प पाठ",
                    "save": "बचाना",
                    "TWILIO_SID": "ट्विलियो एसआईडी",
                    "TWILIO_TOKEN EDIT": "ट्विलियो टोकन",
                    "moduletype": "मॉड्यूल प्रकार",
                    "default-payment-gateway": "डिफ़ॉल्ट भुगतान गेटवे",
                    "default-sms-gateway": "डिफ़ॉल्ट एसएमएस गेटवे",
                    "Company_Name_On_Invoice": "कंपनी का नाम चालान पर",
                    "Company-Address": "कंपनी का पता",
                    "Authorized-Person": "अधिकृत व्यक्ति",
                    "Authorized-Person-Designation": "अधिकृत व्यक्ति पदनाम",
                    "Authorized-Person-Signature": "अधिकृत व्यक्ति हस्ताक्षर",
                    "Invoice-Logo": "चालान लोगो",
                    "paypal": "Paypal",
                    "cash": "कैश",
                    "payu": "PayU",
                    "make_default": "डिफ़ॉल्ट बनाना",
                    "enable-signature-part": "हस्ताक्षर वाला भाग सक्षम करें",
                    "description": "विवरण",
                    "company-name": "कंपनी का नाम",
                    "address": "पता",
                    "phone": "फ़ोन",
                    "status": "स्थिति",
                    "with-out-payment": "भुगतान के साथ आदेश स्वीकार करें?",
                    "default-account": "ऑर्डर भुगतान के लिए डिफ़ॉल्ट खाता",
                    "stripe_mode": "मोड",
                    "hide_stripe_remember_me_box": "याद रखें मुझे बॉक्स याद है",
                    "require_billing_address": "बिलिंग पते की आवश्यकता है",
                    "stripe_checkout_popup_image": "पॉपअप छवि",
                    "stripe_checkout_popup_title": "पॉपअप शीर्षक",
                    "stripe_checkout_popup_description": "विवरण",
                    "stripe_checkout_button_label": "चेकआउट बटन लेबल",
                    "site-title": "क्षेत्र शीर्षक",
                    "site-logo": "साइट लोगो",
                    "site-mini-name": "साइट मिनी नाम"
                },
                "invoices": {
                    "messages": {
                        "account": "कृपया खाते का चयन करें",
                        "date": "कृपया तारीख का चयन करें",
                        "amount": "कृपया राशि दर्ज करें",
                        "category": "कृपया श्रेणी का चयन करें",
                        "paymethod": "कृपया भुगतान विधि का चयन करें",
                        "toemail": "कृपया ईमेल पता दर्ज करें",
                        "save-success": "भुगतान सफलतापूर्वक जोड़ा गया",
                        "transaction_id": "कृपया लेनदेन आईडी दर्ज करें"
                    },
                    "transaction_id": "लेनदेन आईडी",
                    "qty": "मात्रा",
                    "edit": "चालान संपादित करें",
                    "make-payment": "भुगतान करो",
                    "email": "ईमेल",
                    "notification": "चालान अधिसूचना",
                    "payment-reminder": "भुगतान रिमाईन्डर",
                    "payment-received": "भुगतान प्राप्त",
                    "payment-overdue": "भुगतान बांकी है",
                    "payment-refund": "रिफंड जनरेट किया गया",
                    "invoice-notification": "चालान अधिसूचना",
                    "paid": "भुगतान किया है",
                    "due": "देय (अवैतनिक)",
                    "partial": "आंशिक भुगतान",
                    "cancelled": "रद्द",
                    "unpaid": "संयुक्त राष्ट्र के भुगतान किया",
                    "Unpaid": "संयुक्त राष्ट्र के भुगतान किया",
                    "upload-documents": "दस्तावेज़ अपलोड करें",
                    "invoice_no": "Invocie #",
                    "title-caps": "चालान",
                    "invoice-to": "इसके लिए इनवॉइस:",
                    "attn": "ध्यानार्थ:",
                    "invoice-date": "चालान तिथि:",
                    "due-date": "नियत तारीख :",
                    "invoice-total": "कुल चालान:",
                    "total-paid": "कुल भुगतान हो गया :",
                    "amount-due": "देय राशि :",
                    "invoice_total": "कुल बिल:",
                    "account": "लेखा",
                    "date": "दिनांक",
                    "description": "विवरण",
                    "amount": "रकम",
                    "category": "वर्ग",
                    "payer": "भुगतानकर्ता",
                    "method": "भुगतान का तरीका",
                    "payment-for": "के लिए भुगतान",
                    "related-transactions": "संबंधित लेनदेन",
                    "history": "संचालन इतिहास",
                    "app_back_to_invoice": "वापस चालान के लिए",
                    "upload-success": "फ़ाइलें सफलतापूर्वक अपलोड की गईं",
                    "duplicated": "चालान सफलतापूर्वक क्लोन किया गया",
                    "repeat-on": "इस पर दोहराएं:",
                    "authorized-person": "अधिकृत व्यक्ति",
                    "signature": "हस्ताक्षर",
                    "business-owner": "व्यवसाय के मालिक",
                    "reference": "संदर्भ",
                    "invoice-status": "चालान की स्थिति:",
                    "payment-method": "भुगतान का तरीका :",
                    "note": "ध्यान दें :",
                    "no-payment": "अभी तक कोई भुगतान नहीं",
                    "ontime": "एक बार",
                    "stripe": "पट्टी",
                    "signature-saved": "हस्ताक्षर सफलतापूर्वक सहेजे गए",
                    "sign-above": "ऊपर हस्ताक्षर करें",
                    "clear-signature": "स्पष्ट हस्ताक्षर",
                    "accepted": "स्वीकार किए जाते हैं",
                    "rejected": "अस्वीकृत"
                },
                "articles": {
                    "related-articles": "इस अनुभाग में लेख",
                    "category": "वर्ग :",
                    "tag": "टैग:"
                },
                "expense": {
                    "summary-in": "में सारांश",
                    "total-expense": "कुल खर्च",
                    "total-expense-this-month": "कुल खर्च इस महीने",
                    "total-expense-this-week": "कुल व्यय इस सप्ताह",
                    "total-expense-last-30days": "कुल खर्च पिछले 30 दिन"
                },
                "incomes": {
                    "receipt": "रसीद",
                    "for": "के लिये :",
                    "spent-to": "तक खर्च किया गया:",
                    "na": "एन / ए",
                    "date": "दिनांक :",
                    "id": "लेनदेन आईडी: TRN #",
                    "paymethod": "वेतन विधि:",
                    "receipt-generated-on": "इलेक्ट्रॉनिक रसीद। जनरेट किया गया:",
                    "show-report": "रिपोर्ट दिखाओ",
                    "summary-in": "में आय का सारांश",
                    "total-income": "कुल आय",
                    "total-income-this-month": "कुल आय इस महीने",
                    "total-income-this-week": "कुल आय इस सप्ताह",
                    "total-income-last-30days": "कुल आय पिछले 30 दिन",
                    "show-graph": "ग्राफ दिखाएं"
                },
                "transfers": {
                    "account-shouldnot-same": "आप एक ही खाते के बीच स्थानांतरण नहीं कर सकते",
                    "amount-transfered": "राशि सफलतापूर्वक स्थानांतरित की गई"
                },
                "accounts": {
                    "sum-of-all-accounts": "। प्रति पृष्ठ अभिलेखों का योग"
                },
                "purchase_orders": {
                    "title": "क्रय आदेश",
                    "title-single": "क्रय आदेश",
                    "edit": "संपादित करें",
                    "convert-to-invoice": "चालान में परिवर्तित करें",
                    "reference": "संदर्भ",
                    "quote_no": "आदेश #",
                    "recipient": "प्राप्त करने वाला",
                    "quote-date": "आदेश की तारीख :",
                    "due-date": "नियत तारीख :",
                    "total": "संपूर्ण :",
                    "note": "ध्यान दें :",
                    "delivered": "पहुंचा दिया",
                    "on-hold": "होल्ड पर",
                    "accepted": "स्वीकार किए जाते हैं",
                    "rejected": "अस्वीकृत",
                    "dead": "मृत",
                    "authorized-person": "अधिकृत व्यक्ति",
                    "send-quote": "आर्डर क्रिएट किया गया",
                    "quote-accepted": "आदेश स्वीकार किया गया",
                    "quote-cancelled": "आदेश रद्द किया गया",
                    "are-you-sure": "क्या आपको यकीन है?",
                    "convert-to-invoice-are-you-sure": "बोली को चालान के रूप में परिवर्तित करें। क्या आपको यकीन है?",
                    "convertedtoinvoice": "आदेश सफलतापूर्वक चालान में बदल गया",
                    "payment-inserted": "भुगतान सफलतापूर्वक डाला गया",
                    "status-changed-delivered": "पहुंचाने के लिए स्थिति बदल गई",
                    "status-changed-on-hold": "स्थिति बदलकर ऑन-होल्ड हो गई",
                    "quote-created": "आर्डर क्रिएट किया गया",
                    "quote-created-duplicate": "एक और उद्धरण की नकल करके बनाया गया आदेश",
                    "status-changed-accepted": "स्थिति स्वीकार में बदल गई",
                    "status-changed-rejected": "स्थिति को अस्वीकार कर दिया गया",
                    "status-changed-dead": "स्थिति बदलकर मर गई",
                    "documents-uploaded": "दस्तावेज़ अपलोड किए गए",
                    "invoice-created-quote": "चालान उद्धरण से बनाया गया",
                    "quote-already-convert": "आदेश पहले ही चालान में परिवर्तित हो गया",
                    "view-now": "अभी देखो",
                    "app_back_to_quote": "आदेश पर वापस जाओ",
                    "order_no": "आदेश संख्या।",
                    "history": "आदेश इतिहास",
                    "related-transactions": "भुगतान इतिहास",
                    "date": "दिनांक",
                    "amount": "रकम",
                    "description": "विवरण",
                    "payment-deleted": "भुगतान सफलतापूर्वक हटा दिया गया",
                    "upload-documents": "दस्तावेज़ अपलोड करें",
                    "upload-success": "फ़ाइल सफलतापूर्वक अपलोड करें",
                    "unpaid": "संयुक्त राष्ट्र के भुगतान किया"
                },
                "dashboard": {
                    "phone1": "फ़ोन 1:"
                },
                "payments": {
                    "success": "आपकी भुगतान सफलता",
                    "order-no": "आदेश संख्या। :",
                    "customer": "ग्राहक :",
                    "amount": "रकम :",
                    "date": "दिनांक :",
                    "status": "स्थिति",
                    "products": "उत्पाद"
                },
                "tasks": {
                    "messages": {
                        "task-created": "टास्क सफलतापूर्वक बनाया गया",
                        "task-updated": "टास्क सफलतापूर्वक अपडेट किया गया",
                        "task-deleted": "टास्क सफलतापूर्वक हटा दिया गया"
                    },
                    "statuswise-tasks": "स्थितिवार कार्य",
                    "calendar": "कार्य कैलेंडर"
                },
                "reports": {
                    "generated-reports": "रिपोर्ट तैयार की",
                    "expense-report": "व्यय आख्या",
                    "income-report": "आय की रिपोर्ट",
                    "users-report": "उपयोगकर्ताओं की रिपोर्ट",
                    "projects-report": "संपर्क परियोजना रिपोर्ट",
                    "tasks-report": "कार्य रिपोर्ट",
                    "assets-report": "एसेट्स रिपोर्ट",
                    "products-report": "उत्पाद रिपोर्ट",
                    "purchase-order-report": "खरीद आदेश रिपोर्ट"
                },
                "app_messages": "संदेश"
            }
        },
        "te": {
            "_json": {
                "Verify Your Email Address": "మీ ఈ - మెయిల్ చిరునామాను తనిఖీ చేసుకోండి",
                "A fresh verification link has been sent to your email address": {
                    "": "మీ ఇమెయిల్ చిరునామాకు తాజా ధృవీకరణ లింక్ పంపబడింది."
                },
                "Before proceeding, please check your email for a verification link": {
                    "": "కొనసాగే ముందు, దయచేసి ధృవీకరణ లింక్ కోసం మీ ఇమెయిల్ను తనిఖీ చేయండి."
                },
                "If you did not receive the email": "మీరు ఇమెయిల్ను అందుకోకపోతే",
                "click here to request another": "మరో అభ్యర్థనను ఇక్కడ క్లిక్ చేయండి",
                "Register": "నమోదు",
                "Name": "పేరు",
                "E-Mail Address": "ఇ-మెయిల్ చిరునామా",
                "Password": "పాస్వర్డ్",
                "Confirm Password": "పాస్వర్డ్ని నిర్ధారించండి"
            },
            "validation": {
                "accepted": "ఆ లక్షణాన్ని అంగీకరించాలి.",
                "active_url": "ఆ: లక్షణం చెల్లుబాటు అయ్యే URL కాదు.",
                "after": "ది: లక్షణం తేదీ తర్వాత ఉండాలి: తేదీ.",
                "after_or_equal": "ది: లక్షణం తేదీ తర్వాత లేదా సమానంగా ఉండాలి: తేదీ.",
                "alpha": "ది: లక్షణం అక్షరాలు కలిగి ఉండవచ్చు.",
                "alpha_dash": "ది: లక్షణం అక్షరాలు, సంఖ్యలు, డాష్లు మరియు అండర్స్కోర్లను మాత్రమే కలిగి ఉండవచ్చు.",
                "alpha_num": "ది: లక్షణం అక్షరాలు మరియు సంఖ్యలను మాత్రమే కలిగి ఉండవచ్చు.",
                "array": "ది: లక్షణం ఒక అర్రే అయి ఉండాలి.",
                "before": "ది: లక్షణం తేదీ ముందు తప్పక ఉండాలి: తేదీ.",
                "before_or_equal": "తేదీ: తేదీ ముందు లేదా సమానంగా తేదీ ఉండాలి: తేదీ.",
                "between": {
                    "numeric": "ది: లక్షణం మధ్య ఉండాలి: min మరియు: max.",
                    "file": "ది: లక్షణం మధ్య ఉండాలి: min మరియు: max kilobytes.",
                    "string": "ది: లక్షణం మధ్య ఉండాలి: min మరియు: max characters.",
                    "array": "ది: లక్షణం మధ్య ఉండాలి: min మరియు: max అంశాలను."
                },
                "boolean": "ఆ: లక్షణం ఫీల్డ్ నిజమైన లేదా తప్పుడు ఉండాలి.",
                "confirmed": "ది: గుణం నిర్ధారణ సరిపోలడం లేదు.",
                "date": "ఆ: లక్షణం చెల్లుబాటు అయ్యే తేదీ కాదు.",
                "date_format": "ఫార్మాట్: లక్షణం ఫార్మాట్ సరిపోలడం లేదు.",
                "different": "ది: లక్షణం మరియు: ఇతర భిన్నంగా ఉండాలి.",
                "digits": "లక్షణం: అంకెలు అంకెలు ఉండాలి.",
                "digits_between": "ది: లక్షణం మధ్య ఉండాలి: min మరియు: max అంకెలు.",
                "dimensions": ": లక్షణం చెల్లని ఇమేజ్ పరిమాణాలను కలిగి ఉంది.",
                "distinct": ": గుణం ఫీల్డ్ నకిలీ విలువను కలిగి ఉంది.",
                "email": "ఆ: లక్షణం చెల్లుబాటు అయ్యే ఇమెయిల్ చిరునామా అయి ఉండాలి.",
                "exists": "ఎంచుకున్నది: లక్షణం చెల్లనిది.",
                "file": "ఆ లక్షణం తప్పనిసరిగా ఒక ఫైల్ అయి ఉండాలి.",
                "filled": "ఆ: లక్షణం రంగంలో విలువ ఉండాలి.",
                "gt": {
                    "numeric": "ఆ: లక్షణం కంటే ఎక్కువ ఉండాలి: విలువ.",
                    "file": "విలువ: కిలోబైట్ల విలువ కంటే ఎక్కువ ఉండాలి.",
                    "string": "విలువ: అక్షరాల కంటే ఎక్కువగా ఉండాలి.",
                    "array": "విలువ: కంటే ఎక్కువ విలువ ఉండాలి."
                },
                "gte": {
                    "numeric": "విలువ: లక్షణం కంటే ఎక్కువ లేదా సమానంగా ఉండాలి: విలువ.",
                    "file": "విలువ: కిలోబైట్ల విలువ కంటే ఎక్కువ లేదా సమానంగా ఉండాలి.",
                    "string": "విలువ: విలువలు ఎక్కువ లేదా సమానంగా ఉండాలి: విలువ అక్షరాలు.",
                    "array": "లక్షణం కలిగి ఉండాలి: విలువ అంశాలు లేదా ఎక్కువ."
                },
                "image": "ది: లక్షణం తప్పనిసరిగా ఒక చిత్రం అయి ఉండాలి.",
                "in": "ఎంచుకున్నది: లక్షణం చెల్లనిది.",
                "in_array": "ది: లక్షణం రంగంలో లేదు: ఇతర.",
                "integer": "ది: లక్షణం పూర్ణాంకంగా ఉండాలి.",
                "ip": "ది: లక్షణం చెల్లుబాటు అయ్యే IP చిరునామా అయి ఉండాలి.",
                "ipv4": "ది: లక్షణం చెల్లుబాటు అయ్యే IPv4 చిరునామా అయి ఉండాలి.",
                "ipv6": "ది: లక్షణం చెల్లుబాటు అయ్యే IPv6 చిరునామా అయి ఉండాలి.",
                "json": ": లక్షణం తప్పనిసరిగా చెల్లుబాటు అయ్యే JSON స్ట్రింగ్ అయి ఉండాలి.",
                "lt": {
                    "numeric": "విలువ: విలువ కంటే తక్కువగా ఉండాలి.",
                    "file": "విలువ: కిలోబైట్ల కంటే తక్కువగా ఉండాలి.",
                    "string": "విలువ: అక్షరాల కంటే తక్కువగా ఉండాలి.",
                    "array": "విలువ: విలువ కంటే తక్కువగా ఉండాలి."
                },
                "lte": {
                    "numeric": "విలువ: విలువ తప్పక లేదా సమానంగా ఉండాలి: విలువ.",
                    "file": "విలువ: కిలోబైట్ల కంటే తక్కువ లేదా సమానంగా ఉండాలి.",
                    "string": "విలువ: అక్షరాల కంటే తక్కువగా లేదా సమానంగా ఉండాలి: విలువ అక్షరాలు.",
                    "array": "విలువ: విలువలు కంటే ఎక్కువ ఉండకూడదు."
                },
                "max": {
                    "numeric": "ఆ: లక్షణం కంటే ఎక్కువ కాదు: గరిష్టంగా.",
                    "file": "ఆ: లక్షణం కంటే ఎక్కువ కాదు: గరిష్ట కిలోబైట్లు.",
                    "string": "ఆ: గుణం కంటే ఎక్కువ కాదు: గరిష్ట అక్షరాలు.",
                    "array": ": లక్షణం కంటే ఎక్కువ ఉండకపోవచ్చు: గరిష్ట అంశాలు."
                },
                "mimes": ": లక్షణం రకం యొక్క ఒక ఫైల్ తప్పనిసరిగా:: విలువలు.",
                "mimetypes": ": లక్షణం రకం యొక్క ఒక ఫైల్ తప్పనిసరిగా:: విలువలు.",
                "min": {
                    "numeric": "ది: లక్షణం కనీసం ఉండాలి: min.",
                    "file": "ది: లక్షణం కనీసం ఉండాలి: min kilobytes.",
                    "string": "ది: లక్షణం తప్పనిసరిగా కనీసం ఉండాలి: కనిష్ట అక్షరాలు.",
                    "array": "ది: లక్షణం కనీసం ఉండాలి: min అంశాలు."
                },
                "not_in": "ఎంచుకున్నది: లక్షణం చెల్లనిది.",
                "not_regex": ": గుణం ఫార్మాట్ చెల్లనిది.",
                "numeric": "ది: లక్షణం ఒక సంఖ్యగా ఉండాలి.",
                "present": "ది: గుణం ఫీల్డ్ ఉండాలి.",
                "regex": ": గుణం ఫార్మాట్ చెల్లనిది.",
                "required": "ది: గుణం ఫీల్డ్ అవసరం.",
                "required_if": "ఆ: లక్షణం ఫీల్డ్ అవసరం: ఇతరమైనది: విలువ.",
                "required_unless": "ది: గుణం ఫీల్డ్ అవసరం తప్ప: మరొకది: విలువలు.",
                "required_with": ": లక్షణం ఫీల్డ్ అవసరం: విలువలు ఉంది.",
                "required_with_all": ": లక్షణం ఫీల్డ్ అవసరం: విలువలు ఉంది.",
                "required_without": ": లక్షణం ఫీల్డ్ అవసరం: విలువలు లేవు.",
                "required_without_all": ": ఎవరిలో అయినా విలువలు ఉన్నట్లయితే గుణం ఫీల్డ్ అవసరం.",
                "same": "ది: లక్షణం మరియు: ఇతర తప్పక సరిపోవాలి.",
                "size": {
                    "numeric": "ఆ గుణం: పరిమాణం ఉండాలి.",
                    "file": "ది: లక్షణం తప్పక: పరిమాణం కిలోబైట్లు.",
                    "string": "లక్షణం: పరిమాణ అక్షరాలు ఉండాలి.",
                    "array": "ది: లక్షణం కలిగి ఉండాలి: పరిమాణం అంశాలు."
                },
                "string": "ది: లక్షణం ఒక స్ట్రింగ్ అయి ఉండాలి.",
                "timezone": "ఆ: లక్షణం చెల్లుబాటు అయ్యే జోన్గా ఉండాలి.",
                "unique": "ఆ లక్షణం ఇప్పటికే తీసుకోబడింది.",
                "uploaded": ": లక్షణం అప్లోడ్ విఫలమైంది.",
                "url": ": గుణం ఫార్మాట్ చెల్లనిది.",
                "custom": {
                    "attribute-name": {
                        "rule-name": "కస్టమ్ సందేశాన్ని"
                    }
                }
            },
            "auth": {
                "throttle": "చాలా ఎక్కువ లాగిన్ ప్రయత్నాలు. దయచేసి మళ్ళీ ప్రయత్నించండి: సెకన్లు సెకన్లు.",
                "suspended": "మమ్మల్ని క్షమించండి!. మీ ఖాతా సస్పెండ్ చేయబడింది. దయచేసి నిర్వాహకుడిని సంప్రదించండి"
            },
            "global": {
                "user-management": {
                    "title": "వాడుకరి నిర్వహణ"
                },
                "permissions": {
                    "title": "అనుమతులు",
                    "fields": {
                        "title": "శీర్షిక"
                    }
                },
                "roles": {
                    "title": "పాత్రలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "permission": "అనుమతులు"
                    }
                },
                "users": {
                    "title": "వినియోగదారులు",
                    "active": "Active",
                    "suspend": "సస్పెండ్",
                    "activate": "సక్రియం",
                    "fields": {
                        "name": "పేరు",
                        "email": "ఇమెయిల్",
                        "password": "పాస్వర్డ్",
                        "role": "పాత్ర",
                        "remember-token": "టోకెన్ గుర్తుంచుకో",
                        "contact-reference": "సూచనను సంప్రదించండి",
                        "department": "శాఖ",
                        "status": "స్థితి"
                    }
                },
                "user-actions": {
                    "title": "వాడుకరి చర్యలు",
                    "created_at": "సమయం",
                    "fields": {
                        "user": "వాడుకరి",
                        "action": "యాక్షన్",
                        "action-model": "యాక్షన్ మోడల్",
                        "action-id": "చర్య ఐడి"
                    }
                },
                "contact-management": {
                    "title": "నిర్వహణ నిర్వహణ"
                },
                "contact-companies": {
                    "title": "కంపెనీలు",
                    "fields": {
                        "name": "కంపెనీ పేరు",
                        "email": "ఇమెయిల్",
                        "address": "చిరునామా",
                        "website": "వెబ్సైట్"
                    }
                },
                "contacts": {
                    "title": "కాంటాక్ట్స్",
                    "title_customers": "వినియోగదారుడు",
                    "title_customer": "కస్టమర్",
                    "title_suppliers": "సప్లయర్స్",
                    "title_supplier": "సరఫరాదారు",
                    "title_leads": "దారితీస్తుంది",
                    "title_lead": "లీడ్",
                    "title_profile": "ప్రొఫైల్",
                    "edit-profile": "ప్రొఫైల్ను సవరించండి",
                    "fields": {
                        "company": "కంపెనీ",
                        "group": "గ్రూప్",
                        "contact-type": "పరిచయం రకం",
                        "first-name": "మొదటి పేరు",
                        "last-name": "చివరి పేరు",
                        "language": "భాషా",
                        "phone1": "ఫోన్ 1",
                        "phone2": "ఫోన్ 2",
                        "phone1_code": "ఫోన్ 1 కోడ్",
                        "phone2_code": "ఫోన్ 2 కోడ్",
                        "email": "ఇమెయిల్",
                        "skype": "స్కైప్",
                        "address": "చిరునామా",
                        "city": "సిటీ",
                        "state-region": "రాష్ట్రం / ప్రాంతం",
                        "zip-postal-code": "జిప్ / పోస్టల్ కోడ్",
                        "tax-id": "పన్ను గుర్తింపు",
                        "country": "దేశం"
                    }
                },
                "expense-management": {
                    "title": "అకౌంటింగ్"
                },
                "expense-category": {
                    "title": "ఖర్చు వర్గం",
                    "fields": {
                        "name": "పేరు"
                    }
                },
                "income-category": {
                    "title": "ఆదాయం వర్గాలు",
                    "fields": {
                        "name": "పేరు"
                    }
                },
                "income": {
                    "title": "ఆదాయపు",
                    "fields": {
                        "account": "ఖాతా",
                        "income-category": "ఆదాయం వర్గం",
                        "entry-date": "ఎంట్రీ తేదీ",
                        "amount": "మొత్తం",
                        "description": "వివరణ",
                        "description-file": "వివరణ ఫైలు",
                        "payer": "చెల్లింపుదారు",
                        "pay-method": "చెల్లించండి పద్ధతి",
                        "ref-no": "Ref #"
                    }
                },
                "expense": {
                    "title": "ఖర్చులు",
                    "fields": {
                        "account": "ఖాతా",
                        "expense-category": "ఖర్చు వర్గం",
                        "entry-date": "ఎంట్రీ తేదీ",
                        "amount": "మొత్తం",
                        "description": "వివరణ",
                        "description-file": "వివరణ ఫైలు",
                        "payee": "చెల్లింపును స్వీకరించే",
                        "payment-method": "పైకము చెల్లించు విదానం",
                        "ref-no": "Ref #"
                    }
                },
                "monthly-report": {
                    "title": "మంత్లీ రిపోర్ట్"
                },
                "faq-management": {
                    "title": "FAQ మేనేజ్మెంట్",
                    "faq": "తరచుగా అడిగే ప్రశ్నలు"
                },
                "faq-categories": {
                    "title": "వర్గం",
                    "fields": {
                        "title": "వర్గం"
                    }
                },
                "faq-questions": {
                    "title": "ప్రశ్నలు",
                    "fields": {
                        "category": "వర్గం",
                        "question-text": "ప్రశ్న",
                        "answer-text": "సమాధానం"
                    }
                },
                "internal-notifications": {
                    "title": "ప్రకటనలు",
                    "fields": {
                        "text": "టెక్స్ట్",
                        "link": "లింక్",
                        "users": "వినియోగదారులు"
                    }
                },
                "task-management": {
                    "title": "టాస్క్ మేనేజ్మెంట్"
                },
                "task-statuses": {
                    "title": "హోదాలు",
                    "panel-default": "డిఫాల్ట్ ప్యానెల్",
                    "panel-primary": "ప్రాథమిక ప్యానెల్",
                    "panel-success": "సక్సెస్ ప్యానెల్",
                    "panel-info": "సమాచార ప్యానెల్",
                    "panel-warning": "హెచ్చరిక ప్యానెల్",
                    "panel-danger": "డేంజర్ ప్యానెల్",
                    "fields": {
                        "name": "పేరు",
                        "color": "రంగు"
                    }
                },
                "task-tags": {
                    "title": "టాగ్లు",
                    "fields": {
                        "name": "పేరు"
                    }
                },
                "tasks": {
                    "title": "పనులు",
                    "task-status-updated": "విధి స్థితి విజయవంతంగా నవీకరించబడింది",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ",
                        "status": "స్థితి",
                        "tag": "టాగ్లు",
                        "attachment": "జోడింపు",
                        "start-date": "ప్రారంబపు తేది",
                        "due-date": "గడువు తేది",
                        "user": "కేటాయించిన"
                    }
                },
                "task-calendar": {
                    "title": "క్యాలెండర్",
                    "status-wise": "స్థితి జ్ఞానం"
                },
                "content-management": {
                    "title": "విషయ గ్రంథస్త నిర్వహణ"
                },
                "content-categories": {
                    "title": "వర్గం",
                    "fields": {
                        "title": "వర్గం",
                        "slug": "స్లగ్"
                    }
                },
                "content-tags": {
                    "title": "టాగ్లు",
                    "fields": {
                        "title": "ట్యాగ్",
                        "slug": "స్లగ్"
                    }
                },
                "content-pages": {
                    "title": "పేజీలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "category-id": "వర్గం",
                        "tag-id": "టాగ్లు",
                        "page-text": "టెక్స్ట్",
                        "excerpt": "ఎక్సెర్ప్ట్",
                        "featured-image": "ఫీచర్ చిత్రం",
                        "created-at": "సమయం సృష్టించబడింది"
                    }
                },
                "product-management": {
                    "title": "ఉత్పత్తి నిర్వహణ"
                },
                "product-categories": {
                    "title": "వర్గం",
                    "fields": {
                        "name": "వర్గం పేరు",
                        "description": "వివరణ",
                        "photo": "ఫోటో (గరిష్టంగా 8mb)"
                    }
                },
                "product-tags": {
                    "title": "టాగ్లు",
                    "fields": {
                        "name": "పేరు"
                    }
                },
                "products": {
                    "title": "ఉత్పత్తులు",
                    "gallery-file-types": "అంగీకరించిన ఫైల్ రకాలు: png, jpg, jpeg, gif",
                    "fields": {
                        "name": "ఉత్పత్తి పేరు",
                        "product-code": "ఉత్పత్తి కోడ్",
                        "actual-price": "అసలు ధర",
                        "sale-price": "అమ్ముడు ధర",
                        "category": "వర్గం",
                        "tag": "ట్యాగ్",
                        "ware-house": "వేర్ హౌస్",
                        "description": "వివరణ",
                        "excerpt": "ఎక్సెర్ప్ట్",
                        "stock-quantity": "స్టాక్ పరిమాణం",
                        "alert-quantity": "హెచ్చరిక పరిమాణం",
                        "image-gallery": "చిత్రం గ్యాలరీ",
                        "thumbnail": "సూక్ష్మచిత్రం",
                        "other-files": "ఇతర ఫైళ్ళు",
                        "hsn-sac-code": "HSN / SAC కోడ్",
                        "product-size": "ఉత్పత్తి పరిమాణం",
                        "product-weight": "ఉత్పత్తి బరువు",
                        "brand": "బ్రాండ్"
                    }
                },
                "assets-management": {
                    "title": "ఆస్తుల నిర్వహణ"
                },
                "assets-categories": {
                    "title": "వర్గం",
                    "fields": {
                        "title": "శీర్షిక"
                    }
                },
                "assets-statuses": {
                    "title": "హోదాలు",
                    "fields": {
                        "title": "శీర్షిక"
                    }
                },
                "assets-locations": {
                    "title": "స్థానాలు",
                    "fields": {
                        "title": "శీర్షిక"
                    }
                },
                "assets": {
                    "title": "ఆస్తులు",
                    "fields": {
                        "category": "వర్గం",
                        "serial-number": "క్రమ సంఖ్య",
                        "title": "శీర్షిక",
                        "photo1": "సూక్ష్మచిత్రం",
                        "photo2": "గ్యాలరీ",
                        "attachments": "అటాచ్మెంట్లు",
                        "status": "స్థితి",
                        "location": "స్థానం",
                        "assigned-user": "కేటాయించిన (వినియోగదారు)",
                        "notes": "గమనికలు"
                    }
                },
                "assets-history": {
                    "title": "ఆస్తుల చరిత్ర",
                    "created_at": "సమయం",
                    "fields": {
                        "asset": "ఆస్తి",
                        "status": "స్థితి",
                        "location": "స్థానం",
                        "assigned-user": "కేటాయించిన (వినియోగదారు)"
                    }
                },
                "coupon-management": {
                    "title": "కూపన్ మేనేజ్మెంట్"
                },
                "coupon-campaigns": {
                    "title": "ప్రచారాలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "description": "వివరణ",
                        "valid-from": "నుండి చెల్లుబాటు అయ్యే",
                        "valid-to": "చెల్లుతుంది",
                        "discount-amount": "డిస్కౌంట్ మొత్తం",
                        "discount-percent": "డిస్కౌంట్ శాతం",
                        "coupons-amount": "కూపన్లు మొత్తం"
                    }
                },
                "coupons": {
                    "title": "కూపన్లు",
                    "fields": {
                        "campaign": "ప్రచారం",
                        "code": "కోడ్",
                        "valid-from": "నుండి చెల్లుబాటు అయ్యే",
                        "valid-to": "చెల్లుతుంది",
                        "discount-amount": "డిస్కౌంట్ మొత్తం",
                        "discount-percent": "డిస్కౌంట్ శాతం",
                        "redeem-time": "సమయాన్ని ఆదా చేయండి"
                    }
                },
                "expense-types": {
                    "title": "ఖర్చు రకాలు"
                },
                "global-settings": {
                    "title": "గ్లోబల్ సెట్టింగ్లు"
                },
                "currencies": {
                    "title": "కరెన్సీలు",
                    "fields": {
                        "name": "పేరు",
                        "symbol": "చిహ్నం",
                        "code": "కోడ్",
                        "rate": "రేటు",
                        "status": "స్థితి",
                        "is_default": "డిఫాల్ట్?"
                    }
                },
                "sales-taxes": {
                    "title": "సేల్స్ టాక్స్"
                },
                "email-templates": {
                    "title": "ఇమెయిల్ టెంప్లేట్లను",
                    "fields": {
                        "name": "పేరు",
                        "subject": "Subject",
                        "body": "శరీర"
                    }
                },
                "companies": {
                    "title": "కంపెనీలు",
                    "fields": {
                        "company-name": "కంపెనీ పేరు",
                        "address": "చిరునామా",
                        "business-number": "వ్యాపారం సంఖ్య",
                        "city": "సిటీ",
                        "url": "url",
                        "state-region": "రాష్ట్రం / ప్రాంతం",
                        "email": "ఇమెయిల్",
                        "zip-postal-code": "జిప్ / పోస్టల్ కోడ్",
                        "country": "దేశం",
                        "phone": "ఫోన్",
                        "logo": "లోగో"
                    }
                },
                "accounts": {
                    "title": "అకౌంట్స్",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ",
                        "initial-balance": "ప్రారంభ సంతులనం",
                        "account-number": "ఖాతా సంఖ్య",
                        "contact-person": "వ్యక్తి సంప్రదించండి",
                        "phone": "ఫోన్",
                        "url": "URL"
                    }
                },
                "payment-gateways": {
                    "title": "చెల్లింపు ముఖద్వారాలు",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ",
                        "logo": "లోగో"
                    }
                },
                "warehouses": {
                    "title": "గిడ్డంగులు",
                    "fields": {
                        "name": "పేరు",
                        "address": "చిరునామా",
                        "description": "వివరణ"
                    }
                },
                "taxes": {
                    "title": "పన్నులు",
                    "fields": {
                        "name": "పేరు",
                        "rate": "రేటు",
                        "rate-type": "రేట్ రకం",
                        "description": "వివరణ"
                    }
                },
                "discounts": {
                    "title": "డిస్కౌంట్",
                    "fields": {
                        "name": "పేరు",
                        "discount": "డిస్కౌంట్",
                        "discount-type": "డిస్కౌంట్ రకం",
                        "description": "వివరణ"
                    }
                },
                "recurring-periods": {
                    "title": "పునరావృత కాలాలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "value": "విలువ",
                        "description": "వివరణ"
                    }
                },
                "languages": {
                    "title": "భాషలు",
                    "fields": {
                        "language": "భాషా",
                        "code": "కోడ్",
                        "is-rtl": "RTL ఉంది"
                    }
                },
                "purchase-orders": {
                    "title": "ఆర్డర్లను కొనుగోలు చేయండి",
                    "fields": {
                        "customer": "సరఫరాదారు",
                        "subject": "Subject",
                        "status": "స్థితి",
                        "address": "చిరునామా",
                        "invoice-prefix": "వాయిస్ ఉపసర్గ",
                        "show-quantity-as": "పరిమాణం చూపించు",
                        "invoice-no": "ఇన్వాయిస్ #",
                        "reference": "సూచన",
                        "order-date": "జారి చెయ్యబడిన చోటు",
                        "order-due-date": "ఆర్డర్ గడువు తేదీ",
                        "update-stock": "స్టాక్ను నవీకరించండి",
                        "notes": "గమనికలు",
                        "currency": "కరెన్సీ",
                        "warehouse": "వేర్హౌస్",
                        "tax": "పన్ను",
                        "discount": "డిస్కౌంట్",
                        "amount": "మొత్తం"
                    }
                },
                "manage-projects": {
                    "title": "ప్రాజెక్టులను నిర్వహించండి"
                },
                "projects": {
                    "title": "ప్రాజెక్ట్స్"
                },
                "project-statuses": {
                    "title": "ప్రాజెక్ట్ హోదాలు",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ"
                    }
                },
                "client-projects": {
                    "title": "క్లయింట్ ప్రాజెక్టులు",
                    "fields": {
                        "title": "శీర్షిక",
                        "client": "క్లయింట్",
                        "priority": "ప్రాధాన్యత",
                        "budget": "బడ్జెట్",
                        "billing-type": "బిల్లింగ్ రకం",
                        "phase": "దశ",
                        "assigned-to": "కేటాయించిన",
                        "start-date": "ప్రారంబపు తేది",
                        "due-date": "గడువు తేది",
                        "status": "స్థితి",
                        "description": "వివరణ",
                        "demo-url": "డెమో url"
                    }
                },
                "project-billing-types": {
                    "title": "ప్రాజెక్ట్ బిల్లింగ్ రకాలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "description": "వివరణ"
                    }
                },
                "time-entries": {
                    "title": "సమయం ఎంట్రీలు",
                    "fields": {
                        "project": "ప్రాజెక్ట్",
                        "start-date": "ప్రారంబపు తేది",
                        "end-date": "ఆఖరి తేది",
                        "description": "వివరణ"
                    }
                },
                "sales": {
                    "title": "అమ్మకాలు"
                },
                "invoices": {
                    "title": "రసీదులు",
                    "fields": {
                        "customer": "కస్టమర్",
                        "currency": "కరెన్సీ",
                        "title": "శీర్షిక",
                        "address": "చిరునామా",
                        "invoice-prefix": "వాయిస్ ఉపసర్గ",
                        "show-quantity-as": "పరిమాణం చూపించు",
                        "invoice-no": "ఇన్వాయిస్ #",
                        "status": "స్థితి",
                        "reference": "సూచన",
                        "invoice-date": "చలానా తారీకు",
                        "invoice-due-date": "వాయిస్ గడువు తేదీ",
                        "invoice-notes": "వాయిస్ గమనికలు",
                        "tax": "పన్ను",
                        "discount": "డిస్కౌంట్",
                        "amount": "మొత్తం",
                        "discount_format": "డిస్కౌంట్ ఫార్మాట్",
                        "tax_format": "పన్ను ఫార్మాట్"
                    }
                },
                "quotes": {
                    "title": "వ్యాఖ్యలు",
                    "fields": {
                        "customer": "కస్టమర్",
                        "status": "స్థితి",
                        "title": "శీర్షిక",
                        "address": "చిరునామా",
                        "quote-prefix": "కోట్ ఉపసర్గ",
                        "show-quantity-as": "పరిమాణం చూపించు",
                        "quote-no": "కోట్ లేదు",
                        "reference": "సూచన",
                        "quote-date": "కోట్ తేదీ",
                        "quote-expiry-date": "కోట్ గడువు తేదీ",
                        "proposal-text": "ప్రతిపాదన టెక్స్ట్",
                        "currency": "కరెన్సీ",
                        "tax": "పన్ను",
                        "discount": "డిస్కౌంట్",
                        "amount": "మొత్తం"
                    }
                },
                "recurring-invoices": {
                    "title": "పునరావృత ఇన్వాయిస్లు",
                    "fields": {
                        "customer": "కస్టమర్",
                        "currency": "కరెన్సీ",
                        "title": "శీర్షిక",
                        "address": "చిరునామా",
                        "invoice-prefix": "వాయిస్ ఉపసర్గ",
                        "show-quantity-as": "పరిమాణం చూపించు",
                        "invoice-no": "ఇన్వాయిస్ #",
                        "status": "స్థితి",
                        "reference": "సూచన",
                        "invoice-date": "చలానా తారీకు",
                        "invoice-due-date": "వాయిస్ గడువు తేదీ",
                        "invoice-notes": "వాయిస్ గమనికలు",
                        "tax": "పన్ను",
                        "discount": "డిస్కౌంట్",
                        "recurring-period": "పునరావృత కాలం",
                        "amount": "మొత్తం",
                        "products": "ఉత్పత్తులు",
                        "paymentstatus": "చెల్లింపు స్థితి"
                    }
                },
                "contact-groups": {
                    "title": "పరిచయ సమూహాలు",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ"
                    }
                },
                "contact-types": {
                    "title": "సంప్రదించండి రకాలు",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ"
                    }
                },
                "contact-notes": {
                    "title": "సంప్రదింపు గమనికలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "contact": "సంప్రదించండి",
                        "notes": "గమనికలు",
                        "attachment": "జోడింపు"
                    }
                },
                "contact-documents": {
                    "title": "సంప్రదించండి పత్రాలు",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ",
                        "attachments": "అటాచ్మెంట్లు",
                        "contact": "సంప్రదించండి"
                    }
                },
                "products-transfer": {
                    "title": "ఉత్పత్తులు బదిలీ"
                },
                "products-return": {
                    "title": "ఉత్పత్తులు తిరిగి వస్తాయి",
                    "fields": {
                        "subject": "Subject",
                        "customer": "కస్టమర్",
                        "currency": "కరెన్సీ",
                        "status": "స్థితి",
                        "address": "చిరునామా",
                        "invoice-prefix": "వాయిస్ ఉపసర్గ",
                        "show-quantity-as": "పరిమాణం చూపించు",
                        "invoice-no": "ఇన్వాయిస్ #",
                        "reference": "సూచన",
                        "order-date": "ఆర్డర్ తేదీ",
                        "order-due-date": "ఆర్డర్ గడువు తేదీ",
                        "update-stock": "స్టాక్ను నవీకరించండి",
                        "notes": "గమనికలు",
                        "tax": "పన్ను",
                        "discount": "డిస్కౌంట్",
                        "ware-house": "వేర్ హౌస్"
                    }
                },
                "brands": {
                    "title": "బ్రాండ్స్",
                    "fields": {
                        "title": "శీర్షిక",
                        "icon": "ఐకాన్",
                        "status": "స్థితి"
                    }
                },
                "database-backup": {
                    "title": "డేటాబేస్ బ్యాకప్"
                },
                "departments": {
                    "title": "విభాగాలు",
                    "fields": {
                        "name": "పేరు",
                        "description": "వివరణ",
                        "created-by": "సృష్టికర్త"
                    }
                },
                "support": {
                    "title": "మద్దతు",
                    "fields": {
                        "name": "పేరు",
                        "email": "ఇమెయిల్",
                        "subject": "Subject",
                        "department": "శాఖ",
                        "priority": "ప్రాధాన్యత",
                        "description": "వివరణ",
                        "attachments": "అటాచ్మెంట్లు",
                        "created-by": "సృష్టికర్త",
                        "assigned-to": "కేటాయించిన"
                    }
                },
                "knowledgebase": {
                    "title": "ఆధారితం"
                },
                "transfers": {
                    "title": "బదిలీలు",
                    "fields": {
                        "from": "నుండి",
                        "to": "టు",
                        "date": "తేదీ",
                        "amount": "మొత్తం",
                        "ref-no": "Ref #",
                        "payment-method": "పైకము చెల్లించు విదానం",
                        "description": "వివరణ"
                    }
                },
                "articles": {
                    "title": "వ్యాసాలు",
                    "fields": {
                        "title": "శీర్షిక",
                        "category-id": "వర్గం",
                        "tag-id": "టాగ్లు",
                        "page-text": "టెక్స్ట్",
                        "excerpt": "ఎక్సెర్ప్ట్",
                        "featured-image": "ఫీచర్ చిత్రం",
                        "available-for": "అందుబాటులో"
                    }
                },
                "balance-sheet": {
                    "title": "బ్యాలెన్స్ షీట్"
                },
                "general-settings": {
                    "title": "సాధారణ సెట్టింగులు"
                },
                "master-settings": {
                    "title": "మాస్టర్ సెట్టింగులు",
                    "fields": {
                        "module": "మాడ్యూల్",
                        "key": "కీ",
                        "description": "వివరణ"
                    }
                },
                "countries": {
                    "title": "దేశాలు",
                    "fields": {
                        "shortcode": "చిన్న కోడ్",
                        "title": "శీర్షిక"
                    }
                },
                "measurement-units": {
                    "title": "కొలత యూనిట్లు",
                    "fields": {
                        "title": "శీర్షిక",
                        "status": "స్థితి",
                        "description": "వివరణ"
                    }
                },
                "payments": {
                    "title": "చెల్లింపులు",
                    "failed": "చెల్లింపు విఫలమైంది",
                    "cancelled": "మీరు మీ చెల్లింపును రద్దు చేసారు"
                },
                "navigation-menues": {
                    "title": "నావిగేషన్ మెన్యుస్"
                },
                "app_create": "సృష్టించు",
                "app_save": "సేవ్",
                "app_edit": "మార్చు",
                "app_restore": "పునరుద్ధరించు",
                "app_values": "విలువలు",
                "app_permadel": "శాశ్వతంగా తొలగించు",
                "app_all": "అన్ని",
                "app_trash": "ట్రాష్",
                "app_view": "చూడండి",
                "app_update": "నవీకరణ",
                "app_list": "జాబితా",
                "app_no_entries_in_table": "పట్టికలో ఎంట్రీలు లేవు",
                "app_custom_controller_index": "కస్టమ్ కంట్రోలర్ సూచిక.",
                "app_logout": "లాగౌట్",
                "app_add_new": "కొత్తది జత పరచండి",
                "app_are_you_sure": "మీరు చెప్పేది నిజమా?",
                "app_back_to_list": "జాబితాకు తిరిగి వెళ్ళు",
                "app_dashboard": "డాష్బోర్డ్",
                "app_delete": "తొలగించు",
                "app_delete_selected": "ఎంచుకున్నవాటిని రద్దు చేయుట",
                "app_category": "వర్గం",
                "app_categories": "వర్గం",
                "app_sample_category": "నమూనా వర్గం",
                "app_questions": "ప్రశ్నలు",
                "app_question": "ప్రశ్న",
                "app_answer": "సమాధానం",
                "app_sample_question": "నమూనా ప్రశ్న",
                "app_sample_answer": "నమూనా సమాధానం",
                "app_faq_management": "FAQ మేనేజ్మెంట్",
                "app_administrator_can_create_other_users": "నిర్వాహకుడు (ఇతర వినియోగదారులు సృష్టించగలరు)",
                "app_simple_user": "సాధారణ యూజర్",
                "app_title": "శీర్షిక",
                "app_roles": "పాత్రలు",
                "app_role": "పాత్ర",
                "app_user_management": "వాడుకరి నిర్వహణ",
                "app_users": "వినియోగదారులు",
                "app_user": "వాడుకరి",
                "app_name": "పేరు",
                "app_email": "ఇమెయిల్",
                "app_password": "పాస్వర్డ్",
                "app_remember_token": "టోకెన్ గుర్తుంచుకో",
                "app_permissions": "అనుమతులు",
                "app_user_actions": "వాడుకరి చర్యలు",
                "app_action": "యాక్షన్",
                "app_action_model": "యాక్షన్ మోడల్",
                "app_action_id": "చర్య ఐడి",
                "app_time": "సమయం",
                "app_campaign": "ప్రచారం",
                "app_campaigns": "ప్రచారాలు",
                "app_description": "వివరణ",
                "app_valid_from": "నుండి చెల్లుబాటు అయ్యే",
                "app_valid_to": "చెల్లుతుంది",
                "app_discount_amount": "డిస్కౌంట్ మొత్తం",
                "app_discount_percent": "డిస్కౌంట్ శాతం",
                "app_coupons_amount": "కూపన్లు మొత్తం",
                "app_coupons": "కూపన్లు",
                "app_code": "కోడ్",
                "app_redeem_time": "సమయాన్ని ఆదా చేయండి",
                "app_coupon_management": "కూపన్ మేనేజ్మెంట్",
                "app_time_management": "సమయం నిర్వహణ",
                "app_projects": "ప్రాజెక్ట్స్",
                "app_reports": "నివేదికలు",
                "app_time_entries": "సమయం ఎంట్రీలు",
                "app_work_type": "పని రకం",
                "app_work_types": "పని రకాలు",
                "app_project": "ప్రాజెక్ట్",
                "app_start_time": "సమయం ప్రారంభించండి",
                "app_end_time": "ముగింపు సమయం",
                "app_expense_category": "ఖర్చు వర్గం",
                "app_expense_categories": "ఖర్చు వర్గం",
                "app_expense_management": "ఖర్చు నిర్వహణ",
                "app_expenses": "ఖర్చులు",
                "app_expense": "ఖర్చుల",
                "app_entry_date": "ఎంట్రీ తేదీ",
                "app_amount": "మొత్తం",
                "app_income_categories": "ఆదాయం వర్గాలు",
                "app_monthly_report": "మంత్లీ రిపోర్ట్",
                "app_companies": "కంపెనీలు",
                "app_company_name": "కంపెనీ పేరు",
                "app_address": "చిరునామా",
                "app_website": "వెబ్సైట్",
                "app_contact_management": "నిర్వహణ నిర్వహణ",
                "app_contacts": "కాంటాక్ట్స్",
                "app_company": "కంపెనీ",
                "app_first_name": "మొదటి పేరు",
                "app_last_name": "చివరి పేరు",
                "app_phone": "ఫోన్",
                "app_phone1": "ఫోన్ 1",
                "app_phone2": "ఫోన్ 2",
                "app_skype": "స్కైప్",
                "app_photo": "ఫోటో (గరిష్టంగా 8mb)",
                "app_category_name": "వర్గం పేరు",
                "app_product_management": "ఉత్పత్తి నిర్వహణ",
                "app_products": "ఉత్పత్తులు",
                "app_product_name": "ఉత్పత్తి పేరు",
                "app_price": "ధర",
                "app_tags": "టాగ్లు",
                "app_tag": "ట్యాగ్",
                "app_photo1": "Photo1",
                "app_photo2": "Photo2",
                "app_photo3": "Photo3",
                "app_calendar": "క్యాలెండర్",
                "app_statuses": "హోదాలు",
                "app_task_management": "టాస్క్ మేనేజ్మెంట్",
                "app_tasks": "పనులు",
                "app_status": "స్థితి",
                "app_attachment": "జోడింపు",
                "app_due_date": "గడువు తేది",
                "app_assigned_to": "కేటాయించిన",
                "app_assets": "ఆస్తులు",
                "app_asset": "ఆస్తి",
                "app_serial_number": "క్రమ సంఖ్య",
                "app_location": "స్థానం",
                "app_locations": "స్థానాలు",
                "app_assigned_user": "కేటాయించిన (వినియోగదారు)",
                "app_notes": "గమనికలు",
                "app_assets_history": "ఆస్తుల చరిత్ర",
                "app_assets_management": "ఆస్తుల నిర్వహణ",
                "app_slug": "స్లగ్",
                "app_content_management": "విషయ గ్రంథస్త నిర్వహణ",
                "app_text": "టెక్స్ట్",
                "app_excerpt": "ఎక్సెర్ప్ట్",
                "app_featured_image": "ఫీచర్ చిత్రం",
                "app_pages": "పేజీలు",
                "app_axis": "యాక్సిస్",
                "app_show": "షో",
                "app_group_by": "ద్వారా సమూహం",
                "app_chart_type": "చార్ట్ రకం",
                "app_create_new_report": "కొత్త నివేదికను సృష్టించండి",
                "app_no_reports_yet": "ఇంకా నివేదికలు లేవు.",
                "app_created_at": "వద్ద సృష్టించబడింది",
                "app_updated_at": "వద్ద నవీకరించబడింది",
                "app_deleted_at": "వద్ద తొలగించబడింది",
                "app_reports_x_axis_field": "X- అక్షం - దయచేసి తేదీ / సమయ ఖాళీలను ఒకటి ఎంచుకోండి",
                "app_reports_y_axis_field": "Y- యాక్సిస్ - దయచేసి సంఖ్య ఫీల్డ్లలో ఒకదాన్ని ఎంచుకోండి",
                "app_select_crud_placeholder": "దయచేసి మీ CRUD లలో ఒకదాన్ని ఎంచుకోండి",
                "app_select_dt_placeholder": "దయచేసి తేదీ / సమయ ఫీల్డ్లలో ఒకటి ఎంచుకోండి",
                "app_aggregate_function_use": "ఉపయోగించడానికి మొత్తం ఫంక్షన్",
                "app_x_axis_group_by": "X- అక్షం సమూహం",
                "app_x_axis_field": "X- అక్షం క్షేత్రం (తేదీ / సమయం)",
                "app_y_axis_field": "Y- అక్షం ఫీల్డ్",
                "app_integer_float_placeholder": "దయచేసి పూర్ణాంక / ఫ్లోట్ ఫీల్డ్లలో ఒకదాన్ని ఎంచుకోండి",
                "app_change_notifications_field_1_label": "వినియోగదారుకు ఇమెయిల్ నోటిఫికేషన్ను పంపండి",
                "app_change_notifications_field_2_label": "CRUD ఎంట్రీ చేసినప్పుడు",
                "app_select_users_placeholder": "దయచేసి మీ వినియోగదారుల్లో ఒకదాన్ని ఎంచుకోండి",
                "app_is_created": "సృష్టించబడింది",
                "app_is_updated": "నవీకరించబడింది",
                "app_is_deleted": "తొలగించబడుతుంది",
                "app_notifications": "ప్రకటనలు",
                "app_notify_user": "వినియోగదారుని తెలియజేయండి",
                "app_when_crud": "ఎప్పుడు CRUD",
                "app_create_new_notification": "కొత్త నోటిఫికేషన్ సృష్టించండి",
                "app_stripe_transactions": "గీత లావాదేవీలు",
                "app_upgrade_to_premium": "ప్రీమియంకు అప్గ్రేడ్ చేయండి",
                "app_messages": "సందేశాలు",
                "app_you_have_no_messages": "మీకు సందేశాలు లేవు.",
                "app_all_messages": "అన్ని సందేశాలు",
                "app_new_message": "కొత్త సందేశం",
                "app_outbox": "ఔట్ బాక్స్",
                "app_inbox": "ఇన్బాక్స్",
                "app_recipient": "గ్రహీత",
                "app_subject": "Subject",
                "app_message": "సందేశం",
                "app_send": "పంపండి",
                "app_reply": "ప్రత్యుత్తరం",
                "app_calendar_sources": "క్యాలెండర్ మూలాలు",
                "app_new_calendar_source": "క్రొత్త క్యాలెండర్ మూలాన్ని సృష్టించండి",
                "app_crud_title": "క్రుడ్ టైటిల్",
                "app_crud_date_field": "క్రుడ్ డే ఫీల్డ్",
                "app_prefix": "ఉపసర్గ",
                "app_label_field": "లేబుల్ ఫీల్డ్",
                "app_suffix": "Sufix",
                "app_no_calendar_sources": "ఇంకా క్యాలెండర్ వనరులు లేవు.",
                "app_crud_event_field": "ఈవెంట్ లేబుల్ ఫీల్డ్",
                "app_create_new_calendar_source": "కొత్త క్యాలెండర్ మూలాన్ని సృష్టించండి",
                "app_edit_calendar_source": "క్యాలెండర్ మూలాన్ని సవరించండి",
                "app_client_management": "క్లయింట్ నిర్వహణ",
                "app_client_management_settings": "క్లయింట్ నిర్వహణ సెట్టింగులు",
                "app_country": "దేశం",
                "app_client_status": "క్లయింట్ స్థితి",
                "app_clients": "క్లయింట్లు",
                "app_client_statuses": "క్లయింట్ స్థాయిలు",
                "app_currencies": "కరెన్సీలు",
                "app_main_currency": "ప్రధాన కరెన్సీ",
                "app_documents": "పత్రాలు",
                "app_file": "ఫైలు",
                "app_income_source": "ఆదాయం మూలం",
                "app_income_sources": "ఆదాయం మూలాల",
                "app_fee_percent": "ఫీజు శాతం",
                "app_note_text": "వచనాన్ని గమనించండి",
                "app_client": "క్లయింట్",
                "app_start_date": "ప్రారంబపు తేది",
                "app_budget": "బడ్జెట్",
                "app_project_status": "ప్రాజెక్ట్ స్థితి",
                "app_project_statuses": "ప్రాజెక్ట్ హోదాలు",
                "app_transactions": "ట్రాన్సాక్షన్స్",
                "app_transaction_types": "లావాదేవీ రకాలు",
                "app_transaction_type": "లావాదేవీ రకం",
                "app_transaction_date": "లావాదేవీ తేదీ",
                "app_currency": "కరెన్సీ",
                "app_current_password": "ప్రస్తుత పాస్వర్డ్",
                "app_new_password": "కొత్త పాస్వర్డ్",
                "app_password_confirm": "కొత్త పాస్వర్డ్ నిర్ధారణ",
                "app_dashboard_text": "మీరు లాగిన్ అయ్యారు!",
                "app_forgot_password": "మీ పాస్వర్డ్ను మర్చిపోయారా?",
                "app_remember_me": "నన్ను గుర్తు పెట్టుకో",
                "app_login": "లాగిన్",
                "app_change_password": "పాస్ వర్డ్ ను మార్చండి",
                "app_csv": "CSV",
                "app_print": "ప్రింట్",
                "app_excel": "Excel",
                "app_copy": "కాపీ",
                "app_colvis": "కాలమ్ దృశ్యమానత",
                "app_pdf": "PDF",
                "app_reset_password": "రహస్యపదాన్ని మార్చుకోండి",
                "app_reset_password_woops": "<strong>అయ్యో!</strong> ఇన్పుట్ తో సమస్యలు ఉన్నాయి:",
                "app_email_line1": "మీ ఖాతా కోసం పాస్వర్డ్ రీసెట్ అభ్యర్ధనను మేము స్వీకరించినందున మీరు ఈ ఇమెయిల్ని స్వీకరిస్తున్నారు.",
                "app_email_line2": "మీరు పాస్వర్డ్ రీసెట్ను అభ్యర్థించకుంటే, తదుపరి చర్య అవసరం లేదు.",
                "app_email_greet": "హలో",
                "app_email_regards": "గౌరవంతో",
                "app_confirm_password": "పాస్వర్డ్ని నిర్ధారించండి",
                "app_if_you_are_having_trouble": "మీరు క్లిక్ చేయడం సమస్య ఉంటే",
                "app_copy_paste_url_bellow": "బటన్, దిగువ URL ను మీ వెబ్ బ్రౌజర్లో కాపీ చేసి అతికించండి:",
                "app_please_select": "దయచేసి ఎంచుకోండి",
                "app_register": "నమోదు",
                "app_registration": "నమోదు",
                "app_not_approved_title": "మీరు ఆమోదించబడలేదు",
                "app_not_approved_p": "మీ ఖాతా ఇప్పటికీ నిర్వాహకునిచే ఆమోదించబడలేదు. దయచేసి, ఓపికపట్టండి మరియు తర్వాత మళ్లీ ప్రయత్నించండి.",
                "app_there_were_problems_with_input": "ఇన్పుట్ తో సమస్యలు ఉన్నాయి",
                "app_whoops": "అయ్యో!",
                "app_file_contains_header_row": "ఫైల్ శీర్షిక వరుసను కలిగి ఉంది?",
                "app_csvImport": "CSV దిగుమతి",
                "app_csv_file_to_import": "CSV ఫైల్ దిగుమతి",
                "app_parse_csv": "PARS CSV",
                "app_import_data": "డేటాను దిగుమతి చేయండి",
                "app_imported_rows_to_table": "దిగుమతి చేయబడినవి: వరుసలు వరుసలు: పట్టిక పట్టిక",
                "app_subscription-billing": "చందాలు",
                "app_subscription-payments": "చెల్లింపులు",
                "app_basic_crm": "ప్రాథమిక CRM",
                "app_customers": "వినియోగదారుడు",
                "app_customer": "కస్టమర్",
                "app_select_all": "అన్ని ఎంచుకోండి",
                "app_deselect_all": "అన్ని ఎంపికలను తీసివేయండి",
                "app_team-management": "జట్లు",
                "app_team-management-singular": "జట్టు",
                "global_title": "డిజి ఖాతా, ఇన్వాయిస్ &amp; బిల్లింగ్ CRM",
                "app_add_key": "కీని జోడించు",
                "app_settings": "సెట్టింగులు",
                "app_make_default": "డిఫాల్ట్గా చేయండి",
                "info": "సమాచారం",
                "operations_disabled": "ఆపరేషన్ మోడ్లో డిసేబుల్ చెయ్యబడింది",
                "download-template": "మూసను డౌన్లోడ్ చేయండి",
                "app_refresh": "రిఫ్రెష్",
                "app_loading": "లోడ్"
            },
            "custom": {
                "messages": {
                    "record_saved": "రికార్డ్ విజయవంతంగా సేవ్ చేయబడింది",
                    "record_updated": "రికార్డ్ విజయవంతంగా నవీకరించబడింది",
                    "record_deleted": "రికార్డ్ విజయవంతంగా తొలగించబడింది",
                    "records_deleted": "రికార్డ్లు విజయవంతంగా తొలగించబడ్డాయి",
                    "record_restored": "రికార్డ్ విజయవంతంగా పునరుద్ధరించబడింది",
                    "crud_disabled": "CRUD కార్యకలాపాలు డెమోలో నిలిపివేయబడ్డాయి",
                    "somethiswentwrong": "ఏదో తప్పు జరిగింది",
                    "failed": "విఫలమైంది:",
                    "success": "సక్సెస్:",
                    "info": "సమాచారం:",
                    "mailsent": "ఇమెయిల్ విజయవంతంగా పంపబడింది",
                    "smssent": "SMS విజయవంతంగా పంపబడింది",
                    "status-changed": "స్థితి విజయవంతంగా మార్చబడింది",
                    "not_allowed": "క్షమించాలి! ఈ పేజీని యాక్సెస్ చేయడానికి మీకు అనుమతి లేదు",
                    "not_found": "క్షమించాలి! రికార్డ్ కనుగొనబడలేదు.",
                    "profile_updated": "ప్రొఫైల్ విజయవంతంగా నవీకరించబడింది",
                    "not_found_payment": "చెల్లింపు రికార్డ్ కనుగొనబడలేదు.",
                    "invalid_record": "చెల్లని రికార్డ్",
                    "time_out": "సమయం ముగిసినది",
                    "already-exists": "ఈ పరిచయానికి ఇప్పటికే యూజర్ ఆక్సెస్ ఉంది",
                    "already-exists-email": "ఈ ఇమెయిల్ చిరునామా ఇప్పటికే ఉంది",
                    "contact-dont-have-email": "ఈ పరిచయానికి ఇమెయిల్ చిరునామా లేదు. ఈ - మెయిల్ అడ్రస్ నింపండి",
                    "click-here": "సవరించడానికి <a href=\"{url}\">ఇక్కడ</a> క్లిక్ <a href=\"{url}\">చేయండి</a>"
                },
                "menu": {
                    "sales": "అమ్మకాలు",
                    "create-invoice": "కొత్త ఇన్వాయిస్",
                    "create-quote": "క్రొత్త కోట్",
                    "stock": "స్టాక్",
                    "crm": "CRM",
                    "create-contact": "పరిచయాన్ని సృష్టించండి",
                    "project": "ప్రాజెక్ట్",
                    "balance": "సంతులనం",
                    "miscellaneous": "ఇతరాలు",
                    "customers": "వినియోగదారుడు",
                    "support": "మద్దతు",
                    "tickets": "టికెట్లు"
                },
                "translations": {
                    "title": "అనువాదాలు"
                },
                "common": {
                    "percent": "శాతం (%)",
                    "value": "విలువ",
                    "next": "తరువాత",
                    "previous": "మునుపటి",
                    "print": "ప్రింట్",
                    "download-pdf": "PDF ను డౌన్లోడ్ చేయండి",
                    "preview": "ప్రివ్యూ",
                    "change-status": "స్థితి మార్చండి",
                    "cancel": "రద్దు",
                    "extra": "అదనపు",
                    "sms": "SMS",
                    "mark-as": "మార్క్ గా",
                    "pdf": "PDF",
                    "view-pdf": "PDF ను వీక్షించండి",
                    "update-manage": "నవీకరణ &amp; నిర్వహించండి",
                    "loading": "లోడ్...",
                    "close": "Close",
                    "phone": "ఫోన్:",
                    "email": "ఇమెయిల్:",
                    "send": "పంపండి",
                    "save": "సేవ్",
                    "time": "సమయం",
                    "ip": "IP చిరునామా",
                    "country": "దేశం",
                    "city": "సిటీ",
                    "browser": "బ్రౌజర్",
                    "description": "వివరణ",
                    "comments": "వ్యాఖ్యలు",
                    "duplicate": "క్లోన్",
                    "yes": "అవును",
                    "no": "తోబుట్టువుల",
                    "not-allowed": "క్షమించాలి! ఈ పేజీని యాక్సెస్ చేయడానికి మీకు అనుమతి లేదు",
                    "are-you-sure": "మీరు చెప్పేది నిజమా?",
                    "are-you-sure-delete": "మీరు రికార్డ్ను ఖచ్చితంగా తొలగించాలనుకుంటున్నారా?",
                    "are-you-sure-duplicate": "మీరు ఖచ్చితంగా ఈ రికార్డ్ను నకిలీ చేయాలనుకుంటున్నారా?",
                    "active": "Active",
                    "inactive": "ఇన్-యాక్టివ్"
                },
                "email": {
                    "to": "టు",
                    "customer-name": "వినియోగదారుని పేరు",
                    "cc": "CC",
                    "bcc": "బిసిసి",
                    "subject": "Subject",
                    "message-body": "సందేశం బాడీ",
                    "attach-pdf": "PDF ను జోడించాలా?",
                    "bcc-admin": "Bcc కు నిర్వాహకుడికి పంపాలా?",
                    "send": "పంపండి"
                },
                "products-transfer": {
                    "title": "ఉత్పత్తులు బదిలీ",
                    "transfer_from": "బదిలీ (గిడ్డంగి)",
                    "transfer_to": "బదిలీ (గిడ్డంగి)",
                    "transfered": "ఉత్పత్తులు విజయవంతంగా బదిలీ చేయబడ్డాయి",
                    "no_products_transfered": "ఏ ఉత్పత్తులు బదిలీ చేయలేదు"
                },
                "currencies": {
                    "update_currency_online": "ఆన్లైన్లో కరెన్సీ మారక రేట్లను అప్డేట్ చేయాలా?",
                    "currency_layer_message": "అనువర్తనం కరెన్సీలేర్.కామ్ API ని అనుసంధానించింది. ఇది మీ ఇన్వాయిస్లకు నిజ-సమయ కరెన్సీ మార్పిడిని అందిస్తుంది. 168 ప్రపంచ కరెన్సీల కోసం ఖచ్చితమైన ఎక్స్ఛేంజ్ రేట్లు, 60 సెకనుల నుండి 60 సెకనుల వరకు డేటా నవీకరణలతో. దయచేసి సందర్శించండి: API కీని పొందడానికి url. దయచేసి API కీని నవీకరించండి: settings_url. మీరు ఉత్తమ ప్లాన్ చేస్తున్నారని నిర్ధారించుకోండి. గమనిక: ఉచిత ప్లాన్ కరెన్సీ మార్పిడికి మద్దతు ఇవ్వదు."
                },
                "products": {
                    "item_name": "వస్తువు పేరు",
                    "quantity": "మొత్తము",
                    "rate": "రేటు",
                    "tax_percent": "పన్ను(%)",
                    "tax": "పన్ను",
                    "discount": "డిస్కౌంట్",
                    "amount": "మొత్తం",
                    "action": "యాక్షన్",
                    "currency_help": "ప్రత్యక్ష క్లయింట్ ఆధారంగా మీ క్లయింట్ కోసం చెల్లింపు కరెన్సీ",
                    "default_tax": "డిఫాల్ట్ పన్ను రేట్",
                    "default_discount": "డిఫాల్ట్ డిస్కౌంట్ రేట్",
                    "add_new": "వరుసను జోడించు",
                    "total_tax": "మొత్తం పన్ను (+)",
                    "total_discount": "మొత్తం డిస్కౌంట్ (-)",
                    "grand_total": "సంపూర్ణ మొత్తము",
                    "discount_percent": "డిస్కౌంట్ (%)",
                    "sub_total": "సబ్ మొత్తం",
                    "keep_blank": "స్వయంచాలకంగా వాయిస్ నంబర్ను రూపొందించడానికి ఖాళీని ఉంచండి",
                    "please_select": "దయచేసి ఎంచుకోండి",
                    "already-in-cart": "ఇప్పటికే కార్ట్ లో ఉత్పత్తి. మీరు పరిమాణం పెంచాలనుకుంటున్నారా?",
                    "already-in-cart-message": "ఇప్పటికే కార్ట్ లో ఉత్పత్తి.",
                    "please-select-product": "దయచేసి ఉత్పత్తిని ఎంచుకోండి",
                    "should-be-one": "పరిమాణం సున్నా ఉండకూడదు",
                    "additional-tax": "అదనపు పన్ను (+)",
                    "additional-discount": "అదనపు డిస్కౌంట్ (-)",
                    "amount-payable": "చెల్లించవలసిన మొత్తం",
                    "fields": {
                        "product_status": "స్థితి",
                        "excerpt": "ఎక్సెర్ప్ట్",
                        "excerpt_placeholder": "ఉత్పత్తి గురించి చిన్న వివరణ"
                    }
                },
                "settings": {
                    "settings": "సెట్టింగులు",
                    "no_records_found": "ఎటువంటి పత్రాలు లభించలేదు",
                    "meta_description": "మెటా వివరణ",
                    "meta_keywords": "మెటా కీవర్డ్లు",
                    "google_analytics": "గూగుల్ విశ్లేషణలు",
                    "mail_host": "మెయిల్ హోస్ట్",
                    "mail_port": "మెయిల్ పోర్ట్",
                    "mail_driver": "మెయిల్ డ్రైవర్",
                    "mail_password": "మెయిల్ పాస్వర్డ్",
                    "mail_username": "మెయిల్ యూజర్ పేరు",
                    "mail_encryption": "ఎన్క్రిప్షన్",
                    "sms_driver": "SMS డ్రైవర్",
                    "twilio_sid": "ట్విలియో సిడ్",
                    "twilio_token": "ట్విలియో టోకెన్",
                    "plivo_auth_id": "ప్లీవో ప్రమాణ ID",
                    "plivo_auth_token": "ప్లీవో ఆథ్ టోకెన్",
                    "stripe_key": "గీత కీ",
                    "stripe_secret": "గీత సీక్రెట్",
                    "stripe_currency": "గీత కరెన్సీ",
                    "site_title": "సైట్ శీర్షిక",
                    "site_logo": "సైట్ లోగో",
                    "site_favicon": "ఇష్టాంశ చిహ్నం",
                    "site_address": "చిరునామా",
                    "site_city": "సైట్ సిటీ",
                    "site_state": "సైట్ రాష్ట్రం",
                    "site_country": "సైట్ దేశం",
                    "site_zipcode": "జిప్ కోడ్",
                    "country_code": "దేశం కోడ్",
                    "site_phone": "సైట్ ఫోన్",
                    "system_timezone": "సమయమండలం",
                    "phone_number_expression": "ఫోన్ సంఖ్య వ్యక్తీకరణ",
                    "currency_code": "కరెన్సీ కోడ్",
                    "contact_email": "ఇమెయిల్ సంప్రదించండి",
                    "rights_reserved": "కోప్ రైట్స్",
                    "date_format": "తేదీ ఫార్మాట్",
                    "date_format_js": "తేదీ నుండి JS",
                    "home_page_caption": "హోమ్ పేజి శీర్షిక",
                    "home_page_tagline": "హోం పేజి ట్యాగ్ లైన్",
                    "theme_color": "థీమ్ రంగు",
                    "email": "ఇమెయిల్",
                    "image": "చిత్రం",
                    "currency": "కరెన్సీ",
                    "account_type": "ఖాతా రకం",
                    "update": "నవీకరణ",
                    "payu_salt": "ఉ ప్పు",
                    "payu_testmode": "టెస్ట్ మోడ్ ఉందా?",
                    "payu_merchant_key": "మర్చంట్ కీ",
                    "payu_working_key": "వర్కింగ్ కీ",
                    "crud_disabled": "CRUD కార్యకలాపాలు డెమోలో నిలిపివేయబడ్డాయి",
                    "not_found": "రికార్డ్ కనుగొనబడలేదు",
                    "products_selection": "ఉత్పత్తులు ఎంపిక",
                    "enable_products_slider": "ఉత్పత్తులు స్లైడర్ ప్రారంభించు?",
                    "slider_type": "సెట్టింగులు టైప్",
                    "message_type": "సందేశ పద్ధతి",
                    "key": "కీ",
                    "tool-tip": "టూల్ చిట్కా",
                    "type": "రకం",
                    "total-options": "మొత్తం ఎంపికలు",
                    "value": "విలువ",
                    "option-text": "ఎంపిక టెక్స్ట్",
                    "save": "సేవ్",
                    "TWILIO_SID": "ట్విలియోన్ SID",
                    "TWILIO_TOKEN EDIT": "ట్విలియో టోకెన్",
                    "moduletype": "మాడ్యూల్ రకం",
                    "default-payment-gateway": "డిఫాల్ట్ చెల్లింపు గేట్వే",
                    "default-sms-gateway": "డిఫాల్ట్ SMS గేట్వే",
                    "Company_Name_On_Invoice": "కంపెనీ పేరు వాయిస్ ఆన్",
                    "Company-Address": "కంపెనీ చిరునామా",
                    "Authorized-Person": "అర్హత కలిగిన వ్యక్తి",
                    "Authorized-Person-Designation": "అధికారం గల వ్యక్తి హోదా",
                    "Authorized-Person-Signature": "అధికార వ్యక్తి సంతకం",
                    "Invoice-Logo": "ఇన్వాయిస్ లోగో",
                    "paypal": "Paypal",
                    "cash": "క్యాష్",
                    "payu": "PayU",
                    "make_default": "డిఫాల్ట్గా చేయండి",
                    "enable-signature-part": "సంతకం భాగం ప్రారంభించు",
                    "description": "వివరణ",
                    "company-name": "కంపెనీ పేరు",
                    "address": "చిరునామా",
                    "phone": "ఫోన్",
                    "status": "స్థితి",
                    "with-out-payment": "చెల్లింపుతో ఆదేశాలను ఆమోదించాలా?",
                    "default-account": "ఆర్డర్ చెల్లింపుల కోసం డిఫాల్ట్ ఖాతా",
                    "stripe_mode": "మోడ్",
                    "hide_stripe_remember_me_box": "నాకు బాక్స్ గుర్తుంచుకో",
                    "require_billing_address": "బిల్లింగ్ చిరునామా అవసరం",
                    "stripe_checkout_popup_image": "పాప్అప్ చిత్రం",
                    "stripe_checkout_popup_title": "పాప్అప్ టైటిల్",
                    "stripe_checkout_popup_description": "వివరణ",
                    "stripe_checkout_button_label": "Checkout బటన్ లేబుల్",
                    "site-title": "సైట్ శీర్షిక",
                    "site-logo": "సైట్ లోగో",
                    "site-mini-name": "సైట్ చిన్న పేరు"
                },
                "invoices": {
                    "messages": {
                        "account": "దయచేసి ఖాతాని ఎంచుకోండి",
                        "date": "దయచేసి తేదీని ఎంచుకోండి",
                        "amount": "దయచేసి మొత్తాన్ని నమోదు చేయండి",
                        "category": "దయచేసి వర్గం ఎంచుకోండి",
                        "paymethod": "దయచేసి చెల్లింపు పద్ధతిని ఎంచుకోండి",
                        "toemail": "దయచేసి ఇమెయిల్ చిరునామాను నమోదు చేయండి",
                        "save-success": "చెల్లింపు విజయవంతంగా జోడించబడింది",
                        "transaction_id": "దయచేసి లావాదేవీ ID ని నమోదు చేయండి"
                    },
                    "transaction_id": "లావాదేవి ఐడి",
                    "qty": "అంశాల",
                    "edit": "ఇన్వాయిస్ను సవరించండి",
                    "make-payment": "చెల్లింపు చేయండి",
                    "email": "ఇమెయిల్",
                    "notification": "వాయిస్ నోటిఫికేషన్",
                    "payment-reminder": "చెల్లింపు రిమైండర్",
                    "payment-received": "చెల్లింపు అందినది",
                    "payment-overdue": "చెల్లింపు మీరిన",
                    "payment-refund": "రీఫండ్ సృష్టించబడింది",
                    "invoice-notification": "వాయిస్ నోటిఫికేషన్",
                    "paid": "చెల్లింపు",
                    "due": "కారణంగా (చెల్లించనిది)",
                    "partial": "పాక్షిక చెల్లింపు",
                    "cancelled": "రద్దు",
                    "unpaid": "అన్ పెయిడ్",
                    "Unpaid": "అన్ పెయిడ్",
                    "upload-documents": "పత్రాలను అప్లోడ్ చేయండి",
                    "invoice_no": "ఇన్వోకీ #",
                    "title-caps": "వాయిస్",
                    "invoice-to": "ఇన్వాయిస్:",
                    "attn": "Attn:",
                    "invoice-date": "ఇన్వాయిస్లు తేదీ:",
                    "due-date": "గడువు తేది :",
                    "invoice-total": "ఇన్వాయిస్లు మొత్తం:",
                    "total-paid": "చెల్లించిన మొత్తం:",
                    "amount-due": "బకాయి మొత్తం :",
                    "invoice_total": "ఇన్వాయిస్ మొత్తం:",
                    "account": "ఖాతా",
                    "date": "తేదీ",
                    "description": "వివరణ",
                    "amount": "మొత్తం",
                    "category": "వర్గం",
                    "payer": "చెల్లింపుదారు",
                    "method": "పైకము చెల్లించు విదానం",
                    "payment-for": "చెల్లింపు",
                    "related-transactions": "సంబంధిత లావాదేవీలు",
                    "history": "ఆపరేషన్స్ చరిత్ర",
                    "app_back_to_invoice": "ఇన్వాయిస్కు తిరిగి వెళ్ళు",
                    "upload-success": "ఫైల్లు విజయవంతంగా అప్లోడ్ చేయబడ్డాయి",
                    "duplicated": "ఇన్వాయిస్ విజయవంతంగా క్లోన్ చేయబడింది",
                    "repeat-on": "పునరావృతం:",
                    "authorized-person": "అర్హత కలిగిన వ్యక్తి",
                    "signature": "సంతకం",
                    "business-owner": "వ్యాపార యజమాని",
                    "reference": "సూచన",
                    "invoice-status": "వాయిస్ స్థితి:",
                    "payment-method": "పైకము చెల్లించు విదానం :",
                    "note": "గమనిక :",
                    "no-payment": "చెల్లింపు ఇంకా",
                    "ontime": "ఒక్కసారి",
                    "stripe": "గీత",
                    "signature-saved": "సంతకం విజయవంతంగా సేవ్ చేయబడింది",
                    "sign-above": "పైన సైన్ ఇన్ చేయండి",
                    "clear-signature": "సంతకంను క్లియర్ చేయండి",
                    "accepted": "ఆమోదించబడిన",
                    "rejected": "తిరస్కరించబడిన"
                },
                "articles": {
                    "related-articles": "ఈ విభాగంలోని వ్యాసాలు",
                    "category": "వర్గం :",
                    "tag": "ట్యాగ్:"
                },
                "expense": {
                    "summary-in": "లో వ్యయ సారాంశం",
                    "total-expense": "మొత్తం ఖర్చు",
                    "total-expense-this-month": "మొత్తం ఖర్చు ఈ నెల",
                    "total-expense-this-week": "మొత్తం వ్యయం ఈ వారం",
                    "total-expense-last-30days": "మొత్తం వ్యయం చివరి 30 రోజులు"
                },
                "incomes": {
                    "receipt": "స్వీకరణపై",
                    "for": "కోసం:",
                    "spent-to": "దీనికి మించి:",
                    "na": "N / A",
                    "date": "తేదీ:",
                    "id": "లావాదేవీ ID: TRN #",
                    "paymethod": "చెల్లింపు పద్ధతి:",
                    "receipt-generated-on": "ఎలక్ట్రానిక్ రసీదు. సృష్టించబడినది:",
                    "show-report": "రిపోర్ట్ చూపించు",
                    "summary-in": "ఇన్కమ్ సారాంశం",
                    "total-income": "మొత్తం రాబడి",
                    "total-income-this-month": "మొత్తం ఆదాయం ఈ నెల",
                    "total-income-this-week": "మొత్తం ఆదాయం ఈ వారం",
                    "total-income-last-30days": "మొత్తం ఆదాయం గత 30 రోజులు",
                    "show-graph": "గ్రాఫ్ చూపించు"
                },
                "transfers": {
                    "account-shouldnot-same": "అదే ఖాతా మధ్య మీరు బదిలీ చేయలేరు",
                    "amount-transfered": "మొత్తం విజయవంతంగా బదిలీ చేయబడింది"
                },
                "accounts": {
                    "sum-of-all-accounts": ". పేజీకి రికార్డుల మొత్తం"
                },
                "purchase_orders": {
                    "title": "కొనుగోలు ఆర్డర్లు",
                    "title-single": "కొనుగోలు ఆర్డర్",
                    "edit": "మార్చు",
                    "convert-to-invoice": "ఇన్వాయిస్కు మార్చండి",
                    "reference": "సూచన",
                    "quote_no": "ఆర్డర్ #",
                    "recipient": "గ్రహీత",
                    "quote-date": "ఆర్డర్ తేదీ:",
                    "due-date": "గడువు తేది :",
                    "total": "మొత్తం:",
                    "note": "గమనిక :",
                    "delivered": "పంపిణీ",
                    "on-hold": "హోల్డ్ ఆన్",
                    "accepted": "ఆమోదించబడిన",
                    "rejected": "తిరస్కరించబడిన",
                    "dead": "డెడ్",
                    "authorized-person": "అర్హత కలిగిన వ్యక్తి",
                    "send-quote": "ఆర్డర్ సృష్టించబడింది",
                    "quote-accepted": "ఆర్డర్ అంగీకరించబడింది",
                    "quote-cancelled": "ఆర్డర్ రద్దు చేయబడింది",
                    "are-you-sure": "మీరు చెప్పేది నిజమా?",
                    "convert-to-invoice-are-you-sure": "కోట్ ఇన్వాయిస్గా మార్చండి. మీరు చెప్పేది నిజమా?",
                    "convertedtoinvoice": "ఆర్డర్ విజయవంతంగా ఇన్వాయిస్కు మార్చబడింది",
                    "payment-inserted": "చెల్లింపు విజయవంతంగా చేర్చబడింది",
                    "status-changed-delivered": "స్థితి డెలివర్ చెయ్యబడింది",
                    "status-changed-on-hold": "స్థితి హోల్డ్కు మార్చబడింది",
                    "quote-created": "ఆర్డర్ సృష్టించబడింది",
                    "quote-created-duplicate": "మరొక కోట్ను నకిలీ చేస్తూ ఆర్డర్ సృష్టించబడింది",
                    "status-changed-accepted": "స్థితి ఆమోదించబడింది",
                    "status-changed-rejected": "స్థితి తిరస్కరించబడింది",
                    "status-changed-dead": "స్థితి చనిపోయిన మారింది",
                    "documents-uploaded": "పత్రాలు అప్లోడ్ చేయబడ్డాయి",
                    "invoice-created-quote": "కోట్ నుండి ఇన్వాయిస్ రూపొందించబడింది",
                    "quote-already-convert": "ఆర్డర్ ఇప్పటికే ఇన్వాయిస్గా మార్చబడింది",
                    "view-now": "ఇప్పుడు చూడండి",
                    "app_back_to_quote": "ఆర్డర్స్కు తిరిగి వెళ్లు",
                    "order_no": "ఆర్డర్ నం.",
                    "history": "ఆర్డర్ చరిత్ర",
                    "related-transactions": "చెల్లింపు చరిత్ర",
                    "date": "తేదీ",
                    "amount": "మొత్తం",
                    "description": "వివరణ",
                    "payment-deleted": "చెల్లింపు విజయవంతంగా తొలగించబడింది",
                    "upload-documents": "పత్రాలను అప్లోడ్ చేయండి",
                    "upload-success": "ఫైల్ను విజయవంతంగా అప్లోడ్ చేయండి",
                    "unpaid": "అన్ పెయిడ్"
                },
                "dashboard": {
                    "phone1": "ఫోన్ 1:"
                },
                "payments": {
                    "success": "మీ చెల్లింపు విజయం.",
                    "order-no": "ఆర్డర్ నం:",
                    "customer": "కస్టమర్:",
                    "amount": "మొత్తం :",
                    "date": "తేదీ:",
                    "status": "స్థితి",
                    "products": "ఉత్పత్తులు"
                },
                "tasks": {
                    "messages": {
                        "task-created": "టాస్క్ విజయవంతంగా సృష్టించబడింది",
                        "task-updated": "విధి విజయవంతంగా నవీకరించబడింది",
                        "task-deleted": "విధి విజయవంతంగా తొలగించబడింది"
                    },
                    "statuswise-tasks": "స్థితి స్థాయి పనులు",
                    "calendar": "పనులు క్యాలెండర్"
                },
                "reports": {
                    "generated-reports": "ఉత్పత్తి చేసిన నివేదికలు",
                    "expense-report": "ఖర్చు నివేదిక",
                    "income-report": "ఆదాయం నివేదిక",
                    "users-report": "వినియోగదారులు నివేదించు",
                    "projects-report": "కాంటాక్ట్స్ ప్రాజెక్ట్స్ నివేదికలు",
                    "tasks-report": "టాస్క్స్ రిపోర్ట్",
                    "assets-report": "ఆస్తుల నివేదిక",
                    "products-report": "ఉత్పత్తులు రిపోర్ట్",
                    "purchase-order-report": "కొనుగోలు ఆర్డర్స్ రిపోర్ట్"
                },
                "app_messages": "సందేశాలు"
            }
        }
    };
});

/***/ }),

/***/ "./resources/client/assets/js/vue-translations.json":
/***/ (function(module, exports) {

module.exports = {"ar.auth":{"suspended":"نحن اسفون!. تم تعليق حسابك. يرجى الاتصال المسؤول","throttle":"محاولات تسجيل الدخول كثيرة جدًا. يرجى المحاولة مرة أخرى بعد: ثوانٍ."},"ar.custom":{"accounts":{"sum-of-all-accounts":". مجموع السجلات في كل صفحة"},"app_messages":"رسائل","articles":{"category":"الفئة :","related-articles":"مقالات في هذا القسم","tag":"العلامة:"},"common":{"active":"نشيط","are-you-sure":"هل أنت واثق؟","are-you-sure-delete":"هل أنت متأكد أنك تريد حذف السجل؟","are-you-sure-duplicate":"هل أنت متأكد من أنك تريد تكرار هذا السجل؟","browser":"المتصفح","cancel":"إلغاء","change-status":"تغيير الوضع","city":"مدينة","close":"قريب","comments":"تعليقات","country":"بلد","description":"وصف","download-pdf":"تحميل PDF","duplicate":"استنساخ","email":"البريد الإلكتروني:","extra":"إضافي","inactive":"غير نشط","ip":"عنوان IP","loading":"جار التحميل...","mark-as":"وضع علامة باسم","next":"التالى","no":"لا","not-allowed":"آسف! غير مسموح لك بالوصول إلى هذه الصفحة","pdf":"PDF","percent":"نسبه مئويه(٪)","phone":"هاتف:","preview":"معاينة","previous":"سابق","print":"طباعة","save":"حفظ","send":"إرسال","sms":"رسالة قصيرة","time":"زمن","update-manage":"تحديث وإدارة","value":"القيمة","view-pdf":"عرض قوات الدفاع الشعبي","yes":"نعم فعلا"},"currencies":{"currency_layer_message":"وقد التطبيق متكامل APIlaylay.com. إنه يوفر تحويل عملة في الوقت الفعلي لفواتيرك. أسعار صرف دقيقة لـ 168 عملة عالمية مع تحديثات بيانات تتراوح بين كل 60 دقيقة إلى 60 ثانية مذهلة يرجى زيارة: رابط للحصول على مفتاح API. يرجى تحديث مفتاح API: settings_url. تأكد من أنك تأخذ أفضل خطة. ملاحظة: الخطة المجانية لن تدعم تحويل العملات.","update_currency_online":"تحديث أسعار صرف العملات على الانترنت؟"},"dashboard":{"phone1":"هاتف 1:"},"email":{"attach-pdf":"نعلق قوات الدفاع الشعبي؟","bcc":"مخفية","bcc-admin":"إرسال نسخة مخفية إلى المسؤول؟","cc":"CC","customer-name":"اسم الزبون","message-body":"نص الرسالة","send":"إرسال","subject":"موضوع","to":"إلى"},"expense":{"summary-in":"ملخص النفقات في","total-expense":"المصاريف الكلية","total-expense-last-30days":"إجمالي المصاريف آخر 30 يومًا","total-expense-this-month":"إجمالي النفقات هذا الشهر","total-expense-this-week":"إجمالي النفقات هذا الأسبوع"},"incomes":{"date":"تاريخ :","for":"إلى عن على :","id":"معرف المعاملة: TRN #","na":"N / A","paymethod":"طريقة الدفع:","receipt":"إيصال","receipt-generated-on":"الإيصال الإلكتروني. تم إنشاؤه على:","show-graph":"عرض الرسم البياني","show-report":"عرض تقرير","spent-to":"أنفق على:","summary-in":"ملخص الدخل في","total-income":"إجمالي الدخل","total-income-last-30days":"إجمالي الدخل آخر 30 يوما","total-income-this-month":"إجمالي الدخل هذا الشهر","total-income-this-week":"إجمالي الدخل هذا الأسبوع"},"invoices":{"Unpaid":"الامم المتحدة مدفوعة","accepted":"وافقت","account":"الحساب","amount":"كمية","amount-due":"المبلغ المستحق:","app_back_to_invoice":"العودة إلى الفاتورة","attn":"عناية:","authorized-person":"الشخص المرخص","business-owner":"صاحب العمل","cancelled":"ألغيت","category":"الفئة","clear-signature":"توقيع واضح","date":"تاريخ","description":"وصف","due":"مستحق (غير مدفوع)","due-date":"تاريخ الاستحقاق :","duplicated":"تم استنساخ الفاتورة بنجاح","edit":"تحرير الفاتورة","email":"البريد الإلكتروني","history":"تاريخ العمليات","invoice-date":"تاريخ الفواتير:","invoice-notification":"إشعار الفاتورة","invoice-status":"حالة الفاتورة :","invoice-to":"فاتورة إلى:","invoice-total":"إجمالي الفواتير:","invoice_no":"Invocie #","invoice_total":"إجمالي الفاتورة:","make-payment":"قم بالدفع","messages":{"account":"يرجى اختيار الحساب","amount":"الرجاء إدخال المبلغ","category":"يرجى اختيار الفئة","date":"يرجى تحديد التاريخ","paymethod":"يرجى اختيار طريقة الدفع","save-success":"تمت إضافة الدفعة بنجاح","toemail":"الرجاء إدخال عنوان البريد الإلكتروني","transaction_id":"الرجاء إدخال معرف المعاملة"},"method":"طريقة الدفع او السداد","no-payment":"لا يوجد دفع حتى الآن","note":"ملحوظة :","notification":"إشعار الفاتورة","ontime":"مره واحده","paid":"دفع","partial":"دفع جزئي","payer":"دافع","payment-for":"الدفع مقابل","payment-method":"طريقة الدفع او السداد :","payment-overdue":"التأخر في الدفع","payment-received":"تلقى الدفع","payment-refund":"برد المتولدة","payment-reminder":"تذكير الدفع","qty":"الكمية","reference":"مرجع","rejected":"مرفوض","related-transactions":"المعاملات المتعلقة","repeat-on":"كرر في:","sign-above":"التوقيع أعلاه","signature":"التوقيع","signature-saved":"تم حفظ التوقيع بنجاح","stripe":"شريط","title-caps":"فاتورة","total-paid":"مجموع المبالغ المدفوعة :","transaction_id":"معرف المعاملة","unpaid":"الامم المتحدة مدفوعة","upload-documents":"تحميل الوثائق","upload-success":"تم تحميل الملفات بنجاح"},"menu":{"balance":"توازن","create-contact":"إنشاء اتصال","create-invoice":"فاتورة جديدة","create-quote":"اقتباس جديد","crm":"CRM","customers":"الزبائن","miscellaneous":"متنوع","project":"مشروع","sales":"مبيعات","stock":"مخزون","support":"الدعم","tickets":"تذاكر"},"messages":{"already-exists":"جهة الاتصال هذه لديها بالفعل وصول للمستخدم","already-exists-email":"عنوان البريد الإلكتروني هذا موجود بالفعل","click-here":"انقر <a href=\":url\">هنا</a> للتحرير","contact-dont-have-email":"جهة الاتصال هذه لا تملك عنوان البريد الإلكتروني. أدخل عنوان البريد الالكتروني","crud_disabled":"تم تعطيل عمليات CRUD في العرض التوضيحي","failed":"فشل:","info":"معلومات:","invalid_record":"سجل غير صالح","mailsent":"تم إرسال البريد الإلكتروني بنجاح","not_allowed":"آسف! غير مسموح لك بالوصول إلى هذه الصفحة","not_found":"آسف! لم يتم العثور على السجل.","not_found_payment":"سجل الدفع غير موجود.","profile_updated":"تم تحديث الملف الشخصي بنجاح","record_deleted":"تم حذف السجل بنجاح","record_restored":"سجل استعادة بنجاح","record_saved":"تم حفظ السجل بنجاح","record_updated":"تم تحديث السجل بنجاح","records_deleted":"تم حذف السجلات بنجاح","smssent":"تم إرسال الرسائل القصيرة بنجاح","somethiswentwrong":"هناك خطأ ما","status-changed":"تم تغيير الحالة بنجاح","success":"نجاح:","time_out":"نفذ الوقت"},"payments":{"amount":"كمية :","customer":"العميل:","date":"تاريخ :","order-no":"رقم الطلب:","products":"منتجات","status":"الحالة","success":"نجاح الدفع الخاص بك."},"products":{"action":"عمل","add_new":"اضف سطر","additional-discount":"خصم إضافي (-)","additional-tax":"ضريبة إضافية (+)","already-in-cart":"المنتج بالفعل في العربة. هل تريد زيادة الكمية؟","already-in-cart-message":"المنتج بالفعل في العربة.","amount":"كمية","amount-payable":"المبلغ المستحق","currency_help":"دفع العملة لعميلك على أساس السوق الحية","default_discount":"معدل الخصم الافتراضي","default_tax":"معدل الضريبة الافتراضي","discount":"خصم","discount_percent":"خصم(٪)","fields":{"excerpt":"مقتطفات","excerpt_placeholder":"وصف قصير عن المنتج","product_status":"الحالة"},"grand_total":"المجموع الكلي","item_name":"اسم العنصر","keep_blank":"احتفظ بها فارغة لإنشاء رقم الفاتورة تلقائيًا","please-select-product":"يرجى اختيار المنتج","please_select":"يرجى اختيار","quantity":"كمية","rate":"معدل","should-be-one":"يجب ألا تكون الكمية صفرا","sub_total":"المجموع الفرعي","tax":"ضريبة","tax_percent":"ضريبة(٪)","total_discount":"إجمالي الخصم (-)","total_tax":"إجمالي الضريبة (+)"},"products-transfer":{"no_products_transfered":"لا توجد منتجات نقل","title":"نقل المنتجات","transfer_from":"نقل من (مستودع)","transfer_to":"نقل إلى (مستودع)","transfered":"تم نقل المنتجات بنجاح"},"purchase_orders":{"accepted":"وافقت","amount":"كمية","app_back_to_quote":"العودة للطلب","are-you-sure":"هل أنت واثق؟","authorized-person":"الشخص المرخص","convert-to-invoice":"تحويل إلى فاتورة","convert-to-invoice-are-you-sure":"تحويل الاقتباس كفاتورة. هل أنت واثق؟","convertedtoinvoice":"تم تحويل الطلب إلى فاتورة بنجاح","date":"تاريخ","dead":"ميت","delivered":"تم التوصيل","description":"وصف","documents-uploaded":"المستندات المحملة","due-date":"تاريخ الاستحقاق :","edit":"تصحيح","history":"تاريخ الطلب","invoice-created-quote":"الفاتورة التي تم إنشاؤها من الاقتباس","note":"ملحوظة :","on-hold":"في الانتظار","order_no":"رقم الطلب","payment-deleted":"تم حذف الدفع بنجاح","payment-inserted":"تم إدخال الدفع بنجاح","quote-accepted":"ترتيب مقبول","quote-already-convert":"تم تحويل الطلب بالفعل إلى فاتورة","quote-cancelled":"تم الغاء الأمر او الطلب","quote-created":"أجل خلق","quote-created-duplicate":"ترتيب تم إنشاؤه عن طريق تكرار اقتباس آخر","quote-date":"تاريخ الطلب :","quote_no":"طلب #","recipient":"مستلم","reference":"مرجع","rejected":"مرفوض","related-transactions":"تاريخ الدفع","send-quote":"أجل خلق","status-changed-accepted":"تم تغيير الوضع إلى مقبول","status-changed-dead":"تغير الوضع إلى الموتى","status-changed-delivered":"تغير الوضع لتسليمها","status-changed-on-hold":"تم تغيير الحالة إلى الانتظار","status-changed-rejected":"تم تغيير الحالة إلى مرفوض","title":"طلبات الشراء","title-single":"أمر شراء","total":"مجموع :","unpaid":"الامم المتحدة مدفوعة","upload-documents":"تحميل الوثائق","upload-success":"تحميل الملف بنجاح","view-now":"عرض الآن"},"reports":{"assets-report":"تقرير الأصول","expense-report":"تقرير المصاريف","generated-reports":"تقارير تم إنشاؤها","income-report":"تقرير الدخل","products-report":"تقرير المنتجات","projects-report":"تقارير المشاريع","purchase-order-report":"تقرير أوامر الشراء","tasks-report":"تقرير المهام","users-report":"تقرير المستخدمين"},"settings":{"Authorized-Person":"الشخص المرخص","Authorized-Person-Designation":"تسمية الشخص المعتمد","Authorized-Person-Signature":"توقيع الشخص المفوض","Company-Address":"عنوان الشركة","Company_Name_On_Invoice":"اسم الشركة على الفاتورة","Invoice-Logo":"فاتورة الشعار","TWILIO_SID":"Twillio SID","TWILIO_TOKEN EDIT":"Twilio رمز","account_type":"نوع الحساب","address":"عنوان","cash":"السيولة النقدية","company-name":"اسم الشركة","contact_email":"تواصل بالبريد الاكتروني","country_code":"الرقم الدولي","crud_disabled":"تم تعطيل عمليات CRUD في العرض التوضيحي","currency":"دقة","currency_code":"رمز العملة","date_format":"صيغة التاريخ","date_format_js":"تاريخ Fromat JS","default-account":"الحساب الافتراضي لمدفوعات الطلب","default-payment-gateway":"بوابة الدفع الافتراضية","default-sms-gateway":"بوابة الرسائل الافتراضية","description":"وصف","email":"البريد الإلكتروني","enable-signature-part":"تمكين جزء التوقيع","enable_products_slider":"تمكين منزلق المنتجات؟","google_analytics":"تحليلات كوكل","hide_stripe_remember_me_box":"إخفاء تذكرني مربع","home_page_caption":"الصفحة الرئيسية التسمية التوضيحية","home_page_tagline":"خط الصفحة الرئيسية","image":"صورة","key":"مفتاح","mail_driver":"سائق البريد","mail_encryption":"التشفير","mail_host":"مضيف البريد","mail_password":"بريد كلمة المرور","mail_port":"ميناء البريد","mail_username":"البريد اسم المستخدم","make_default":"جعل الافتراضي","message_type":"نوع الرسالة","meta_description":"ميتا الوصف","meta_keywords":"كلمات دلالية","moduletype":"نوع الوحدة","no_records_found":"لا توجد سجلات","not_found":"لم يتم العثور على السجل","option-text":"نص الخيار","paypal":"باي بال","payu":"PayU","payu_merchant_key":"مفتاح التاجر","payu_salt":"ملح","payu_testmode":"هو وضع الاختبار؟","payu_working_key":"مفتاح العمل","phone":"هاتف","phone_number_expression":"التعبير عن رقم الهاتف","plivo_auth_id":"معرف المصادقة Plivo","plivo_auth_token":"Plivo Auth رمز","products_selection":"اختيار المنتجات","require_billing_address":"يتطلب عنوان الفواتير","rights_reserved":"حقوق الإنسان","save":"حفظ","settings":"الإعدادات","site-logo":"شعار الموقع","site-mini-name":"اسم الموقع المصغر","site-title":"عنوان الموقع","site_address":"عنوان","site_city":"مدينة الموقع","site_country":"بلد الموقع","site_favicon":"فافيكون","site_logo":"شعار الموقع","site_phone":"هاتف الموقع","site_state":"دولة الموقع","site_title":"عنوان الموقع","site_zipcode":"الرمز البريدي","slider_type":"نوع الإعدادات","sms_driver":"سائق الرسائل القصيرة","status":"الحالة","stripe_checkout_button_label":"تسمية زر الخروج","stripe_checkout_popup_description":"وصف","stripe_checkout_popup_image":"الصورة المنبثقة","stripe_checkout_popup_title":"عنوان منبثق","stripe_currency":"عملة الشريط","stripe_key":"شريط مفتاح","stripe_mode":"الوضع","stripe_secret":"الشريط السري","system_timezone":"وحدة زمنية","theme_color":"لون الموضوع","tool-tip":"تلميح","total-options":"إجمالي الخيارات","twilio_sid":"Twilio سيد","twilio_token":"Twilio رمز","type":"نوع","update":"تحديث","value":"القيمة","with-out-payment":"قبول أوامر مع خارج الدفع؟"},"tasks":{"calendar":"المهام التقويم","messages":{"task-created":"تم إنشاء المهمة بنجاح","task-deleted":"تم حذف المهمة بنجاح","task-updated":"تم تحديث المهمة بنجاح"},"statuswise-tasks":"المهام الحالة"},"transfers":{"account-shouldnot-same":"لا يمكنك نقل بين نفس الحساب","amount-transfered":"تم نقل المبلغ بنجاح"},"translations":{"title":"ترجمة"}},"ar.global":{"accounts":{"fields":{"account-number":"رقم حساب","contact-person":"الشخص الذي يمكن الاتصال به","description":"وصف","initial-balance":"الرصيد الافتتاحي","name":"اسم","phone":"هاتف","url":"URL"},"title":"حسابات"},"app_action":"عمل","app_action_id":"معرف العمل","app_action_model":"نموذج العمل","app_add_key":"إضافة مفتاح","app_add_new":"اضف جديد","app_address":"عنوان","app_administrator_can_create_other_users":"المسؤول (يمكنه إنشاء مستخدمين آخرين)","app_aggregate_function_use":"مجموع وظيفة للاستخدام","app_all":"الكل","app_all_messages":"جميع الرسائل","app_amount":"كمية","app_answer":"إجابة","app_are_you_sure":"هل أنت واثق؟","app_asset":"الأصول","app_assets":"الأصول","app_assets_history":"تاريخ الأصول","app_assets_management":"إدارة الأصول","app_assigned_to":"مخصص ل","app_assigned_user":"معين (مستخدم)","app_attachment":"المرفق","app_axis":"محور","app_back_to_list":"الرجوع للقائمة","app_basic_crm":"إدارة علاقات العملاء الأساسية","app_budget":"ميزانية","app_calendar":"التقويم","app_calendar_sources":"مصادر التقويم","app_campaign":"حملة","app_campaigns":"حملات","app_categories":"الاقسام","app_category":"الفئة","app_category_name":"اسم التصنيف","app_change_notifications_field_1_label":"إرسال إشعار البريد الإلكتروني للمستخدم","app_change_notifications_field_2_label":"عند الدخول على CRUD","app_change_password":"غير كلمة السر","app_chart_type":"نوع الرسم البياني","app_client":"عميل","app_client_management":"إدارة العملاء","app_client_management_settings":"إعدادات إدارة العميل","app_client_status":"حالة العميل","app_client_statuses":"حالات العميل","app_clients":"عملاء","app_code":"الشفرة","app_colvis":"رؤية العمود","app_companies":"الشركات","app_company":"شركة","app_company_name":"اسم الشركة","app_confirm_password":"تأكيد كلمة المرور","app_contact_management":"إدارة الاتصال","app_contacts":"جهات الاتصال","app_content_management":"ادارة المحتوى","app_copy":"نسخ","app_copy_paste_url_bellow":"زر ، انسخ والصق عنوان URL أدناه في متصفح الويب الخاص بك:","app_country":"بلد","app_coupon_management":"إدارة القسيمة","app_coupons":"كوبونات","app_coupons_amount":"كوبونات المبلغ","app_create":"خلق","app_create_new_calendar_source":"إنشاء مصدر تقويم جديد","app_create_new_notification":"إنشاء إشعار جديد","app_create_new_report":"إنشاء تقرير جديد","app_created_at":"أنشئت في","app_crud_date_field":"حقل تاريخ الخام","app_crud_event_field":"مجال تسمية الحدث","app_crud_title":"العنوان الخام","app_csv":"CSV","app_csvImport":"استيراد ملف CSV","app_csv_file_to_import":"ملف CSV للاستيراد","app_currencies":"العملات","app_currency":"دقة","app_current_password":"كلمة المرور الحالي","app_custom_controller_index":"مؤشر تحكم مخصص.","app_customer":"زبون","app_customers":"الزبائن","app_dashboard":"لوحة القيادة","app_dashboard_text":"لقد سجلت الدخول!","app_delete":"حذف","app_delete_selected":"احذف المختار","app_deleted_at":"تم الحذف في","app_description":"وصف","app_deselect_all":"الغاء تحديد الكل","app_discount_amount":"مقدار الخصم","app_discount_percent":"خصم في المئة","app_documents":"مستندات","app_due_date":"تاريخ الاستحقاق","app_edit":"تصحيح","app_edit_calendar_source":"تحرير مصدر التقويم","app_email":"البريد الإلكتروني","app_email_greet":"مرحبا","app_email_line1":"أنت تتلقى هذا البريد الإلكتروني لأننا تلقينا طلب إعادة تعيين كلمة المرور لحسابك.","app_email_line2":"إذا لم تطلب إعادة تعيين كلمة المرور ، فلا يلزم اتخاذ أي إجراء إضافي","app_email_regards":"مع تحياتي","app_end_time":"وقت النهاية","app_entry_date":"موعد الدخول","app_excel":"تفوق","app_excerpt":"مقتطفات","app_expense":"مصروف","app_expense_categories":"فئات النفقات","app_expense_category":"فئة النفقات","app_expense_management":"إدارة حساب","app_expenses":"نفقات","app_faq_management":"إدارة التعليمات","app_featured_image":"صورة مميزة","app_fee_percent":"رسوم في المئة","app_file":"ملف","app_file_contains_header_row":"يحتوي الملف على صف الرأس؟","app_first_name":"الاسم الاول","app_forgot_password":"نسيت رقمك السري؟","app_group_by":"مجموعة من","app_if_you_are_having_trouble":"إذا كنت تواجه مشكلة في النقر فوق","app_import_data":"بيانات الاستيراد","app_imported_rows_to_table":"المستوردة: الصفوف الصفوف إلى: الجدول الجدول","app_inbox":"صندوق الوارد","app_income_categories":"فئات الدخل","app_income_source":"مصدر دخل","app_income_sources":"مصادر الدخل","app_integer_float_placeholder":"يرجى اختيار أحد الحقول الصحيحة / الطافية","app_is_created":"تم إنشاؤه","app_is_deleted":"يتم حذف","app_is_updated":"يتم تحديث","app_label_field":"حقل التسمية","app_last_name":"الكنية","app_list":"قائمة","app_loading":"جار التحميل","app_location":"موقعك","app_locations":"مواقع","app_login":"تسجيل الدخول","app_logout":"الخروج","app_main_currency":"العملة الرئيسية","app_make_default":"جعل الافتراضي","app_message":"رسالة","app_messages":"رسائل","app_monthly_report":"التقرير الشهري","app_name":"اسم","app_new_calendar_source":"إنشاء مصدر تقويم جديد","app_new_message":"رسالة جديدة","app_new_password":"كلمة السر الجديدة","app_no_calendar_sources":"لا توجد مصادر للتقويم حتى الآن.","app_no_entries_in_table":"لا توجد إدخالات في الجدول","app_no_reports_yet":"لا توجد تقارير حتى الآن.","app_not_approved_p":"حسابك لا يزال غير معتمد من قبل المسؤول. يرجى التحلي بالصبر والمحاولة مرة أخرى في وقت لاحق.","app_not_approved_title":"أنت غير معتمد","app_note_text":"ملاحظة النص","app_notes":"ملاحظات","app_notifications":"إخطارات","app_notify_user":"أبلغ المستخدم","app_outbox":"صندوق الحفظ","app_pages":"صفحات","app_parse_csv":"تحليل CSV","app_password":"كلمه السر","app_password_confirm":"تأكيد كلمة السر الجديدة","app_pdf":"PDF","app_permadel":"الحذف بشكل نهائي","app_permissions":"أذونات","app_phone":"هاتف","app_phone1":"الهاتف 1","app_phone2":"الهاتف 2","app_photo":"الصورة (بحد أقصى 8 ميجابايت)","app_photo1":"Photo1","app_photo2":"Photo2","app_photo3":"photo3 من","app_please_select":"يرجى اختيار","app_prefix":"اختصار","app_price":"السعر","app_print":"طباعة","app_product_management":"ادارة المنتج","app_product_name":"اسم المنتج","app_products":"منتجات","app_project":"مشروع","app_project_status":"حالة المشروع","app_project_statuses":"حالات المشروع","app_projects":"مشاريع","app_question":"سؤال","app_questions":"الأسئلة","app_recipient":"مستلم","app_redeem_time":"استرداد الوقت","app_refresh":"تحديث","app_register":"تسجيل","app_registration":"التسجيل","app_remember_me":"تذكرنى","app_remember_token":"تذكر الرمز","app_reply":"الرد","app_reports":"تقارير","app_reports_x_axis_field":"المحور السيني - يرجى اختيار أحد حقول التاريخ / الوقت","app_reports_y_axis_field":"المحور ص - الرجاء اختيار أحد حقول الأرقام","app_reset_password":"إعادة تعيين كلمة المرور","app_reset_password_woops":"<strong>يصيح!</strong> كانت هناك مشاكل في الإدخال:","app_restore":"استعادة","app_role":"وظيفة","app_roles":"الأدوار","app_sample_answer":"عينة إجابة","app_sample_category":"فئة العينة","app_sample_question":"نموذج السؤال","app_save":"حفظ","app_select_all":"اختر الكل","app_select_crud_placeholder":"يرجى اختيار واحدة من CRUDs الخاص بك","app_select_dt_placeholder":"يرجى اختيار واحد من حقول التاريخ / الوقت","app_select_users_placeholder":"يرجى اختيار واحد من المستخدمين لديك","app_send":"إرسال","app_serial_number":"رقم سري","app_settings":"الإعدادات","app_show":"تبين","app_simple_user":"مستخدم بسيط","app_skype":"سكايب","app_slug":"سبيكة","app_start_date":"تاريخ البدء","app_start_time":"وقت البدء","app_status":"الحالة","app_statuses":"الأوضاع","app_stripe_transactions":"المعاملات الشريط","app_subject":"موضوع","app_subscription-billing":"الاشتراكات","app_subscription-payments":"المدفوعات","app_suffix":"Sufix","app_tag":"بطاقة","app_tags":"الكلمات","app_task_management":"ادارة المهام","app_tasks":"مهام","app_team-management":"فرق","app_team-management-singular":"الفريق","app_text":"نص","app_there_were_problems_with_input":"كانت هناك مشاكل مع المدخلات","app_time":"زمن","app_time_entries":"إدخالات الوقت","app_time_management":"إدارة الوقت","app_title":"عنوان","app_transaction_date":"تاريخ الصفقة","app_transaction_type":"نوع المعاملة","app_transaction_types":"أنواع المعاملات","app_transactions":"المعاملات","app_trash":"قمامة، يدمر، يهدم","app_update":"تحديث","app_updated_at":"تم التحديث في","app_upgrade_to_premium":"الترقية إلى بريميوم","app_user":"المستعمل","app_user_actions":"إجراءات المستخدم","app_user_management":"إدارةالمستخدم","app_users":"المستخدمين","app_valid_from":"صالح من تاريخ","app_valid_to":"صالحة ل","app_values":"القيم","app_view":"رأي","app_website":"موقع الكتروني","app_when_crud":"عندما الخام","app_whoops":"يصيح!","app_work_type":"نوع العمل","app_work_types":"أنواع العمل","app_x_axis_field":"مجال المحور السيني (التاريخ / الوقت)","app_x_axis_group_by":"مجموعة المحور س","app_y_axis_field":"مجال المحور ص","app_you_have_no_messages":"ليس لديك رسائل.","articles":{"fields":{"available-for":"متاح لى","category-id":"الاقسام","excerpt":"مقتطفات","featured-image":"صورة مميزة","page-text":"نص","tag-id":"الكلمات","title":"عنوان"},"title":"مقالات"},"assets":{"fields":{"assigned-user":"معين (مستخدم)","attachments":"مرفقات","category":"الفئة","location":"موقعك","notes":"ملاحظات","photo1":"صورة مصغرة","photo2":"صالة عرض","serial-number":"رقم سري","status":"الحالة","title":"عنوان"},"title":"الأصول"},"assets-categories":{"fields":{"title":"عنوان"},"title":"الاقسام"},"assets-history":{"created_at":"زمن","fields":{"asset":"الأصول","assigned-user":"معين (مستخدم)","location":"موقعك","status":"الحالة"},"title":"تاريخ الأصول"},"assets-locations":{"fields":{"title":"عنوان"},"title":"مواقع"},"assets-management":{"title":"إدارة الأصول"},"assets-statuses":{"fields":{"title":"عنوان"},"title":"الأوضاع"},"balance-sheet":{"title":"ورقة التوازن"},"brands":{"fields":{"icon":"أيقونة","status":"الحالة","title":"عنوان"},"title":"العلامات التجارية"},"client-projects":{"fields":{"assigned-to":"مخصص ل","billing-type":"نوع الفواتير","budget":"ميزانية","client":"عميل","demo-url":"عنوان URL التجريبي","description":"وصف","due-date":"تاريخ الاستحقاق","phase":"مرحلة","priority":"أفضلية","start-date":"تاريخ البدء","status":"الحالة","title":"عنوان"},"title":"مشاريع العملاء"},"companies":{"fields":{"address":"عنوان","business-number":"عدد الأعمال","city":"مدينة","company-name":"اسم الشركة","country":"بلد","email":"البريد الإلكتروني","logo":"شعار","phone":"هاتف","state-region":"الدولة / المنطقة","url":"رابط","zip-postal-code":"الرمز البريدي / الرمز البريدي"},"title":"الشركات"},"contact-companies":{"fields":{"address":"عنوان","email":"البريد الإلكتروني","name":"اسم الشركة","website":"موقع الكتروني"},"title":"الشركات"},"contact-documents":{"fields":{"attachments":"مرفقات","contact":"اتصل","description":"وصف","name":"اسم"},"title":"وثائق الاتصال"},"contact-groups":{"fields":{"description":"وصف","name":"اسم"},"title":"مجموعات الاتصال"},"contact-management":{"title":"إدارة الاتصال"},"contact-notes":{"fields":{"attachment":"المرفق","contact":"اتصل","notes":"ملاحظات","title":"عنوان"},"title":"ملاحظات الاتصال"},"contact-types":{"fields":{"description":"وصف","name":"اسم"},"title":"أنواع الاتصال"},"contacts":{"edit-profile":"تعديل الملف الشخصي","fields":{"address":"عنوان","city":"مدينة","company":"شركة","contact-type":"نوع الاتصال","country":"بلد","email":"البريد الإلكتروني","first-name":"الاسم الاول","group":"مجموعة","language":"لغة","last-name":"الكنية","phone1":"الهاتف 1","phone1_code":"رقم الهاتف 1","phone2":"الهاتف 2","phone2_code":"رمز الهاتف 2","skype":"سكايب","state-region":"الدولة / المنطقة","tax-id":"الرقم الضريبي","zip-postal-code":"الرمز البريدي / الرمز البريدي"},"title":"جهات الاتصال","title_customer":"زبون","title_customers":"الزبائن","title_lead":"قيادة","title_leads":"يؤدي","title_profile":"الملف الشخصي","title_supplier":"المورد","title_suppliers":"الموردين"},"content-categories":{"fields":{"slug":"سبيكة","title":"الفئة"},"title":"الاقسام"},"content-management":{"title":"ادارة المحتوى"},"content-pages":{"fields":{"category-id":"الاقسام","created-at":"الوقت خلق","excerpt":"مقتطفات","featured-image":"صورة مميزة","page-text":"نص","tag-id":"الكلمات","title":"عنوان"},"title":"صفحات"},"content-tags":{"fields":{"slug":"سبيكة","title":"بطاقة"},"title":"الكلمات"},"countries":{"fields":{"shortcode":"رمز قصير","title":"عنوان"},"title":"بلدان"},"coupon-campaigns":{"fields":{"coupons-amount":"كوبونات المبلغ","description":"وصف","discount-amount":"مقدار الخصم","discount-percent":"خصم في المئة","title":"عنوان","valid-from":"صالح من تاريخ","valid-to":"صالحة ل"},"title":"حملات"},"coupon-management":{"title":"إدارة القسيمة"},"coupons":{"fields":{"campaign":"حملة","code":"الشفرة","discount-amount":"مقدار الخصم","discount-percent":"خصم في المئة","redeem-time":"استرداد الوقت","valid-from":"صالح من تاريخ","valid-to":"صالحة ل"},"title":"كوبونات"},"currencies":{"fields":{"code":"الشفرة","is_default":"هو الافتراضي؟","name":"اسم","rate":"معدل","status":"الحالة","symbol":"رمز"},"title":"العملات"},"database-backup":{"title":"قاعدة بيانات النسخ الاحتياطي"},"departments":{"fields":{"created-by":"صنع من قبل","description":"وصف","name":"اسم"},"title":"الإدارات"},"discounts":{"fields":{"description":"وصف","discount":"خصم","discount-type":"نوع الخصم","name":"اسم"},"title":"خصومات"},"download-template":"تحميل القالب","email-templates":{"fields":{"body":"الجسم","name":"اسم","subject":"موضوع"},"title":"قوالب البريد الإلكتروني"},"expense":{"fields":{"account":"الحساب","amount":"كمية","description":"وصف","description-file":"ملف الوصف","entry-date":"موعد الدخول","expense-category":"فئة النفقات","payee":"المستفيد","payment-method":"طريقة الدفع او السداد","ref-no":"الرقم المرجعي"},"title":"نفقات"},"expense-category":{"fields":{"name":"اسم"},"title":"فئات النفقات"},"expense-management":{"title":"محاسبة"},"expense-types":{"title":"أنواع النفقات"},"faq-categories":{"fields":{"title":"الفئة"},"title":"الاقسام"},"faq-management":{"faq":"أسئلة وأجوبة","title":"إدارة التعليمات"},"faq-questions":{"fields":{"answer-text":"إجابة","category":"الفئة","question-text":"سؤال"},"title":"الأسئلة"},"general-settings":{"title":"الاعدادات العامة"},"global-settings":{"title":"الاعدادات العامة"},"global_title":"ديجي المحاسبة ، الفواتير وفواتير CRM","income":{"fields":{"account":"الحساب","amount":"كمية","description":"وصف","description-file":"ملف الوصف","entry-date":"موعد الدخول","income-category":"فئة الدخل","pay-method":"طريقة الدفع","payer":"دافع","ref-no":"الرقم المرجعي"},"title":"الإيرادات"},"income-category":{"fields":{"name":"اسم"},"title":"فئات الدخل"},"info":"معلومات","internal-notifications":{"fields":{"link":"حلقة الوصل","text":"نص","users":"المستخدمين"},"title":"إخطارات"},"invoices":{"fields":{"address":"عنوان","amount":"كمية","currency":"دقة","customer":"زبون","discount":"خصم","discount_format":"تنسيق الخصم","invoice-date":"تاريخ الفاتورة","invoice-due-date":"تاريخ استحقاق الفاتورة","invoice-no":"فاتورة #","invoice-notes":"ملاحظات الفاتورة","invoice-prefix":"بادئة الفاتورة","reference":"مرجع","show-quantity-as":"تظهر الكمية كما","status":"الحالة","tax":"ضريبة","tax_format":"تنسيق الضريبة","title":"عنوان"},"title":"الفواتير"},"knowledgebase":{"title":"قاعدة المعرفة"},"languages":{"fields":{"code":"الشفرة","is-rtl":"هل rtl","language":"لغة"},"title":"اللغات"},"manage-projects":{"title":"إدارة المشاريع"},"master-settings":{"fields":{"description":"وصف","key":"مفتاح","module":"وحدة"},"title":"إعدادات سيد"},"measurement-units":{"fields":{"description":"وصف","status":"الحالة","title":"عنوان"},"title":"وحدات القياس"},"monthly-report":{"title":"التقرير الشهري"},"navigation-menues":{"title":"قوائم التنقل"},"operations_disabled":"تم تعطيل العملية في الوضع التجريبي","payment-gateways":{"fields":{"description":"وصف","logo":"شعار","name":"اسم"},"title":"بوابات الدفع"},"payments":{"cancelled":"لقد ألغيت دفعتك","failed":"عملية الدفع فشلت","title":"المدفوعات"},"permissions":{"fields":{"title":"عنوان"},"title":"أذونات"},"product-categories":{"fields":{"description":"وصف","name":"اسم التصنيف","photo":"الصورة (بحد أقصى 8 ميجابايت)"},"title":"الاقسام"},"product-management":{"title":"ادارة المنتج"},"product-tags":{"fields":{"name":"اسم"},"title":"الكلمات"},"products":{"fields":{"actual-price":"السعر الفعلي","alert-quantity":"تنبيه الكمية","brand":"علامة تجارية","category":"الفئة","description":"وصف","excerpt":"مقتطفات","hsn-sac-code":"رمز HSN / SAC","image-gallery":"معرض الصور","name":"اسم المنتج","other-files":"ملفات اخرى","product-code":"كود المنتج","product-size":"حجم المنتج","product-weight":"وزن المنتج","sale-price":"سعر البيع","stock-quantity":"كمية المخزون","tag":"بطاقة","thumbnail":"صورة مصغرة","ware-house":"وير المنزل"},"gallery-file-types":"أنواع الملفات المقبولة: png، jpg، jpeg، gif","title":"منتجات"},"products-return":{"fields":{"address":"عنوان","currency":"دقة","customer":"زبون","discount":"خصم","invoice-no":"فاتورة #","invoice-prefix":"بادئة الفاتورة","notes":"ملاحظات","order-date":"تاريخ الطلب","order-due-date":"تاريخ استحقاق الطلب","reference":"مرجع","show-quantity-as":"تظهر الكمية كما","status":"الحالة","subject":"موضوع","tax":"ضريبة","update-stock":"تحديث الأسهم","ware-house":"وير المنزل"},"title":"عودة المنتجات"},"products-transfer":{"title":"نقل المنتجات"},"project-billing-types":{"fields":{"description":"وصف","title":"عنوان"},"title":"أنواع الفواتير المشروع"},"project-statuses":{"fields":{"description":"وصف","name":"اسم"},"title":"حالات المشروع"},"projects":{"title":"مشاريع"},"purchase-orders":{"fields":{"address":"عنوان","amount":"كمية","currency":"دقة","customer":"المورد","discount":"خصم","invoice-no":"فاتورة #","invoice-prefix":"بادئة الفاتورة","notes":"ملاحظات","order-date":"تم إصداره في","order-due-date":"تاريخ استحقاق الطلب","reference":"مرجع","show-quantity-as":"تظهر الكمية كما","status":"الحالة","subject":"موضوع","tax":"ضريبة","update-stock":"تحديث الأسهم","warehouse":"مستودع"},"title":"طلبات الشراء"},"quotes":{"fields":{"address":"عنوان","amount":"كمية","currency":"دقة","customer":"زبون","discount":"خصم","proposal-text":"نص الاقتراح","quote-date":"تاريخ الاقتباس","quote-expiry-date":"تاريخ انتهاء الصلاحية","quote-no":"اقتباس لا","quote-prefix":"بادئة اقتباس","reference":"مرجع","show-quantity-as":"تظهر الكمية كما","status":"الحالة","tax":"ضريبة","title":"عنوان"},"title":"يقتبس"},"recurring-invoices":{"fields":{"address":"عنوان","amount":"كمية","currency":"دقة","customer":"زبون","discount":"خصم","invoice-date":"تاريخ الفاتورة","invoice-due-date":"تاريخ استحقاق الفاتورة","invoice-no":"فاتورة #","invoice-notes":"ملاحظات الفاتورة","invoice-prefix":"بادئة الفاتورة","paymentstatus":"حالة السداد","products":"منتجات","recurring-period":"فترة متكررة","reference":"مرجع","show-quantity-as":"تظهر الكمية كما","status":"الحالة","tax":"ضريبة","title":"عنوان"},"title":"الفواتير المتكررة"},"recurring-periods":{"fields":{"description":"وصف","title":"عنوان","value":"القيمة"},"title":"فترات متكررة"},"roles":{"fields":{"permission":"أذونات","title":"عنوان"},"title":"الأدوار"},"sales":{"title":"مبيعات"},"sales-taxes":{"title":"ضرائب المبيعات"},"support":{"fields":{"assigned-to":"مخصص ل","attachments":"مرفقات","created-by":"صنع من قبل","department":" قسم، أقسام","description":"وصف","email":"البريد الإلكتروني","name":"اسم","priority":"أفضلية","subject":"موضوع"},"title":"الدعم"},"task-calendar":{"status-wise":"الوضع الحكيم","title":"التقويم"},"task-management":{"title":"ادارة المهام"},"task-statuses":{"fields":{"color":"اللون","name":"اسم"},"panel-danger":"لوحة الخطر","panel-default":"اللوحة الافتراضية","panel-info":"لوحة المعلومات","panel-primary":"لوحة الأولية","panel-success":"لوحة النجاح","panel-warning":"لوحة تحذير","title":"الأوضاع"},"task-tags":{"fields":{"name":"اسم"},"title":"الكلمات"},"tasks":{"fields":{"attachment":"المرفق","description":"وصف","due-date":"تاريخ الاستحقاق","name":"اسم","start-date":"تاريخ البدء","status":"الحالة","tag":"الكلمات","user":"مخصص ل"},"task-status-updated":"تم تحديث حالة المهمة بنجاح","title":"مهام"},"taxes":{"fields":{"description":"وصف","name":"اسم","rate":"معدل","rate-type":"نوع معدل"},"title":"الضرائب"},"time-entries":{"fields":{"description":"وصف","end-date":"تاريخ الانتهاء","project":"مشروع","start-date":"تاريخ البدء"},"title":"إدخالات الوقت"},"transfers":{"fields":{"amount":"كمية","date":"تاريخ","description":"وصف","from":"من عند","payment-method":"طريقة الدفع او السداد","ref-no":"الرقم المرجعي","to":"إلى"},"title":"نقل"},"user-actions":{"created_at":"زمن","fields":{"action":"عمل","action-id":"معرف العمل","action-model":"نموذج العمل","user":"المستعمل"},"title":"إجراءات المستخدم"},"user-management":{"title":"إدارةالمستخدم"},"users":{"activate":"تفعيل","active":"نشيط","fields":{"contact-reference":"مرجع الاتصال","department":" قسم، أقسام","email":"البريد الإلكتروني","name":"اسم","password":"كلمه السر","remember-token":"تذكر الرمز","role":"وظيفة","status":"الحالة"},"suspend":"تعليق","title":"المستخدمين"},"warehouses":{"fields":{"address":"عنوان","description":"وصف","name":"اسم"},"title":"المستودعات"}},"ar.pagination":{"next":"التالى &quot;","previous":"«السابق"},"ar.passwords":{"password":"يجب أن تتكون كلمات المرور من ستة أحرف على الأقل وأن تطابق التأكيد.","reset":"تم إعادة تعيين كلمة المرور الخاصة بك!","sent":"لقد أرسلنا رابط إعادة تعيين كلمة المرور عبر البريد الإلكتروني!","token":"الرمز المميز لإعادة تعيين كلمة المرور غير صالح.","user":"لا يمكننا العثور على مستخدم يحمل عنوان البريد الإلكتروني هذا."},"ar.sitethemes::global":{"site-theme":{"make-default":"موضوع جديد مفعل"},"site-themes":{"fields":{"description":"وصف","is-active":"نشط","make-default":"موضوع تعيين كافتراضي","settings-data":"بيانات الإعدادات","slug":"سبيكة","theme-color":"لون الموضوع","theme-title-key":"مفتاح عنوان السمة","title":"عنوان"},"make-default":"موضوع جديد مفعل","no":"لا","not-allowed-default":"غير مسموح بتحرير المظهر الافتراضي. يمكنك تعديل في إعدادات الموقع.","not-valid-theme":"غير صالح لهم الملف","not-valid-zip":"ملف zip غير صالح. يرجى تحميل ملف مضغوط صالح","theme-already-exists":"السمة موجودة بالفعل","theme-install-success":"تم تثبيت السمة بنجاح","title":"سمات الموقع","yes":"نعم فعلا"}},"ar.validation":{"accepted":"يجب قبول السمة:","active_url":"السمة: ليست عنوان URL صالحًا.","after":"يجب أن تكون السمة: تاريخ بعد: تاريخ.","after_or_equal":"يجب أن تكون السمة: تاريخ بعد أو يساوي: تاريخ.","alpha":"قد تحتوي السمة على أحرف فقط.","alpha_dash":"قد تحتوي السمة: على أحرف وأرقام وشرطات وشرطات سفلية","alpha_num":"قد تحتوي السمة على أحرف وأرقام فقط.","array":"يجب أن تكون السمة صفيف.","before":"يجب أن تكون السمة: تاريخ قبل: تاريخ.","before_or_equal":"يجب أن تكون السمة: تاريخ قبل أو تساوي: تاريخ.","between":{"array":"يجب أن تحتوي السمة: على: العناصر min و: max.","file":"يجب أن تكون السمة: بين: min و: max كيلو بايت.","numeric":"يجب أن تكون السمة بين: min و: max.","string":"يجب أن تكون السمة: بين: min و: الحد الأقصى لعدد الأحرف."},"boolean":"يجب أن يكون حقل السمة صواب أو خطأ.","confirmed":"تأكيد السمة غير متطابق.","custom":{"attribute-name":{"rule-name":"رسالة مخصصة"}},"date":"السمة: ليست تاريخًا صالحًا.","date_format":"السمة: لا تتطابق مع التنسيق: التنسيق.","different":": السمة و: يجب أن تكون مختلفة.","digits":"يجب أن تكون السمة: digits digits.","digits_between":"يجب أن تكون السمة بين: min و: أقصى عدد.","dimensions":"تحتوي السمة: على أبعاد صور غير صالحة.","distinct":"يحتوي حقل السمة على قيمة مكررة.","email":"يجب أن تكون السمة: عنوان بريد إلكتروني صالحًا.","exists":"السمة المحددة: غير صالحة.","file":"يجب أن تكون السمة ملف.","filled":"يجب أن يحتوي حقل السمة على قيمة.","gt":{"array":"يجب أن تحتوي السمة: على أكثر من: عناصر القيمة.","file":"يجب أن تكون السمة: أكبر من: قيمة كيلو بايت.","numeric":"يجب أن تكون السمة: أكبر من: قيمة.","string":"يجب أن تكون السمة: أكبر من: أحرف القيمة."},"gte":{"array":"يجب أن تحتوي السمة: على عناصر قيمة أو أكثر.","file":"يجب أن تكون السمة: أكبر من أو تساوي: قيمة الكيلوبايت.","numeric":"يجب أن تكون السمة: أكبر من أو تساوي: value.","string":"يجب أن تكون السمة: أكبر من أو تساوي: أحرف القيمة."},"image":"يجب أن تكون السمة صورة.","in":"السمة المحددة: غير صالحة.","in_array":": حقل السمة غير موجود في: الآخر.","integer":"يجب أن تكون السمة عددًا صحيحًا.","ip":"يجب أن تكون السمة: عنوان IP صالحًا.","ipv4":"يجب أن تكون السمة: عنوان IPv4 صالحًا.","ipv6":"يجب أن تكون السمة: عنوان IPv6 صالحًا.","json":"يجب أن تكون السمة: سلسلة JSON صالحة.","lt":{"array":"يجب أن تحتوي السمة: على أقل من: عناصر القيمة.","file":"يجب أن تكون السمة: أقل من: قيمة كيلو بايت.","numeric":"يجب أن تكون السمة: أقل من: قيمة.","string":"يجب أن تكون السمة: أقل من: قيمة الأحرف."},"lte":{"array":"يجب ألا تحتوي السمة: على أكثر من: عناصر القيمة.","file":"يجب أن تكون السمة: أقل من أو تساوي: قيمة الكيلوبايت.","numeric":"يجب أن تكون السمة: أقل من أو تساوي: value.","string":"يجب أن تكون السمة: أقل من أو تساوي: أحرف القيمة."},"max":{"array":"قد لا تحتوي السمة: أكثر من: العناصر القصوى.","file":"قد لا تكون السمة: أكبر من: كيلو بايت كحد أقصى.","numeric":"قد لا تكون السمة: أكبر من:","string":"قد لا تكون السمة: أكبر من: الحد الأقصى لعدد الأحرف."},"mimes":"يجب أن تكون السمة: ملف نوع:: قيم.","mimetypes":"يجب أن تكون السمة: ملف نوع:: قيم.","min":{"array":"يجب أن تحتوي السمة: على الأقل: عناصر دقيقة.","file":"يجب أن تكون السمة: الأقل كيلوبايت.","numeric":"يجب أن تكون السمة: min على الأقل.","string":"يجب أن تكون السمة: الأقل من الأحرف."},"not_in":"السمة المحددة: غير صالحة.","not_regex":"تنسيق السمة: غير صالح.","numeric":"يجب أن تكون السمة رقمًا.","present":"يجب أن يكون حقل السمة موجودًا.","regex":"تنسيق السمة: غير صالح.","required":": حقل السمة مطلوب.","required_if":"حقل السمة: مطلوب عند: الآخر هو: قيمة.","required_unless":"حقل السمة: مطلوب إلا إذا كان: الآخر في: القيم.","required_with":"حقل السمة: مطلوب عند: القيم موجودة.","required_with_all":"حقل السمة: مطلوب عند: القيم موجودة.","required_without":"حقل السمة: مطلوب عندما تكون القيم غير موجودة.","required_without_all":"حقل السمة: مطلوب عند عدم وجود: من القيم.","same":"السمة: و الأخرى يجب أن تتطابق.","size":{"array":"يجب أن تحتوي السمة: عناصر الحجم.","file":"يجب أن تكون السمة: size كيلوبايت.","numeric":"يجب أن تكون السمة: size.","string":"يجب أن تكون السمة: size size."},"string":"يجب أن تكون السمة سلسلة.","timezone":"يجب أن تكون السمة منطقة صالحة.","unique":"السمة: تم اتخاذها بالفعل.","uploaded":"فشلت السمة: في التحميل.","url":"تنسيق السمة: غير صالح."},"en._json":{"A fresh verification link has been sent to your email address":{"":"A fresh verification link has been sent to your email address."},"Before proceeding, please check your email for a verification link":{"":"Before proceeding, please check your email for a verification link."},"Confirm Password":"Confirm Password","E-Mail Address":"E-Mail Address","If you did not receive the email":"If you did not receive the email","Name":"Name","Password":"Password","Register":"Register","Verify Your Email Address":"Verify Your Email Address","click here to request another":"click here to request another"},"en.auth":{"suspended":"We are sorry!. Your account has been suspended. Please contact administrator","throttle":"Too many login attempts. Please try again in :seconds seconds."},"en.custom":{"accounts":{"sum-of-all-accounts":". Sum of records per page "},"app_login_msg":"One account. Access all services.","app_messages":"Messages","app_sign_in":"Sign In","articles":{"category":"Category : ","related-articles":"Articles in this section","tag":"Tag : "},"common":{"active":"Active","are-you-sure":"Are you sure?","are-you-sure-delete":"Are you sure you want to delete the record?","are-you-sure-duplicate":"Are you sure you want to duplicate this record?","browser":"Browser","cancel":"Cancel","change-status":"Change Status","city":"City","close":"Close","comments":"Comments","country":"Country","description":"Description","download-pdf":"Download PDF","duplicate":"Clone","email":"Email:","extra":"Extra","inactive":"In-Active","ip":"IP Address","loading":"Loading...","mark-as":"Mark As","next":"Next","no":"No","not-allowed":"Sorry! You are not allowed to access this page","pdf":"PDF","percent":"Percent(%)","phone":"Phone:","preview":"Preview","previous":"Previous","print":"Print","save":"Save","send":"Send","sms":"SMS","time":"Time","update-manage":"Update & Manage","value":"Value","view-pdf":"View PDF","yes":"Yes"},"currencies":{"currency_layer_message":"Application has integrated currencylayer.com API. It offers a real-time currency conversion for your invoices. Accurate Exchange Rates for 168 World Currencies with data updates ranging from every 60 minutes down to stunning 60 seconds. Please visit :url to get API key. Please update API key :settings_url. Make sure you are taking best plan. Note: Free plan will not support currency switching.","update_currency_online":"Update currency exchange rates online?"},"dashboard":{"phone1":"Phone1 : "},"email":{"attach-pdf":"Attach PDF?","bcc":"Bcc","bcc-admin":"Send Bcc to Admin?","cc":"CC","customer-name":"Customer Name","message-body":"Message Body","send":"Send","subject":"Subject","to":"To"},"email-required-user":"Email address required to create user","expense":{"summary-in":"Expense summary in ","total-expense":"Total Expense","total-expense-last-30days":"Total Expense Last 30 days","total-expense-this-month":"Total Expense This Month","total-expense-this-week":"Total Expense This Week"},"incomes":{"date":"Date : ","for":"For : ","id":"Transaction ID : TRN#","na":"N/A","paymethod":"Pay Method : ","receipt":"Receipt","receipt-generated-on":"Electronic Receipt. Generated On: ","show-graph":"Show Graph","show-report":"Show Report","spent-to":"Spent to : ","summary-in":"Income summary in ","total-income":"Total Income","total-income-last-30days":"Total Income Last 30 days","total-income-this-month":"Total Income This Month","total-income-this-week":"Total Income This Week"},"invoices":{"Unpaid":"Un-Paid","accepted":"Accepted","account":"Account","amount":"Amount","amount-due":"Amount Due : ","app_back_to_invoice":"Back to invoice","attn":"ATTN:","authorized-person":"Authorized person","business-owner":"Business Owner","cancelled":"Cancelled","category":"Category","clear-signature":"Clear signature","date":"Date","description":"Description","due":"Due (Unpaid)","due-date":"Due Date : ","duplicated":"Invoice cloned successfully","edit":"Edit Invoice","email":"Email","history":"Operations history","invoice-date":"Invoice Date : ","invoice-notification":"Invoice Notification","invoice-status":"Invoice Status : ","invoice-to":"Invoice To:","invoice-total":"Invoice Total :","invoice_no":"Invocie #","invoice_total":"Invoice Total:","make-payment":"Make Payment","messages":{"account":"Please select account","amount":"Please enter amount","category":"Please select category","date":"Please select date","paymethod":"Please select payment method","save-success":"Payment added successfully","toemail":"Please enter email address","transaction_id":"Please enter transaction ID"},"method":"Payment Method","no-payment":"No Payment Yet","note":"Note : ","notification":"Invoice Notification","ontime":"Onetime","paid":"Paid","partial":"Partial Paid","payer":"Payer","payment-for":"Payment for","payment-method":"Payment Method : ","payment-overdue":"Payment Overdue","payment-received":"Payment Received","payment-refund":"Refund Generated","payment-reminder":"Payment Reminder","qty":"Qty","reference":"Reference","rejected":"Rejected","related-transactions":"Related Transactions","repeat-on":"Repeat on : ","sign-above":"Sign above","signature":"signature","signature-saved":"Signature saved successfully","stripe":"Stripe","title-caps":"INVOICE","total-paid":"Total Paid : ","transaction_id":"Transaction ID","unpaid":"Un-Paid","upload-documents":"Upload documents","upload-success":"Files uploaded successfully"},"menu":{"balance":"Balance","create-contact":"Create contact","create-invoice":"New invoice","create-quote":"New quote","crm":"CRM","customers":"Customers","miscellaneous":"Miscellaneous","project":"Project","sales":"Sales","stock":"Stock","support":"Support","tickets":"Tickets"},"messages":{"already-exists":"This contact already has user access","already-exists-email":"This email address already exists","click-here":"Click <a href=\":url\">here</a> to edit","contact-dont-have-email":"This contact dont have email address. Enter email address","crud_disabled":"CRUD operations disabled on demo","failed":"Failed:","info":"Info:","invalid_record":"Invalid record","mailsent":"Email sent successfully","not_allowed":"Sorry! You are not allowed to access this page","not_found":"Sorry! record not found.","not_found_payment":"Payment record not found.","profile_updated":"Profile updated successfully","record_deleted":"Record deleted successfully","record_restored":"Record restored successfully","record_saved":"Record saved successfully","record_updated":"Record updated successfully","records_deleted":"Records deleted successfully","smssent":"SMS sent successfully","somethiswentwrong":"Something went wrong","status-changed":"Status changed successfully","success":"Success:","time_out":"Time out"},"payments":{"amount":"Amount : ","customer":"Customer : ","date":"Date : ","order-no":"Order No. : ","products":"Products","status":"Status","success":"Your payment success."},"products":{"action":"Action","add_new":"Add Row","additional-discount":"Additional Discount (-)","additional-tax":"Additional Tax (+)","already-in-cart":"Product already in cart. Do you want to increase quantity?","already-in-cart-message":"Product already in cart.","amount":"Amount","amount-payable":"Amount Payable","currency_help":"Payment Currency for your client based on live market","default_discount":"Default Discount Rate","default_tax":"Default TAX Rate","discount":"Discount","discount_percent":"Discount(%)","fields":{"excerpt":"Excerpt","excerpt_placeholder":"Short description about product","product_status":"Status"},"grand_total":"Grand Total","item_name":"Item name","keep_blank":"Keep it Blank to Generate Invoice Number Automatically","please-select-product":"Please select product","please_select":"Please select","quantity":"Quantity","rate":"Rate","should-be-one":"Quantity should not be zero","sub_total":"Sub Total","tax":"Tax","tax_percent":"Tax(%)","total_discount":"Total Discount (-)","total_tax":"Total Tax (+)"},"products-transfer":{"no_products_transfered":"No Products Transfered","title":"Products Transfer","transfer_from":"Transfer From (Warehouse)","transfer_to":"Transfer To (Warehouse)","transfered":"Products transfered successfully"},"purchase_orders":{"Unpaid":"Un-Paid","accepted":"Accepted","amount":"Amount","app_back_to_quote":"Back to Orders","are-you-sure":"Are you sure?","authorized-person":"Authorized person","cancelled":"Cancelled","convert-to-invoice":"Convert to invoice","convert-to-invoice-are-you-sure":"Convert the quote as invoice. Are you sure?","convertedtoinvoice":"Order converted to invoice successfully","date":"Date","dead":"Dead","delivered":"Delivered","description":"Description","documents-uploaded":"Documents uploaded","due":"Due (Unpaid)","due-date":"Due Date : ","edit":"Edit","history":"Order history","invoice-created-quote":"Invoice Created from quote","note":"Note : ","on-hold":"On Hold","order_no":"Order No.","paid":"Paid","partial":"Partial Paid","payment-deleted":"Payment deleted successfully","payment-inserted":"Payment inserted successfully","quote-accepted":"Order Accepted","quote-already-convert":"Order already converted to Invoice","quote-cancelled":"Order Cancelled","quote-created":"Order Created","quote-created-duplicate":"Order Created by Duplicating another quote","quote-date":"Order Date : ","quote_no":"Order #","recipient":"Recipient","reference":"Reference","rejected":"Rejected","related-transactions":"Payment history","send-quote":"Order Created","status-changed-accepted":"Status changed to accepted","status-changed-dead":"Status changed to dead","status-changed-delivered":"Status changed to delivered","status-changed-on-hold":"Status changed to on-hold","status-changed-rejected":"Status changed to rejected","title":"Purchase Orders","title-single":"Purchase Order","total":"Total : ","unpaid":"Un-Paid","upload-documents":"Upload documents","upload-success":"Upload file successfully","view-now":"View Now"},"reports":{"assets-report":"Assets Report","expense-report":"Expense Report","generated-reports":"Generated Reports","income-report":"Income Report","products-report":"Products Report","projects-report":"Contacts Projects Reports","purchase-order-report":"Purchase Orders Report","tasks-report":"Tasks Report","users-report":"Users Report"},"settings":{"Authorized-Person":"Authorized Person","Authorized-Person-Designation":"Authorized Person Designation","Authorized-Person-Signature":"Authorized Person Signature","Company-Address":"Company Address","Company_Name_On_Invoice":"Company Name On Invoice","Invoice-Logo":"Invoice Logo","TWILIO_SID":"Twillio SID","TWILIO_TOKEN EDIT":"Twilio Token","account_type":"Account Type","address":"Address","cash":"Cash","company-name":"Company name","contact_email":"Contact Email","country_code":"Country Code","crud_disabled":"CRUD operations disabled on demo","currency":"Currency","currency_code":"Currency Code","date_format":"Date Format","date_format_js":"Date Fromat JS","default-account":"Default account for order payments","default-payment-gateway":"Default Payment Gateway","default-sms-gateway":"Default SMS Gateway","description":"Description","email":"Email","enable-signature-part":"Enable signature part","enable_products_slider":"Enable Products Slider?","google_analytics":"Google Analytics","hide_stripe_remember_me_box":"Hide remember me box","home_page_caption":"Home Page Caption","home_page_tagline":"Home Page Tag Line","image":"Image","key":"Key","mail_driver":"Mail Driver","mail_encryption":"Encryption","mail_host":"Mail Host","mail_password":"Mail Password","mail_port":"Mail Port","mail_username":"Mail User name","make_default":"Make Default","message_type":"Message Type","meta_description":"Meta Description","meta_keywords":"Meta Keywords","moduletype":"Module Type","no_records_found":"No Records Found","not_found":"Record not found","option-text":"Option Text","paypal":"Paypal","payu":"PayU","payu_merchant_key":"Merchant Key","payu_salt":"Salt","payu_testmode":"Is Test Mode?","payu_working_key":"Working Key","phone":"Phone","phone_number_expression":"Phone Number Expression","plivo_auth_id":"Plivo Auth ID","plivo_auth_token":"Plivo Auth Token","products_selection":"Products Selection","require_billing_address":"Require billing address","rights_reserved":"Cope Rights","save":"Save","settings":"Settings","site-logo":"Site logo","site-mini-name":"Site mini name","site-title":"Site title","site_address":"Address","site_city":"Site City","site_country":"Site Country","site_favicon":"Favicon","site_logo":"Site Logo","site_phone":"Site Phone","site_state":"Site State","site_title":"Site Title","site_zipcode":"Zip Code","slider_type":"Settings Type","sms_driver":"SMS Driver","status":"Status","stripe_checkout_button_label":"Checkout button label","stripe_checkout_popup_description":"Description","stripe_checkout_popup_image":"Popup image","stripe_checkout_popup_title":"Popup title","stripe_currency":"Stripe Currency","stripe_key":"Stripe Key","stripe_mode":"Mode","stripe_secret":"Stripe Secret","system_timezone":"Time Zone","theme_color":"Theme Color","tool-tip":"Tool Tip","total-options":"Total Options","twilio_sid":"Twilio sid","twilio_token":"Twilio Token","type":"Type","update":"Update","value":"Value","with-out-payment":"Accept orders with out payment?"},"tasks":{"calendar":"Tasks Calendar","messages":{"task-created":"Task created successfully","task-deleted":"Task deleted successfully","task-updated":"Task updated successfully"},"statuswise-tasks":"Statuswise tasks"},"transfers":{"account-shouldnot-same":"You can not Transfer between same account","amount-transfered":"Amount transfered successfully"},"translations":{"title":"Translations"},"user-exists":"User already exists"},"en.global":{"accounts":{"fields":{"account-number":"Account number","contact-person":"Contact person","description":"Description","initial-balance":"Initial balance","name":"Name","phone":"Phone","url":"URL"},"title":"Accounts"},"app_action":"Action","app_action_id":"Action id","app_action_model":"Action model","app_add_key":"Add Key","app_add_new":"Add new","app_address":"Address","app_administrator_can_create_other_users":"Administrator (can create other users)","app_aggregate_function_use":"Aggregate function to use","app_all":"All","app_all_messages":"All Messages","app_amount":"Amount","app_answer":"Answer","app_are_you_sure":"Are you sure?","app_asset":"Asset","app_assets":"Assets","app_assets_history":"Assets history","app_assets_management":"Assets management","app_assigned_to":"Assigned to","app_assigned_user":"Assigned (user)","app_attachment":"Attachment","app_axis":"Axis","app_back_to_list":"Back to list","app_basic_crm":"Basic CRM","app_budget":"Budget","app_calendar":"Calendar","app_calendar_sources":"Calendar sources","app_campaign":"Campaign","app_campaigns":"Campaigns","app_categories":"Categories","app_category":"Category","app_category_name":"Category name","app_change_notifications_field_1_label":"Send email notification to User","app_change_notifications_field_2_label":"When Entry on CRUD","app_change_password":"Change password","app_chart_type":"Chart type","app_client":"Client","app_client_management":"Client management","app_client_management_settings":"Client management settings","app_client_status":"Client status","app_client_statuses":"Client statuses","app_clients":"Clients","app_code":"Code","app_colvis":"Column visibility","app_companies":"Companies","app_company":"Company","app_company_name":"Company name","app_confirm_password":"Confirm password","app_contact_management":"Contact management","app_contacts":"Contacts","app_content_management":"Content management","app_copy":"Copy","app_copy_paste_url_bellow":"button, copy and paste the URL below into your web browser:","app_country":"Country","app_coupon_management":"Coupon Management","app_coupons":"Coupons","app_coupons_amount":"Coupons amount","app_create":"Create","app_create_new_calendar_source":"Create new Calendar Source","app_create_new_notification":"Create new Notification","app_create_new_report":"Create new report","app_created_at":"Created at","app_crud_date_field":"Crud date field","app_crud_event_field":"Event label field","app_crud_title":"Crud title","app_csv":"CSV","app_csvImport":"CSV Import","app_csv_file_to_import":"CSV file to import","app_currencies":"Currencies","app_currency":"Currency","app_current_password":"Current password","app_custom_controller_index":"Custom controller index.","app_customer":"Customer","app_customers":"Customers","app_dashboard":"Dashboard","app_dashboard_text":"You are logged in!","app_delete":"Delete","app_delete_selected":"Delete selected","app_deleted_at":"Deleted at","app_description":"Description","app_deselect_all":"Deselect all","app_discount_amount":"Discount amount","app_discount_percent":"Discount percent","app_documents":"Documents","app_due_date":"Due date","app_edit":"Edit","app_edit_calendar_source":"Edit Calendar Source","app_email":"Email","app_email_greet":"Hello","app_email_line1":"You are receiving this email because we received a password reset request for your account.","app_email_line2":"If you did not request a password reset, no further action is required.","app_email_regards":"Regards","app_end_time":"End time","app_entry_date":"Entry date","app_excel":"Excel","app_excerpt":"Excerpt","app_expense":"Expense","app_expense_categories":"Expense Categories","app_expense_category":"Expense Category","app_expense_management":"Expense Management","app_expenses":"Expenses","app_faq_management":"FAQ Management","app_featured_image":"Featured image","app_fee_percent":"Fee percent","app_file":"File","app_file_contains_header_row":"File contains header row?","app_first_name":"First name","app_forgot_password":"Forgot your password?","app_group_by":"Group by","app_if_you_are_having_trouble":"If you’re having trouble clicking the","app_import_data":"Import data","app_imported_rows_to_table":"Imported :rows rows to :table table","app_inbox":"Inbox","app_income_categories":"Income categories","app_income_source":"Income source","app_income_sources":"Income sources","app_integer_float_placeholder":"Please select one of integer/float fields","app_is_created":"is created","app_is_deleted":"is deleted","app_is_updated":"is updated","app_label_field":"Label field","app_last_name":"Last name","app_list":"List","app_loading":"Loading","app_location":"Location","app_locations":"Locations","app_login":"Login","app_logout":"Logout","app_main_currency":"Main currency","app_make_default":"Make default","app_message":"Message","app_messages":"Messages","app_monthly_report":"Monthly report","app_name":"Name","app_new_calendar_source":"Create new calendar source","app_new_message":"New message","app_new_password":"New password","app_no_calendar_sources":"No calendar sources yet.","app_no_entries_in_table":"No entries in table","app_no_reports_yet":"No reports yet.","app_not_approved_p":"Your account is still not approved by administrator. Please, be patient and try again later.","app_not_approved_title":"You are not approved","app_note_text":"Note text","app_notes":"Notes","app_notifications":"Notifications","app_notify_user":"Notify User","app_outbox":"Outbox","app_pages":"Pages","app_parse_csv":"Parse CSV","app_password":"Password","app_password_confirm":"New password confirmation","app_pdf":"PDF","app_permadel":"Delete Permanently","app_permissions":"Permissions","app_phone":"Phone","app_phone1":"Phone 1","app_phone2":"Phone 2","app_photo":"Photo (max 8mb)","app_photo1":"Photo1","app_photo2":"Photo2","app_photo3":"Photo3","app_please_select":"Please select","app_prefix":"Prefix","app_price":"Price","app_print":"Print","app_product_management":"Product management","app_product_name":"Product name","app_products":"Products","app_project":"Project","app_project_status":"Project status","app_project_statuses":"Project statuses","app_projects":"Projects","app_question":"Question","app_questions":"Questions","app_recipient":"Recipient","app_redeem_time":"Redeem time","app_refresh":"Refresh","app_register":"Register","app_registration":"Registration","app_remember_me":"Remember me","app_remember_token":"Remember token","app_reply":"Reply","app_reports":"Reports","app_reports_x_axis_field":"X-axis - please choose one of date/time fields","app_reports_y_axis_field":"Y-axis - please choose one of number fields","app_reset_password":"Reset password","app_reset_password_woops":"<strong>Whoops!</strong> There were problems with input:","app_restore":"Restore","app_role":"Role","app_roles":"Roles","app_sample_answer":"Sample answer","app_sample_category":"Sample category","app_sample_question":"Sample question","app_save":"Save","app_select_all":"Select all","app_select_crud_placeholder":"Please select one of your CRUDs","app_select_dt_placeholder":"Please select one of date/time fields","app_select_users_placeholder":"Please select one of your Users","app_send":"Send","app_serial_number":"Serial number","app_settings":"Settings","app_show":"Show","app_simple_user":"Simple user","app_skype":"Skype","app_slug":"Slug","app_start_date":"Start date","app_start_time":"Start time","app_status":"Status","app_statuses":"Statuses","app_stripe_transactions":"Stripe Transactions","app_subject":"Subject","app_subscription-billing":"Subscriptions","app_subscription-payments":"Payments","app_suffix":"Sufix","app_tag":"Tag","app_tags":"Tags","app_task_management":"Task management","app_tasks":"Tasks","app_team-management":"Teams","app_team-management-singular":"Team","app_text":"Text","app_there_were_problems_with_input":"There were problems with input","app_time":"Time","app_time_entries":"Time entries","app_time_management":"Time management","app_title":"Title","app_transaction_date":"Transaction date","app_transaction_type":"Transaction type","app_transaction_types":"Transaction types","app_transactions":"Transactions","app_trash":"Trash","app_update":"Update","app_updated_at":"Updated at","app_upgrade_to_premium":"Upgrade to Premium","app_user":"User","app_user_actions":"User actions","app_user_management":"User management","app_users":"Users","app_valid_from":"Valid from","app_valid_to":"Valid to","app_values":"Values","app_view":"View","app_website":"Website","app_when_crud":"When CRUD","app_whoops":"Whoops!","app_work_type":"Work type","app_work_types":"Work types","app_x_axis_field":"X-axis field (date/time)","app_x_axis_group_by":"X-axis group by","app_y_axis_field":"Y-axis field","app_you_have_no_messages":"You have no messages.","articles":{"fields":{"available-for":"Available for","category-id":"Categories","excerpt":"Excerpt","featured-image":"Featured image","page-text":"Text","tag-id":"Tags","title":"Title"},"title":"Articles"},"assets":{"fields":{"assigned-user":"Assigned (user)","attachments":"Attachments","category":"Category","location":"Location","notes":"Notes","photo1":"Thumbnail","photo2":"Gallery","serial-number":"Serial number","status":"Status","title":"Title"},"title":"Assets"},"assets-categories":{"fields":{"title":"Title"},"title":"Categories"},"assets-history":{"created_at":"Time","fields":{"asset":"Asset","assigned-user":"Assigned (user)","location":"Location","status":"Status"},"title":"Assets history"},"assets-locations":{"fields":{"title":"Title"},"title":"Locations"},"assets-management":{"title":"Assets management"},"assets-statuses":{"fields":{"title":"Title"},"title":"Statuses"},"balance-sheet":{"title":"Balance sheet"},"brands":{"fields":{"icon":"Icon","status":"Status","title":"Title"},"title":"Brands"},"client-projects":{"fields":{"assigned-to":"Assigned to","billing-type":"Billing type","budget":"Budget","client":"Client","demo-url":"Demo url","description":"Description","due-date":"Due date","phase":"Phase","priority":"Priority","start-date":"Start date","status":"Status","title":"Title"},"title":"Client projects"},"companies":{"fields":{"address":"Address","business-number":"Business number","city":"City","company-name":"Company name","country":"Country","email":"Email","logo":"Logo","phone":"Phone","state-region":"State/region","url":"Url","zip-postal-code":"Zip/postal code"},"title":"Companies"},"contact-companies":{"fields":{"address":"Address","email":"Email","name":"Company name","website":"Website"},"title":"Companies"},"contact-documents":{"fields":{"attachments":"Attachments","contact":"Contact","description":"Description","name":"Name"},"title":"Contact documents"},"contact-groups":{"fields":{"description":"Description","name":"Name"},"title":"Contact groups"},"contact-management":{"title":"Contact management"},"contact-notes":{"fields":{"attachment":"Attachment","contact":"Contact","notes":"Notes","title":"Title"},"title":"Contact notes"},"contact-types":{"fields":{"description":"Description","name":"Name"},"title":"Contact types"},"contacts":{"edit-profile":"Edit Profile","fields":{"address":"Address","city":"City","company":"Company","contact-type":"Contact type","country":"Country","create_user":"Create User for this contact?","email":"Email","first-name":"First name","group":"Group","language":"Language","last-name":"Last name","phone1":"Phone 1","phone1_code":"Phone 1 Code","phone2":"Phone 2","phone2_code":"Phone 2 Code","skype":"Skype","state-region":"State/region","tax-id":"Tax ID","zip-postal-code":"Zip/postal code"},"title":"Contacts","title_customer":"Customer","title_customers":"Customers","title_lead":"Lead","title_leads":"Leads","title_profile":"Profile","title_supplier":"Supplier","title_suppliers":"Suppliers"},"content-categories":{"fields":{"slug":"Slug","title":"Category"},"title":"Categories"},"content-management":{"title":"Content management"},"content-pages":{"fields":{"category-id":"Categories","created-at":"Time Created","excerpt":"Excerpt","featured-image":"Featured image","page-text":"Text","tag-id":"Tags","title":"Title"},"title":"Pages"},"content-tags":{"fields":{"slug":"Slug","title":"Tag"},"title":"Tags"},"countries":{"fields":{"shortcode":"Shortcode","title":"Title"},"title":"Countries"},"coupon-campaigns":{"fields":{"coupons-amount":"Coupons amount","description":"Description","discount-amount":"Discount amount","discount-percent":"Discount percent","title":"Title","valid-from":"Valid from","valid-to":"Valid to"},"title":"Campaigns"},"coupon-management":{"title":"Coupon Management"},"coupons":{"fields":{"campaign":"Campaign","code":"Code","discount-amount":"Discount amount","discount-percent":"Discount percent","redeem-time":"Redeem time","valid-from":"Valid from","valid-to":"Valid to"},"title":"Coupons"},"currencies":{"fields":{"code":"Code","is_default":"Is Default?","name":"Name","rate":"Rate","status":"Status","symbol":"Symbol"},"title":"Currencies"},"database-backup":{"title":"Database backup"},"departments":{"fields":{"created-by":"Created by","description":"Description","name":"Name"},"title":"Departments"},"discounts":{"fields":{"description":"Description","discount":"Discount","discount-type":"Discount type","name":"Name"},"title":"Discounts"},"download-template":"Download Template","email-templates":{"fields":{"body":"Body","name":"Name","subject":"Subject"},"title":"Email templates"},"expense":{"fields":{"account":"Account","amount":"Amount","description":"Description","description-file":"Description file","entry-date":"Entry date","expense-category":"Expense Category","payee":"Payee","payment-method":"Payment method","ref-no":"Ref #"},"title":"Expenses"},"expense-category":{"fields":{"name":"Name"},"title":"Expense Categories"},"expense-management":{"title":"Accounting"},"expense-types":{"title":"Expense types"},"faq-categories":{"fields":{"title":"Category"},"title":"Categories"},"faq-management":{"faq":"FAQs","title":"FAQ Management"},"faq-questions":{"fields":{"answer-text":"Answer","category":"Category","question-text":"Question"},"title":"Questions"},"general-settings":{"title":"General settings"},"global-settings":{"title":"Global settings"},"global_title":"Digi Accounting, Invoicing & Billing CRM","income":{"fields":{"account":"Account","amount":"Amount","description":"Description","description-file":"Description file","entry-date":"Entry date","income-category":"Income Category","pay-method":"Pay method","payer":"Payer","ref-no":"Ref #"},"title":"Income"},"income-category":{"fields":{"name":"Name"},"title":"Income categories"},"info":"Info","internal-notifications":{"fields":{"link":"Link","text":"Text","users":"Users"},"title":"Notifications"},"invoices":{"fields":{"address":"Address","amount":"Amount","currency":"Currency","customer":"Customer","discount":"Discount","discount_format":"Discount Format","invoice-date":"Invoice date","invoice-due-date":"Invoice due date","invoice-no":"Invoice #","invoice-notes":"Invoice notes","invoice-prefix":"Invoice prefix","reference":"Reference","show-quantity-as":"Show quantity as","status":"Status","tax":"Tax","tax_format":"Tax Format","title":"Title"},"title":"Invoices"},"knowledgebase":{"title":"Knowledgebase"},"languages":{"fields":{"code":"Code","is-rtl":"Is rtl","language":"Language"},"title":"Languages"},"manage-projects":{"title":"Manage projects"},"master-settings":{"fields":{"description":"Description","key":"Key","module":"Module"},"title":"Master settings"},"measurement-units":{"fields":{"description":"Description","status":"Status","title":"Title"},"title":"Measurement units"},"monthly-report":{"title":"Monthly report"},"navigation-menues":{"title":"Navigation Menues"},"operations_disabled":"Operation disabled on demo mode","payment-gateways":{"fields":{"description":"Description","logo":"Logo","name":"Name"},"title":"Payment gateways"},"payments":{"cancelled":"You have cancelled your payment","failed":"Payment Failed","title":"Payments"},"permissions":{"fields":{"title":"Title"},"title":"Permissions"},"product-categories":{"fields":{"description":"Description","name":"Category name","photo":"Photo (max 8mb)"},"title":"Categories"},"product-management":{"title":"Product management"},"product-tags":{"fields":{"name":"Name"},"title":"Tags"},"products":{"fields":{"actual-price":"Actual price","alert-quantity":"Alert quantity","brand":"Brand","category":"Category","description":"Description","excerpt":"Excerpt","hsn-sac-code":"HSN/SAC code","image-gallery":"Image gallery","name":"Product name","other-files":"Other files","product-code":"Product code","product-size":"Product size","product-weight":"Product weight","sale-price":"Sale price","stock-quantity":"Stock quantity","tag":"Tag","thumbnail":"Thumbnail","ware-house":"Ware house"},"gallery-file-types":"Accepted file types: png,jpg,jpeg,gif","title":"Products"},"products-return":{"fields":{"address":"Address","currency":"Currency","customer":"Customer","discount":"Discount","invoice-no":"Invoice #","invoice-prefix":"Invoice prefix","notes":"Notes","order-date":"Order date","order-due-date":"Order due date","reference":"Reference","show-quantity-as":"Show quantity as","status":"Status","subject":"Subject","tax":"Tax","update-stock":"Update stock","ware-house":"Ware house"},"title":"Products return"},"products-transfer":{"title":"Products transfer"},"project-billing-types":{"fields":{"description":"Description","title":"Title"},"title":"Project billing types"},"project-statuses":{"fields":{"description":"Description","name":"Name"},"title":"Project statuses"},"projects":{"title":"Projects"},"purchase-orders":{"fields":{"address":"Address","amount":"Amount","currency":"Currency","customer":"Supplier","discount":"Discount","invoice-no":"Invoice #","invoice-prefix":"Invoice prefix","notes":"Notes","order-date":"Issued at","order-due-date":"Order due date","reference":"Reference","show-quantity-as":"Show quantity as","status":"Status","subject":"Subject","tax":"Tax","update-stock":"Update stock","warehouse":"Warehouse"},"title":"Purchase orders"},"quotes":{"fields":{"address":"Address","amount":"Amount","currency":"Currency","customer":"Customer","discount":"Discount","proposal-text":"Proposal text","quote-date":"Quote date","quote-expiry-date":"Quote expiry date","quote-no":"Quote no","quote-prefix":"Quote prefix","reference":"Reference","show-quantity-as":"Show quantity as","status":"Status","tax":"Tax","title":"Title"},"title":"Quotes"},"recurring-invoices":{"fields":{"address":"Address","amount":"Amount","currency":"Currency","customer":"Customer","discount":"Discount","invoice-date":"Invoice date","invoice-due-date":"Invoice due date","invoice-no":"Invoice #","invoice-notes":"Invoice notes","invoice-prefix":"Invoice prefix","paymentstatus":"Paymentstatus","products":"Products","recurring-period":"Recurring period","reference":"Reference","show-quantity-as":"Show quantity as","status":"Status","tax":"Tax","title":"Title"},"title":"Recurring invoices"},"recurring-periods":{"fields":{"description":"Description","title":"Title","value":"Value"},"title":"Recurring periods"},"roles":{"fields":{"permission":"Permissions","title":"Title"},"title":"Roles"},"sales":{"title":"Sales"},"sales-taxes":{"title":"Sales taxes"},"support":{"fields":{"assigned-to":"Assigned to","attachments":"Attachments","created-by":"Created by","department":"Department","description":"Description","email":"Email","name":"Name","priority":"Priority","subject":"Subject"},"title":"Support"},"task-calendar":{"status-wise":"Status wise","title":"Calendar"},"task-management":{"title":"Task management"},"task-statuses":{"fields":{"color":"Color","name":"Name"},"panel-danger":"Danger panel","panel-default":"Default panel","panel-info":"Info panel","panel-primary":"Primary panel","panel-success":"Success panel","panel-warning":"Warning panel","title":"Statuses"},"task-tags":{"fields":{"name":"Name"},"title":"Tags"},"tasks":{"fields":{"attachment":"Attachment","description":"Description","due-date":"Due date","name":"Name","start-date":"Start date","status":"Status","tag":"Tags","user":"Assigned to"},"task-status-updated":"Task status updated successfully","title":"Tasks"},"taxes":{"fields":{"description":"Description","name":"Name","rate":"Rate","rate-type":"Rate type"},"title":"Taxes"},"time-entries":{"fields":{"description":"Description","end-date":"End date","project":"Project","start-date":"Start date"},"title":"Time entries"},"transfers":{"fields":{"amount":"Amount","date":"Date","description":"Description","from":"From","payment-method":"Payment method","ref-no":"Ref #","to":"To"},"title":"Transfers"},"user-actions":{"created_at":"Time","fields":{"action":"Action","action-id":"Action id","action-model":"Action model","user":"User"},"title":"User actions"},"user-management":{"title":"User management"},"users":{"activate":"Activate","active":"Active","fields":{"contact-reference":"Contact reference","department":"Department","email":"Email","name":"Name","password":"Password","remember-token":"Remember token","role":"Role","status":"Status"},"suspend":"Suspend","title":"Users"},"warehouses":{"fields":{"address":"Address","description":"Description","name":"Name"},"title":"Warehouses"}},"en.others":{"dashboard":{"recent-expenses":"Recently added expenses","recent-incomes":"Recently added incomes","recent-invoices":"Recently added invoices","recent-orders":"Recently added orders","recent-quotes":"Recently added quotes"},"suspended":"We are sorry!. Your account has been suspended. Please contact administrator"},"en.pagination":{"next":"Next »","previous":"« Previous"},"en.passwords":{"password":"Passwords must be at least six characters and match the confirmation.","reset":"Your password has been reset!","sent":"We have e-mailed your password reset link!","token":"This password reset token is invalid.","user":"We can't find a user with that e-mail address."},"en.quickadmin":{"qa_current_password":"Current password","qa_dashboard_text":"You are logged in!","qa_edit":"Edit","qa_login":"Login","qa_new_password":"New password","qa_password_confirm":"New password confirmation","qa_remember_me":"Remember me","qa_reset_password":"Reset password","qa_reset_password_woops":"<strong>Whoops!</strong> There were problems with input:","qa_save":"Save","qa_there_were_problems_with_input":"There were problems with input","quickadmin_title":"Accounting CRM"},"en.strings":{"A fresh verification link has been sent to your email address.":"A fresh verification link has been sent to your email address.","Before proceeding, please check your email for a verification link.":"Before proceeding, please check your email for a verification link.","Confirm Password":"Confirm Password","E-Mail Address":"E-Mail Address","If you did not receive the email":"If you did not receive the email","Name":"Name","Password":"Password","Register":"Register","Verify Your Email Address":"Verify Your Email Address","click here to request another":"click here to request another"},"en.validation":{"accepted":"The :attribute must be accepted.","active_url":"The :attribute is not a valid URL.","after":"The :attribute must be a date after :date.","after_or_equal":"The :attribute must be a date after or equal to :date.","alpha":"The :attribute may only contain letters.","alpha_dash":"The :attribute may only contain letters, numbers, dashes and underscores.","alpha_num":"The :attribute may only contain letters and numbers.","array":"The :attribute must be an array.","before":"The :attribute must be a date before :date.","before_or_equal":"The :attribute must be a date before or equal to :date.","between":{"array":"The :attribute must have between :min and :max items.","file":"The :attribute must be between :min and :max kilobytes.","numeric":"The :attribute must be between :min and :max.","string":"The :attribute must be between :min and :max characters."},"boolean":"The :attribute field must be true or false.","confirmed":"The :attribute confirmation does not match.","custom":{"attribute-name":{"rule-name":"custom-message"}},"date":"The :attribute is not a valid date.","date_format":"The :attribute does not match the format :format.","different":"The :attribute and :other must be different.","digits":"The :attribute must be :digits digits.","digits_between":"The :attribute must be between :min and :max digits.","dimensions":"The :attribute has invalid image dimensions.","distinct":"The :attribute field has a duplicate value.","email":"The :attribute must be a valid email address.","exists":"The selected :attribute is invalid.","file":"The :attribute must be a file.","filled":"The :attribute field must have a value.","gt":{"array":"The :attribute must have more than :value items.","file":"The :attribute must be greater than :value kilobytes.","numeric":"The :attribute must be greater than :value.","string":"The :attribute must be greater than :value characters."},"gte":{"array":"The :attribute must have :value items or more.","file":"The :attribute must be greater than or equal :value kilobytes.","numeric":"The :attribute must be greater than or equal :value.","string":"The :attribute must be greater than or equal :value characters."},"image":"The :attribute must be an image.","in":"The selected :attribute is invalid.","in_array":"The :attribute field does not exist in :other.","integer":"The :attribute must be an integer.","ip":"The :attribute must be a valid IP address.","ipv4":"The :attribute must be a valid IPv4 address.","ipv6":"The :attribute must be a valid IPv6 address.","json":"The :attribute must be a valid JSON string.","lt":{"array":"The :attribute must have less than :value items.","file":"The :attribute must be less than :value kilobytes.","numeric":"The :attribute must be less than :value.","string":"The :attribute must be less than :value characters."},"lte":{"array":"The :attribute must not have more than :value items.","file":"The :attribute must be less than or equal :value kilobytes.","numeric":"The :attribute must be less than or equal :value.","string":"The :attribute must be less than or equal :value characters."},"max":{"array":"The :attribute may not have more than :max items.","file":"The :attribute may not be greater than :max kilobytes.","numeric":"The :attribute may not be greater than :max.","string":"The :attribute may not be greater than :max characters."},"mimes":"The :attribute must be a file of type: :values.","mimetypes":"The :attribute must be a file of type: :values.","min":{"array":"The :attribute must have at least :min items.","file":"The :attribute must be at least :min kilobytes.","numeric":"The :attribute must be at least :min.","string":"The :attribute must be at least :min characters."},"not_in":"The selected :attribute is invalid.","not_regex":"The :attribute format is invalid.","numeric":"The :attribute must be a number.","present":"The :attribute field must be present.","regex":"The :attribute format is invalid.","required":"The :attribute field is required.","required_if":"The :attribute field is required when :other is :value.","required_unless":"The :attribute field is required unless :other is in :values.","required_with":"The :attribute field is required when :values is present.","required_with_all":"The :attribute field is required when :values is present.","required_without":"The :attribute field is required when :values is not present.","required_without_all":"The :attribute field is required when none of :values are present.","same":"The :attribute and :other must match.","size":{"array":"The :attribute must contain :size items.","file":"The :attribute must be :size kilobytes.","numeric":"The :attribute must be :size.","string":"The :attribute must be :size characters."},"string":"The :attribute must be a string.","timezone":"The :attribute must be a valid zone.","unique":"The :attribute has already been taken.","uploaded":"The :attribute failed to upload.","url":"The :attribute format is invalid."},"hi._json":{"A fresh verification link has been sent to your email address":{"":"आपके ईमेल पते पर एक ताजा सत्यापन लिंक भेजा गया है।"},"Before proceeding, please check your email for a verification link":{"":"आगे बढ़ने से पहले, कृपया सत्यापन लिंक के लिए अपना ईमेल देखें।"},"Confirm Password":"पासवर्ड की पुष्टि कीजिये","E-Mail Address":"ईमेल पता","If you did not receive the email":"यदि आपको ईमेल प्राप्त नहीं हुआ है","Name":"नाम","Password":"पारण शब्द","Register":"रजिस्टर","Verify Your Email Address":"अपने ईमेल पते की पुष्टि करें","click here to request another":"दूसरा अनुरोध करने के लिए यहां क्लिक करें"},"hi.auth":{"suspended":"हमें खेद है!। आपका खाता निरस्त कर दिया गया है। कृपया व्यवस्थापक से संपर्क करें","throttle":"बहुत सारे लॉगिन प्रयास। कृपया फिर से प्रयास करें: सेकंड सेकंड।"},"hi.custom":{"accounts":{"sum-of-all-accounts":"। प्रति पृष्ठ अभिलेखों का योग"},"app_messages":"संदेश","articles":{"category":"वर्ग :","related-articles":"इस अनुभाग में लेख","tag":"टैग:"},"common":{"active":"सक्रिय","are-you-sure":"क्या आपको यकीन है?","are-you-sure-delete":"क्या आप वाकई रिकॉर्ड हटाना चाहते हैं?","are-you-sure-duplicate":"क्या आप वाकई इस रिकॉर्ड की नकल करना चाहते हैं?","browser":"ब्राउज़र","cancel":"रद्द करना","change-status":"अवस्था बदलो","city":"शहर","close":"बंद करे","comments":"टिप्पणियाँ","country":"देश","description":"विवरण","download-pdf":"पीडीएफ़ डाउनलोड करें","duplicate":"क्लोन","email":"ईमेल:","extra":"अतिरिक्त","inactive":"इन-सक्रिय","ip":"आईपी पता","loading":"लोड हो रहा है...","mark-as":"ऐसे चिन्हित कीजिये","next":"आगामी","no":"नहीं","not-allowed":"माफ़ कीजिये! आपको इस पृष्ठ पर पहुंचने की अनुमति नहीं है","pdf":"पीडीएफ","percent":"प्रतिशत (%)","phone":"फ़ोन:","preview":"पूर्वावलोकन","previous":"पिछला","print":"छाप","save":"बचाना","send":"भेजना","sms":"एसएमएस","time":"पहर","update-manage":"अद्यतन और प्रबंधित करें","value":"मूल्य","view-pdf":"पीडीएफ देखें","yes":"हाँ"},"currencies":{"currency_layer_message":"आवेदन में एकीकृत करेंसी.कॉम.कॉम एपीआई है। यह आपके चालान के लिए एक वास्तविक समय मुद्रा रूपांतरण प्रदान करता है। 168 विश्व मुद्राओं के लिए सटीक विनिमय दरें हर 60 मिनट से लेकर तेजस्वी 60 सेकंड तक डेटा अपडेट के साथ। कृपया देखें: एपीआई कुंजी प्राप्त करने के लिए url। कृपया API कुंजी अपडेट करें: settings_url। सुनिश्चित करें कि आप सबसे अच्छी योजना ले रहे हैं। नोट: नि: शुल्क योजना मुद्रा स्विचिंग का समर्थन नहीं करेगी।","update_currency_online":"मुद्रा विनिमय दरों को ऑनलाइन अपडेट करें?"},"dashboard":{"phone1":"फ़ोन 1:"},"email":{"attach-pdf":"पीडीएफ संलग्न करें?","bcc":"गुप्त प्रतिलिपि","bcc-admin":"Bcc को व्यवस्थापन पर भेजें?","cc":"सीसी","customer-name":"ग्राहक का नाम","message-body":"संदेश का मुख्य हिस्सा","send":"भेजना","subject":"विषय","to":"सेवा मेरे"},"expense":{"summary-in":"में सारांश","total-expense":"कुल खर्च","total-expense-last-30days":"कुल खर्च पिछले 30 दिन","total-expense-this-month":"कुल खर्च इस महीने","total-expense-this-week":"कुल व्यय इस सप्ताह"},"incomes":{"date":"दिनांक :","for":"के लिये :","id":"लेनदेन आईडी: TRN #","na":"एन / ए","paymethod":"वेतन विधि:","receipt":"रसीद","receipt-generated-on":"इलेक्ट्रॉनिक रसीद। जनरेट किया गया:","show-graph":"ग्राफ दिखाएं","show-report":"रिपोर्ट दिखाओ","spent-to":"तक खर्च किया गया:","summary-in":"में आय का सारांश","total-income":"कुल आय","total-income-last-30days":"कुल आय पिछले 30 दिन","total-income-this-month":"कुल आय इस महीने","total-income-this-week":"कुल आय इस सप्ताह"},"invoices":{"Unpaid":"संयुक्त राष्ट्र के भुगतान किया","accepted":"स्वीकार किए जाते हैं","account":"लेखा","amount":"रकम","amount-due":"देय राशि :","app_back_to_invoice":"वापस चालान के लिए","attn":"ध्यानार्थ:","authorized-person":"अधिकृत व्यक्ति","business-owner":"व्यवसाय के मालिक","cancelled":"रद्द","category":"वर्ग","clear-signature":"स्पष्ट हस्ताक्षर","date":"दिनांक","description":"विवरण","due":"देय (अवैतनिक)","due-date":"नियत तारीख :","duplicated":"चालान सफलतापूर्वक क्लोन किया गया","edit":"चालान संपादित करें","email":"ईमेल","history":"संचालन इतिहास","invoice-date":"चालान तिथि:","invoice-notification":"चालान अधिसूचना","invoice-status":"चालान की स्थिति:","invoice-to":"इसके लिए इनवॉइस:","invoice-total":"कुल चालान:","invoice_no":"Invocie #","invoice_total":"कुल बिल:","make-payment":"भुगतान करो","messages":{"account":"कृपया खाते का चयन करें","amount":"कृपया राशि दर्ज करें","category":"कृपया श्रेणी का चयन करें","date":"कृपया तारीख का चयन करें","paymethod":"कृपया भुगतान विधि का चयन करें","save-success":"भुगतान सफलतापूर्वक जोड़ा गया","toemail":"कृपया ईमेल पता दर्ज करें","transaction_id":"कृपया लेनदेन आईडी दर्ज करें"},"method":"भुगतान का तरीका","no-payment":"अभी तक कोई भुगतान नहीं","note":"ध्यान दें :","notification":"चालान अधिसूचना","ontime":"एक बार","paid":"भुगतान किया है","partial":"आंशिक भुगतान","payer":"भुगतानकर्ता","payment-for":"के लिए भुगतान","payment-method":"भुगतान का तरीका :","payment-overdue":"भुगतान बांकी है","payment-received":"भुगतान प्राप्त","payment-refund":"रिफंड जनरेट किया गया","payment-reminder":"भुगतान रिमाईन्डर","qty":"मात्रा","reference":"संदर्भ","rejected":"अस्वीकृत","related-transactions":"संबंधित लेनदेन","repeat-on":"इस पर दोहराएं:","sign-above":"ऊपर हस्ताक्षर करें","signature":"हस्ताक्षर","signature-saved":"हस्ताक्षर सफलतापूर्वक सहेजे गए","stripe":"पट्टी","title-caps":"चालान","total-paid":"कुल भुगतान हो गया :","transaction_id":"लेनदेन आईडी","unpaid":"संयुक्त राष्ट्र के भुगतान किया","upload-documents":"दस्तावेज़ अपलोड करें","upload-success":"फ़ाइलें सफलतापूर्वक अपलोड की गईं"},"menu":{"balance":"संतुलन","create-contact":"संपर्क बनाएं","create-invoice":"नया चालान","create-quote":"नई बोली","crm":"सीआरएम","customers":"ग्राहकों","miscellaneous":"कई तरह का","project":"परियोजना","sales":"बिक्री","stock":"भण्डार","support":"समर्थन","tickets":"टिकट"},"messages":{"already-exists":"इस संपर्क में पहले से ही उपयोगकर्ता की पहुंच है","already-exists-email":"यह ईमेल पहले से मौजूद है","click-here":"संपादित करने के लिए <a href=\":url\">यहां</a> क्लिक करें","contact-dont-have-email":"इस संपर्क में ईमेल पता नहीं है। ईमेल पता दर्ज","crud_disabled":"डेमो पर CRUD संचालन अक्षम है","failed":"अनुत्तीर्ण होना:","info":"जानकारी:","invalid_record":"अमान्य रिकॉर्ड","mailsent":"सफलतापूर्वक भेजा गया ईमेल","not_allowed":"माफ़ कीजिये! आपको इस पृष्ठ पर पहुंचने की अनुमति नहीं है","not_found":"माफ़ कीजिये! रिकॉर्ड नहीं मिला।","not_found_payment":"भुगतान रिकॉर्ड नहीं मिला","profile_updated":"प्रोफाइल को सफलतापूर्वक अपडेट किया गया","record_deleted":"रिकॉर्ड सफलतापूर्वक हटाया गया","record_restored":"रिकॉर्ड सफलतापूर्वक बहाल किया गया","record_saved":"रिकॉर्ड सफलतापूर्वक सहेजा गया","record_updated":"रिकॉर्ड सफलतापूर्वक अपडेट किया गया","records_deleted":"रिकॉर्ड सफलतापूर्वक हटाए गए","smssent":"एसएमएस सफलतापूर्वक भेजा गया","somethiswentwrong":"कुछ गलत हो गया","status-changed":"स्थिति सफलतापूर्वक बदल गई","success":"सफलता:","time_out":"समय समाप्त"},"payments":{"amount":"रकम :","customer":"ग्राहक :","date":"दिनांक :","order-no":"आदेश संख्या। :","products":"उत्पाद","status":"स्थिति","success":"आपकी भुगतान सफलता"},"products":{"action":"कार्य","add_new":"लाइन जोड़ो","additional-discount":"अतिरिक्त छूट (-)","additional-tax":"अतिरिक्त कर (+)","already-in-cart":"उत्पाद पहले से ही कार्ट में है। क्या आप मात्रा बढ़ाना चाहते हैं?","already-in-cart-message":"उत्पाद पहले से ही कार्ट में है।","amount":"रकम","amount-payable":"देय राशि","currency_help":"लाइव बाजार के आधार पर अपने ग्राहक के लिए भुगतान मुद्रा","default_discount":"डिफ़ॉल्ट छूट दर","default_tax":"डिफ़ॉल्ट टैक्स दर","discount":"छूट","discount_percent":"छूट(%)","fields":{"excerpt":"अंश","excerpt_placeholder":"उत्पाद के बारे में संक्षिप्त विवरण","product_status":"स्थिति"},"grand_total":"कुल योग","item_name":"वस्तु का नाम","keep_blank":"इसे स्वचालित रूप से चालान संख्या उत्पन्न करने के लिए रिक्त रखें","please-select-product":"कृपया उत्पाद चुनें","please_select":"कृपया चुने","quantity":"मात्रा","rate":"मूल्यांकन करें","should-be-one":"मात्रा शून्य नहीं होनी चाहिए","sub_total":"उप कुल","tax":"कर","tax_percent":"कर(%)","total_discount":"कुल छूट (-)","total_tax":"कुल कर (+)"},"products-transfer":{"no_products_transfered":"कोई उत्पाद स्थानांतरित नहीं किया गया","title":"उत्पाद स्थानांतरण","transfer_from":"गोदाम से स्थानांतरण","transfer_to":"(वेयरहाउस) में स्थानांतरण","transfered":"उत्पाद सफलतापूर्वक स्थानांतरित हो गए"},"purchase_orders":{"accepted":"स्वीकार किए जाते हैं","amount":"रकम","app_back_to_quote":"आदेश पर वापस जाओ","are-you-sure":"क्या आपको यकीन है?","authorized-person":"अधिकृत व्यक्ति","convert-to-invoice":"चालान में परिवर्तित करें","convert-to-invoice-are-you-sure":"बोली को चालान के रूप में परिवर्तित करें। क्या आपको यकीन है?","convertedtoinvoice":"आदेश सफलतापूर्वक चालान में बदल गया","date":"दिनांक","dead":"मृत","delivered":"पहुंचा दिया","description":"विवरण","documents-uploaded":"दस्तावेज़ अपलोड किए गए","due-date":"नियत तारीख :","edit":"संपादित करें","history":"आदेश इतिहास","invoice-created-quote":"चालान उद्धरण से बनाया गया","note":"ध्यान दें :","on-hold":"होल्ड पर","order_no":"आदेश संख्या।","payment-deleted":"भुगतान सफलतापूर्वक हटा दिया गया","payment-inserted":"भुगतान सफलतापूर्वक डाला गया","quote-accepted":"आदेश स्वीकार किया गया","quote-already-convert":"आदेश पहले ही चालान में परिवर्तित हो गया","quote-cancelled":"आदेश रद्द किया गया","quote-created":"आर्डर क्रिएट किया गया","quote-created-duplicate":"एक और उद्धरण की नकल करके बनाया गया आदेश","quote-date":"आदेश की तारीख :","quote_no":"आदेश #","recipient":"प्राप्त करने वाला","reference":"संदर्भ","rejected":"अस्वीकृत","related-transactions":"भुगतान इतिहास","send-quote":"आर्डर क्रिएट किया गया","status-changed-accepted":"स्थिति स्वीकार में बदल गई","status-changed-dead":"स्थिति बदलकर मर गई","status-changed-delivered":"पहुंचाने के लिए स्थिति बदल गई","status-changed-on-hold":"स्थिति बदलकर ऑन-होल्ड हो गई","status-changed-rejected":"स्थिति को अस्वीकार कर दिया गया","title":"क्रय आदेश","title-single":"क्रय आदेश","total":"संपूर्ण :","unpaid":"संयुक्त राष्ट्र के भुगतान किया","upload-documents":"दस्तावेज़ अपलोड करें","upload-success":"फ़ाइल सफलतापूर्वक अपलोड करें","view-now":"अभी देखो"},"reports":{"assets-report":"एसेट्स रिपोर्ट","expense-report":"व्यय आख्या","generated-reports":"रिपोर्ट तैयार की","income-report":"आय की रिपोर्ट","products-report":"उत्पाद रिपोर्ट","projects-report":"संपर्क परियोजना रिपोर्ट","purchase-order-report":"खरीद आदेश रिपोर्ट","tasks-report":"कार्य रिपोर्ट","users-report":"उपयोगकर्ताओं की रिपोर्ट"},"settings":{"Authorized-Person":"अधिकृत व्यक्ति","Authorized-Person-Designation":"अधिकृत व्यक्ति पदनाम","Authorized-Person-Signature":"अधिकृत व्यक्ति हस्ताक्षर","Company-Address":"कंपनी का पता","Company_Name_On_Invoice":"कंपनी का नाम चालान पर","Invoice-Logo":"चालान लोगो","TWILIO_SID":"ट्विलियो एसआईडी","TWILIO_TOKEN EDIT":"ट्विलियो टोकन","account_type":"खाते का प्रकार","address":"पता","cash":"कैश","company-name":"कंपनी का नाम","contact_email":"ई - मेल से संपर्क करे","country_code":"देश कोड","crud_disabled":"डेमो पर CRUD संचालन अक्षम है","currency":"मुद्रा","currency_code":"मुद्रा कोड","date_format":"डेटा प्रारूप","date_format_js":"डेट फ्रॉम जेएसटी","default-account":"ऑर्डर भुगतान के लिए डिफ़ॉल्ट खाता","default-payment-gateway":"डिफ़ॉल्ट भुगतान गेटवे","default-sms-gateway":"डिफ़ॉल्ट एसएमएस गेटवे","description":"विवरण","email":"ईमेल","enable-signature-part":"हस्ताक्षर वाला भाग सक्षम करें","enable_products_slider":"उत्पाद स्लाइडर सक्षम करें?","google_analytics":"गूगल विश्लेषिकी","hide_stripe_remember_me_box":"याद रखें मुझे बॉक्स याद है","home_page_caption":"होम पेज कैप्शन","home_page_tagline":"होम पेज टैग लाइन","image":"छवि","key":"कुंजी","mail_driver":"मेल ड्राइवर","mail_encryption":"एन्क्रिप्शन","mail_host":"मेल होस्ट","mail_password":"मेल पासवर्ड","mail_port":"मेल पोर्ट","mail_username":"मेल उपयोगकर्ता नाम","make_default":"डिफ़ॉल्ट बनाना","message_type":"संदेश प्रकार","meta_description":"मेटा विवरण","meta_keywords":"मेटा कीवर्ड","moduletype":"मॉड्यूल प्रकार","no_records_found":"कोई रिकॉर्ड नहीं मिला","not_found":"रिकॉर्ड नहीं मिला","option-text":"विकल्प पाठ","paypal":"Paypal","payu":"PayU","payu_merchant_key":"व्यापारी कुंजी","payu_salt":"नमक","payu_testmode":"टेस्ट मोड है?","payu_working_key":"काम की कुंजी","phone":"फ़ोन","phone_number_expression":"फ़ोन नंबर अभिव्यक्ति","plivo_auth_id":"Plivo प्रामाणिक आईडी","plivo_auth_token":"प्लावो प्रामाणिक टोकन","products_selection":"उत्पादों का चयन","require_billing_address":"बिलिंग पते की आवश्यकता है","rights_reserved":"कोप अधिकार","save":"बचाना","settings":"सेटिंग्स","site-logo":"साइट लोगो","site-mini-name":"साइट मिनी नाम","site-title":"क्षेत्र शीर्षक","site_address":"पता","site_city":"साइट सिटी","site_country":"साइट देश","site_favicon":"फ़ेविकॉन","site_logo":"साइट लोगो","site_phone":"साइट फोन","site_state":"साइट राज्य","site_title":"क्षेत्र शीर्षक","site_zipcode":"पिन कोड","slider_type":"सेटिंग्स प्रकार","sms_driver":"एसएमएस चालक","status":"स्थिति","stripe_checkout_button_label":"चेकआउट बटन लेबल","stripe_checkout_popup_description":"विवरण","stripe_checkout_popup_image":"पॉपअप छवि","stripe_checkout_popup_title":"पॉपअप शीर्षक","stripe_currency":"धारी मुद्रा","stripe_key":"धारी की","stripe_mode":"मोड","stripe_secret":"धारी गुप्त","system_timezone":"समय क्षेत्र","theme_color":"थीम रंग","tool-tip":"टूल टिप","total-options":"कुल विकल्प","twilio_sid":"टिलिओ का किनारा","twilio_token":"ट्विलियो टोकन","type":"प्रकार","update":"अद्यतन करें","value":"मूल्य","with-out-payment":"भुगतान के साथ आदेश स्वीकार करें?"},"tasks":{"calendar":"कार्य कैलेंडर","messages":{"task-created":"टास्क सफलतापूर्वक बनाया गया","task-deleted":"टास्क सफलतापूर्वक हटा दिया गया","task-updated":"टास्क सफलतापूर्वक अपडेट किया गया"},"statuswise-tasks":"स्थितिवार कार्य"},"transfers":{"account-shouldnot-same":"आप एक ही खाते के बीच स्थानांतरण नहीं कर सकते","amount-transfered":"राशि सफलतापूर्वक स्थानांतरित की गई"},"translations":{"title":"अनुवाद"}},"hi.global":{"accounts":{"fields":{"account-number":"खाता संख्या","contact-person":"सम्पर्क सूत्र","description":"विवरण","initial-balance":"प्रारंभिक संतुलन","name":"नाम","phone":"फ़ोन","url":"यूआरएल"},"title":"हिसाब किताब"},"app_action":"कार्य","app_action_id":"कार्रवाई आईडी","app_action_model":"एक्शन मॉडल","app_add_key":"कुंजी जोड़ें","app_add_new":"नया जोड़ें","app_address":"पता","app_administrator_can_create_other_users":"व्यवस्थापक (अन्य उपयोगकर्ता बना सकते हैं)","app_aggregate_function_use":"उपयोग करने के लिए अलग कार्य","app_all":"सब","app_all_messages":"सभी संदेश","app_amount":"रकम","app_answer":"उत्तर","app_are_you_sure":"क्या आपको यकीन है?","app_asset":"एसेट","app_assets":"संपत्ति","app_assets_history":"इतिहास मान लेता है","app_assets_management":"संपत्ति प्रबंधन","app_assigned_to":"को सौंपना","app_assigned_user":"सौंपा (उपयोगकर्ता)","app_attachment":"आसक्ति","app_axis":"एक्सिस","app_back_to_list":"दोबारा सूची को जाएं","app_basic_crm":"मूल CRM","app_budget":"बजट","app_calendar":"कैलेंडर","app_calendar_sources":"कैलेंडर स्रोत","app_campaign":"अभियान","app_campaigns":"अभियान","app_categories":"श्रेणियाँ","app_category":"वर्ग","app_category_name":"श्रेणी नाम","app_change_notifications_field_1_label":"उपयोगकर्ता को ईमेल सूचना भेजें","app_change_notifications_field_2_label":"जब CRUD पर प्रवेश","app_change_password":"पासवर्ड बदलें","app_chart_type":"चार्ट प्रकार","app_client":"ग्राहक","app_client_management":"ग्राहक प्रबंधन","app_client_management_settings":"ग्राहक प्रबंधन सेटिंग्स","app_client_status":"ग्राहक की स्थिति","app_client_statuses":"ग्राहक की स्थिति","app_clients":"ग्राहकों","app_code":"कोड","app_colvis":"स्तंभ दृश्यता","app_companies":"कंपनियों","app_company":"कंपनी","app_company_name":"कंपनी का नाम","app_confirm_password":"पासवर्ड की पुष्टि कीजिये","app_contact_management":"संपर्क प्रबंधन","app_contacts":"संपर्क","app_content_management":"सामग्री प्रबंधन","app_copy":"प्रतिलिपि","app_copy_paste_url_bellow":"नीचे दिए गए URL को अपने वेब ब्राउज़र में बटन, कॉपी और पेस्ट करें:","app_country":"देश","app_coupon_management":"कूपन प्रबंधन","app_coupons":"कूपन","app_coupons_amount":"कूपन राशि","app_create":"सर्जन करना","app_create_new_calendar_source":"नया कैलेंडर स्रोत बनाएं","app_create_new_notification":"नई अधिसूचना बनाएँ","app_create_new_report":"नई रिपोर्ट बनाएं","app_created_at":"पर बनाया गया","app_crud_date_field":"क्रूड तिथि क्षेत्र","app_crud_event_field":"इवेंट लेबल फ़ील्ड","app_crud_title":"क्रूड शीर्षक","app_csv":"सीएसवी","app_csvImport":"CSV आयात","app_csv_file_to_import":"आयात करने के लिए CSV फ़ाइल","app_currencies":"मुद्राओं","app_currency":"मुद्रा","app_current_password":"वर्तमान पासवर्ड","app_custom_controller_index":"कस्टम नियंत्रक सूचकांक।","app_customer":"ग्राहक","app_customers":"ग्राहकों","app_dashboard":"डैशबोर्ड","app_dashboard_text":"आप लोग्ड इन हो चुके हैं!","app_delete":"हटाना","app_delete_selected":"चयनित मिटाएं","app_deleted_at":"पर हटा दिया गया","app_description":"विवरण","app_deselect_all":"सभी को अचिन्हिंत करें","app_discount_amount":"छूट राशि","app_discount_percent":"छूट का प्रतिशत","app_documents":"दस्तावेज़","app_due_date":"नियत तारीख","app_edit":"संपादित करें","app_edit_calendar_source":"कैलेंडर स्रोत संपादित करें","app_email":"ईमेल","app_email_greet":"नमस्ते","app_email_line1":"आप यह ईमेल प्राप्त कर रहे हैं क्योंकि हमें आपके खाते के लिए पासवर्ड रीसेट अनुरोध प्राप्त हुआ है।","app_email_line2":"यदि आपने पासवर्ड रीसेट का अनुरोध नहीं किया है, तो आगे की कार्रवाई की आवश्यकता नहीं है।","app_email_regards":"सादर","app_end_time":"अंतिम समय","app_entry_date":"प्रवेश की तिथि","app_excel":"एक्सेल","app_excerpt":"अंश","app_expense":"व्यय","app_expense_categories":"व्यय श्रेणियाँ","app_expense_category":"व्यय की श्रेणी","app_expense_management":"व्यय प्रबंधन","app_expenses":"व्यय","app_faq_management":"प्रबंधन","app_featured_image":"निरूपित चित्र","app_fee_percent":"फीस प्रतिशत","app_file":"फ़ाइल","app_file_contains_header_row":"फ़ाइल में शीर्ष लेख पंक्ति है?","app_first_name":"पहला नाम","app_forgot_password":"अपना कूट शब्द भूल गए?","app_group_by":"समूह द्वारा","app_if_you_are_having_trouble":"यदि आपको क्लिक करने में समस्या हो रही है","app_import_data":"आयात आंकड़ा","app_imported_rows_to_table":"आयातित: पंक्तियाँ पंक्तियाँ: तालिका तालिका","app_inbox":"इनबॉक्स","app_income_categories":"आय श्रेणियों","app_income_source":"आय स्रोत","app_income_sources":"आय के स्रोत","app_integer_float_placeholder":"कृपया पूर्णांक / फ्लोट क्षेत्रों में से एक का चयन करें","app_is_created":"बनाया गया है","app_is_deleted":"हटा दिया गया है","app_is_updated":"यह अद्यतित है","app_label_field":"लेबल फ़ील्ड","app_last_name":"अंतिम नाम","app_list":"सूची","app_loading":"लोड हो रहा है","app_location":"स्थान","app_locations":"स्थान","app_login":"लॉग इन करें","app_logout":"लोग आउट","app_main_currency":"मुख्य मुद्रा","app_make_default":"डिफ़ॉल्ट बनाना","app_message":"संदेश","app_messages":"संदेश","app_monthly_report":"मासिक रिपोर्ट","app_name":"नाम","app_new_calendar_source":"नया कैलेंडर स्रोत बनाएं","app_new_message":"नया संदेश","app_new_password":"नया पासवर्ड","app_no_calendar_sources":"कोई कैलेंडर स्रोत अभी तक नहीं।","app_no_entries_in_table":"तालिका में कोई प्रविष्टि नहीं","app_no_reports_yet":"अभी तक कोई रिपोर्ट नहीं।","app_not_approved_p":"आपका खाता अभी भी व्यवस्थापक द्वारा अनुमोदित नहीं है। कृपया, धैर्य रखें और बाद में फिर से प्रयास करें।","app_not_approved_title":"आपको मंजूर नहीं है","app_note_text":"नोट पाठ","app_notes":"टिप्पणियाँ","app_notifications":"सूचनाएं","app_notify_user":"उपयोगकर्ता को सूचित करें","app_outbox":"आउटबॉक्स","app_pages":"पेज","app_parse_csv":"पार्स सीएसवी","app_password":"पारण शब्द","app_password_confirm":"नया पासवर्ड पुष्टि","app_pdf":"पीडीएफ","app_permadel":"स्थायी रूप से मिटाएं","app_permissions":"अनुमतियां","app_phone":"फ़ोन","app_phone1":"फोन 1","app_phone2":"फ़ोन २","app_photo":"फोटो (अधिकतम 8mb)","app_photo1":"photo1","app_photo2":"photo2","app_photo3":"photo3","app_please_select":"कृपया चुने","app_prefix":"उपसर्ग","app_price":"मूल्य","app_print":"छाप","app_product_management":"उत्पाद प्रबंधन","app_product_name":"उत्पाद का नाम","app_products":"उत्पाद","app_project":"परियोजना","app_project_status":"परियोजना की स्थिति","app_project_statuses":"परियोजना की स्थिति","app_projects":"परियोजनाओं","app_question":"सवाल","app_questions":"प्रशन","app_recipient":"प्राप्त करने वाला","app_redeem_time":"रिडीम समय","app_refresh":"ताज़ा करना","app_register":"रजिस्टर","app_registration":"पंजीकरण","app_remember_me":"मुझे याद रखना","app_remember_token":"टोकन याद रखें","app_reply":"जवाब दे दो","app_reports":"रिपोर्ट","app_reports_x_axis_field":"X- अक्ष - कृपया किसी एक तिथि / समय क्षेत्र को चुनें","app_reports_y_axis_field":"Y- अक्ष - कृपया संख्या फ़ील्ड में से एक चुनें","app_reset_password":"पासवर्ड रीसेट","app_reset_password_woops":"<strong>ओह!</strong> इनपुट में समस्याएं थीं:","app_restore":"पुनर्स्थापित","app_role":"भूमिका","app_roles":"भूमिकाएँ","app_sample_answer":"नमूना जवाब","app_sample_category":"नमूना श्रेणी","app_sample_question":"नमूना सवाल","app_save":"बचाना","app_select_all":"सभी का चयन करे","app_select_crud_placeholder":"कृपया अपना एक CRUD चुनें","app_select_dt_placeholder":"कृपया किसी एक दिनांक / समय क्षेत्र का चयन करें","app_select_users_placeholder":"कृपया अपने उपयोगकर्ताओं में से एक का चयन करें","app_send":"भेजना","app_serial_number":"क्रमांक","app_settings":"सेटिंग्स","app_show":"प्रदर्शन","app_simple_user":"सरल उपयोगकर्ता","app_skype":"स्काइप","app_slug":"काउंटर","app_start_date":"आरंभ करने की तिथि","app_start_time":"समय शुरू","app_status":"स्थिति","app_statuses":"वे स्थितियां","app_stripe_transactions":"धारीदार लेन-देन","app_subject":"विषय","app_subscription-billing":"सदस्यता","app_subscription-payments":"भुगतान","app_suffix":"SUFIX","app_tag":"टैग","app_tags":"टैग","app_task_management":"कार्य प्रबंधन","app_tasks":"कार्य","app_team-management":"टीमें","app_team-management-singular":"टीम","app_text":"टेक्स्ट","app_there_were_problems_with_input":"इनपुट में समस्याएं थीं","app_time":"पहर","app_time_entries":"समय की प्रविष्टियाँ","app_time_management":"समय प्रबंधन","app_title":"शीर्षक","app_transaction_date":"लेन - देन की तारीख","app_transaction_type":"सौदे का प्रकार","app_transaction_types":"लेन-देन के प्रकार","app_transactions":"लेन-देन","app_trash":"कचरा","app_update":"अद्यतन करें","app_updated_at":"पर अपडेट किया गया","app_upgrade_to_premium":"प्रीमियम में अपग्रेड करें","app_user":"उपयोगकर्ता","app_user_actions":"उपयोगकर्ता क्रियाएँ","app_user_management":"उपयोगकर्ता प्रबंधन","app_users":"उपयोगकर्ता","app_valid_from":"से मान्य","app_valid_to":"इस तक मान्य","app_values":"मान","app_view":"राय","app_website":"वेबसाइट","app_when_crud":"जब सी.आर.यू.डी.","app_whoops":"ओह!","app_work_type":"कार्य प्रकार","app_work_types":"काम के प्रकार","app_x_axis_field":"एक्स-अक्ष फ़ील्ड (दिनांक / समय)","app_x_axis_group_by":"द्वारा एक्स-अक्ष समूह","app_y_axis_field":"Y- अक्ष क्षेत्र","app_you_have_no_messages":"आपके लिए कोई सन्देश नहीं है।","articles":{"fields":{"available-for":"के लिए उपलब्ध है","category-id":"श्रेणियाँ","excerpt":"अंश","featured-image":"निरूपित चित्र","page-text":"टेक्स्ट","tag-id":"टैग","title":"शीर्षक"},"title":"सामग्री"},"assets":{"fields":{"assigned-user":"सौंपा (उपयोगकर्ता)","attachments":"संलग्नक","category":"वर्ग","location":"स्थान","notes":"टिप्पणियाँ","photo1":"थंबनेल","photo2":"गेलरी","serial-number":"क्रमांक","status":"स्थिति","title":"शीर्षक"},"title":"संपत्ति"},"assets-categories":{"fields":{"title":"शीर्षक"},"title":"श्रेणियाँ"},"assets-history":{"created_at":"पहर","fields":{"asset":"एसेट","assigned-user":"सौंपा (उपयोगकर्ता)","location":"स्थान","status":"स्थिति"},"title":"इतिहास मान लेता है"},"assets-locations":{"fields":{"title":"शीर्षक"},"title":"स्थान"},"assets-management":{"title":"संपत्ति प्रबंधन"},"assets-statuses":{"fields":{"title":"शीर्षक"},"title":"वे स्थितियां"},"balance-sheet":{"title":"तुलन पत्र"},"brands":{"fields":{"icon":"चिह्न","status":"स्थिति","title":"शीर्षक"},"title":"ब्रांड्स"},"client-projects":{"fields":{"assigned-to":"को सौंपना","billing-type":"बिलिंग प्रकार","budget":"बजट","client":"ग्राहक","demo-url":"डेमो यूआरएल","description":"विवरण","due-date":"नियत तारीख","phase":"अवस्था","priority":"प्राथमिकता","start-date":"आरंभ करने की तिथि","status":"स्थिति","title":"शीर्षक"},"title":"ग्राहक परियोजनाओं"},"companies":{"fields":{"address":"पता","business-number":"व्यापार संबंधी अंक","city":"शहर","company-name":"कंपनी का नाम","country":"देश","email":"ईमेल","logo":"प्रतीक चिन्ह","phone":"फ़ोन","state-region":"राज्य / क्षेत्र","url":"यूआरएल","zip-postal-code":"ज़िप / पोस्टल कोड"},"title":"कंपनियों"},"contact-companies":{"fields":{"address":"पता","email":"ईमेल","name":"कंपनी का नाम","website":"वेबसाइट"},"title":"कंपनियों"},"contact-documents":{"fields":{"attachments":"संलग्नक","contact":"संपर्क करें","description":"विवरण","name":"नाम"},"title":"दस्तावेजों से संपर्क करें"},"contact-groups":{"fields":{"description":"विवरण","name":"नाम"},"title":"समूहों से संपर्क करें"},"contact-management":{"title":"संपर्क प्रबंधन"},"contact-notes":{"fields":{"attachment":"आसक्ति","contact":"संपर्क करें","notes":"टिप्पणियाँ","title":"शीर्षक"},"title":"संपर्क नोट"},"contact-types":{"fields":{"description":"विवरण","name":"नाम"},"title":"संपर्क प्रकार"},"contacts":{"edit-profile":"प्रोफाइल एडिट करें","fields":{"address":"पता","city":"शहर","company":"कंपनी","contact-type":"संपर्क प्रकार","country":"देश","email":"ईमेल","first-name":"पहला नाम","group":"समूह","language":"भाषा","last-name":"अंतिम नाम","phone1":"फोन 1","phone1_code":"फोन 1 कोड","phone2":"फ़ोन २","phone2_code":"फोन 2 कोड","skype":"स्काइप","state-region":"राज्य / क्षेत्र","tax-id":"टैक्स आईडी","zip-postal-code":"ज़िप / पोस्टल कोड"},"title":"संपर्क","title_customer":"ग्राहक","title_customers":"ग्राहकों","title_lead":"लीड","title_leads":"सुराग","title_profile":"प्रोफाइल","title_supplier":"प्रदायक","title_suppliers":"आपूर्तिकर्ता"},"content-categories":{"fields":{"slug":"काउंटर","title":"वर्ग"},"title":"श्रेणियाँ"},"content-management":{"title":"सामग्री प्रबंधन"},"content-pages":{"fields":{"category-id":"श्रेणियाँ","created-at":"समय बनाया गया","excerpt":"अंश","featured-image":"निरूपित चित्र","page-text":"टेक्स्ट","tag-id":"टैग","title":"शीर्षक"},"title":"पेज"},"content-tags":{"fields":{"slug":"काउंटर","title":"टैग"},"title":"टैग"},"countries":{"fields":{"shortcode":"छोटे संकेत","title":"शीर्षक"},"title":"देश"},"coupon-campaigns":{"fields":{"coupons-amount":"कूपन राशि","description":"विवरण","discount-amount":"छूट राशि","discount-percent":"छूट का प्रतिशत","title":"शीर्षक","valid-from":"से मान्य","valid-to":"इस तक मान्य"},"title":"अभियान"},"coupon-management":{"title":"कूपन प्रबंधन"},"coupons":{"fields":{"campaign":"अभियान","code":"कोड","discount-amount":"छूट राशि","discount-percent":"छूट का प्रतिशत","redeem-time":"रिडीम समय","valid-from":"से मान्य","valid-to":"इस तक मान्य"},"title":"कूपन"},"currencies":{"fields":{"code":"कोड","is_default":"डिफ़ॉल्ट है?","name":"नाम","rate":"मूल्यांकन करें","status":"स्थिति","symbol":"प्रतीक"},"title":"मुद्राओं"},"database-backup":{"title":"डेटाबेस बैकअप"},"departments":{"fields":{"created-by":"के द्वारा बनाई गई","description":"विवरण","name":"नाम"},"title":"विभागों"},"discounts":{"fields":{"description":"विवरण","discount":"छूट","discount-type":"डिस्काउंट प्रकार","name":"नाम"},"title":"छूट"},"download-template":"टेम्पलेट डाउनलोड करें","email-templates":{"fields":{"body":"तन","name":"नाम","subject":"विषय"},"title":"ईमेल टेम्प्लेट"},"expense":{"fields":{"account":"लेखा","amount":"रकम","description":"विवरण","description-file":"विवरण फ़ाइल","entry-date":"प्रवेश की तिथि","expense-category":"व्यय की श्रेणी","payee":"आदाता","payment-method":"भुगतान का तरीका","ref-no":"रेफरी #"},"title":"व्यय"},"expense-category":{"fields":{"name":"नाम"},"title":"व्यय श्रेणियाँ"},"expense-management":{"title":"लेखांकन"},"expense-types":{"title":"व्यय प्रकार"},"faq-categories":{"fields":{"title":"वर्ग"},"title":"श्रेणियाँ"},"faq-management":{"faq":"पूछे जाने वाले प्रश्न","title":"प्रबंधन"},"faq-questions":{"fields":{"answer-text":"उत्तर","category":"वर्ग","question-text":"सवाल"},"title":"प्रशन"},"general-settings":{"title":"सामान्य सेटिंग्स"},"global-settings":{"title":"वैश्विक व्यवस्था"},"global_title":"डिजी लेखा, चालान और बिलिंग सीआरएम","income":{"fields":{"account":"लेखा","amount":"रकम","description":"विवरण","description-file":"विवरण फ़ाइल","entry-date":"प्रवेश की तिथि","income-category":"आय श्रेणी","pay-method":"वेतन विधि","payer":"भुगतानकर्ता","ref-no":"रेफरी #"},"title":"आय"},"income-category":{"fields":{"name":"नाम"},"title":"आय श्रेणियों"},"info":"जानकारी","internal-notifications":{"fields":{"link":"संपर्क","text":"टेक्स्ट","users":"उपयोगकर्ता"},"title":"सूचनाएं"},"invoices":{"fields":{"address":"पता","amount":"रकम","currency":"मुद्रा","customer":"ग्राहक","discount":"छूट","discount_format":"छूट प्रारूप","invoice-date":"चालान की तारीख","invoice-due-date":"बिल की देय तिथि","invoice-no":"चालान #","invoice-notes":"चालान नोट","invoice-prefix":"चालान उपसर्ग","reference":"संदर्भ","show-quantity-as":"मात्रा के रूप में दिखाएं","status":"स्थिति","tax":"कर","tax_format":"कर प्रारूप","title":"शीर्षक"},"title":"चालान"},"knowledgebase":{"title":"ज्ञानधार"},"languages":{"fields":{"code":"कोड","is-rtl":"Rtl है","language":"भाषा"},"title":"बोली"},"manage-projects":{"title":"परियोजनाओं का प्रबंधन करें"},"master-settings":{"fields":{"description":"विवरण","key":"कुंजी","module":"मॉड्यूल"},"title":"मास्टर सेटिंग्स"},"measurement-units":{"fields":{"description":"विवरण","status":"स्थिति","title":"शीर्षक"},"title":"नाप की इकाइयां"},"monthly-report":{"title":"मासिक रिपोर्ट"},"navigation-menues":{"title":"नेविगेशन मेन्स"},"operations_disabled":"डेमो मोड पर ऑपरेशन अक्षम","payment-gateways":{"fields":{"description":"विवरण","logo":"प्रतीक चिन्ह","name":"नाम"},"title":"भुगतान द्वार"},"payments":{"cancelled":"आपने अपना भुगतान रद्द कर दिया है","failed":"भुगतान असफल हुआ","title":"भुगतान"},"permissions":{"fields":{"title":"शीर्षक"},"title":"अनुमतियां"},"product-categories":{"fields":{"description":"विवरण","name":"श्रेणी नाम","photo":"फोटो (अधिकतम 8mb)"},"title":"श्रेणियाँ"},"product-management":{"title":"उत्पाद प्रबंधन"},"product-tags":{"fields":{"name":"नाम"},"title":"टैग"},"products":{"fields":{"actual-price":"वास्तविक कीमत","alert-quantity":"चेतावनी मात्रा","brand":"ब्रांड","category":"वर्ग","description":"विवरण","excerpt":"अंश","hsn-sac-code":"HSN / SAC कोड","image-gallery":"छवि गैलरी","name":"उत्पाद का नाम","other-files":"अन्य फ़ाइलें","product-code":"उत्पाद कोड","product-size":"उत्पाद का आकार","product-weight":"उत्पाद - भार","sale-price":"विक्रय कीमत","stock-quantity":"शेयर मात्रा","tag":"टैग","thumbnail":"थंबनेल","ware-house":"वेयर हाउस"},"gallery-file-types":"स्वीकृत फ़ाइल प्रकार: png, jpg, jpeg, gif","title":"उत्पाद"},"products-return":{"fields":{"address":"पता","currency":"मुद्रा","customer":"ग्राहक","discount":"छूट","invoice-no":"चालान #","invoice-prefix":"चालान उपसर्ग","notes":"टिप्पणियाँ","order-date":"आदेश की तारीख","order-due-date":"नियत तिथि पर आदेश","reference":"संदर्भ","show-quantity-as":"मात्रा के रूप में दिखाएं","status":"स्थिति","subject":"विषय","tax":"कर","update-stock":"स्टॉक अपडेट करें","ware-house":"वेयर हाउस"},"title":"उत्पाद लौटते हैं"},"products-transfer":{"title":"उत्पाद स्थानांतरण"},"project-billing-types":{"fields":{"description":"विवरण","title":"शीर्षक"},"title":"प्रोजेक्ट बिलिंग प्रकार"},"project-statuses":{"fields":{"description":"विवरण","name":"नाम"},"title":"परियोजना की स्थिति"},"projects":{"title":"परियोजनाओं"},"purchase-orders":{"fields":{"address":"पता","amount":"रकम","currency":"मुद्रा","customer":"प्रदायक","discount":"छूट","invoice-no":"चालान #","invoice-prefix":"चालान उपसर्ग","notes":"टिप्पणियाँ","order-date":"पर जारी किया","order-due-date":"नियत तिथि पर आदेश","reference":"संदर्भ","show-quantity-as":"मात्रा के रूप में दिखाएं","status":"स्थिति","subject":"विषय","tax":"कर","update-stock":"स्टॉक अपडेट करें","warehouse":"गोदाम"},"title":"क्रय आदेश"},"quotes":{"fields":{"address":"पता","amount":"रकम","currency":"मुद्रा","customer":"ग्राहक","discount":"छूट","proposal-text":"प्रस्ताव पाठ","quote-date":"भाव तिथि","quote-expiry-date":"एक्सपायरी डेट का उद्धरण दें","quote-no":"बोली नहीं","quote-prefix":"भाव उपसर्ग","reference":"संदर्भ","show-quantity-as":"मात्रा के रूप में दिखाएं","status":"स्थिति","tax":"कर","title":"शीर्षक"},"title":"उल्लेख। उद्धरण"},"recurring-invoices":{"fields":{"address":"पता","amount":"रकम","currency":"मुद्रा","customer":"ग्राहक","discount":"छूट","invoice-date":"चालान की तारीख","invoice-due-date":"बिल की देय तिथि","invoice-no":"चालान #","invoice-notes":"चालान नोट","invoice-prefix":"चालान उपसर्ग","paymentstatus":"भुगतान की स्थिति","products":"उत्पाद","recurring-period":"आवर्ती अवधि","reference":"संदर्भ","show-quantity-as":"मात्रा के रूप में दिखाएं","status":"स्थिति","tax":"कर","title":"शीर्षक"},"title":"आवर्ती चालान"},"recurring-periods":{"fields":{"description":"विवरण","title":"शीर्षक","value":"मूल्य"},"title":"आवर्ती अवधि"},"roles":{"fields":{"permission":"अनुमतियां","title":"शीर्षक"},"title":"भूमिकाएँ"},"sales":{"title":"बिक्री"},"sales-taxes":{"title":"बिक्री कर"},"support":{"fields":{"assigned-to":"को सौंपना","attachments":"संलग्नक","created-by":"के द्वारा बनाई गई","department":"विभाग","description":"विवरण","email":"ईमेल","name":"नाम","priority":"प्राथमिकता","subject":"विषय"},"title":"समर्थन"},"task-calendar":{"status-wise":"स्थिति वार","title":"कैलेंडर"},"task-management":{"title":"कार्य प्रबंधन"},"task-statuses":{"fields":{"color":"रंग","name":"नाम"},"panel-danger":"खतरे का पैनल","panel-default":"डिफ़ॉल्ट पैनल","panel-info":"जानकारी पैनल","panel-primary":"प्राथमिक पैनल","panel-success":"सफलता पैनल","panel-warning":"चेतावनी पैनल","title":"वे स्थितियां"},"task-tags":{"fields":{"name":"नाम"},"title":"टैग"},"tasks":{"fields":{"attachment":"आसक्ति","description":"विवरण","due-date":"नियत तारीख","name":"नाम","start-date":"आरंभ करने की तिथि","status":"स्थिति","tag":"टैग","user":"को सौंपना"},"task-status-updated":"टास्क की स्थिति सफलतापूर्वक अपडेट की गई","title":"कार्य"},"taxes":{"fields":{"description":"विवरण","name":"नाम","rate":"मूल्यांकन करें","rate-type":"दर प्रकार"},"title":"करों"},"time-entries":{"fields":{"description":"विवरण","end-date":"अंतिम तिथि","project":"परियोजना","start-date":"आरंभ करने की तिथि"},"title":"समय की प्रविष्टियाँ"},"transfers":{"fields":{"amount":"रकम","date":"दिनांक","description":"विवरण","from":"से","payment-method":"भुगतान का तरीका","ref-no":"रेफरी #","to":"सेवा मेरे"},"title":"स्थानांतरण"},"user-actions":{"created_at":"पहर","fields":{"action":"कार्य","action-id":"कार्रवाई आईडी","action-model":"एक्शन मॉडल","user":"उपयोगकर्ता"},"title":"उपयोगकर्ता क्रियाएँ"},"user-management":{"title":"उपयोगकर्ता प्रबंधन"},"users":{"activate":"सक्रिय","active":"सक्रिय","fields":{"contact-reference":"संदर्भ से संपर्क करें","department":"विभाग","email":"ईमेल","name":"नाम","password":"पारण शब्द","remember-token":"टोकन याद रखें","role":"भूमिका","status":"स्थिति"},"suspend":"निलंबित करें","title":"उपयोगकर्ता"},"warehouses":{"fields":{"address":"पता","description":"विवरण","name":"नाम"},"title":"गोदामों"}},"hi.pagination":{"next":"आगामी &quot;","previous":"&quot; पिछला"},"hi.passwords":{"password":"पासवर्ड कम से कम छह वर्ण का होना चाहिए और पुष्टि से मेल खाना चाहिए।","reset":"आपका पासवर्ड रिसेट कर दिया गया है!","sent":"हमने आपका पासवर्ड रीसेट लिंक ई-मेल कर दिया है!","token":"यह पासवर्ड रीसेट टोकन अमान्य है।","user":"हमें उस ई-मेल पते वाला उपयोगकर्ता नहीं मिल रहा है।"},"hi.quickadmin":{"qa_current_password":"वर्तमान पासवर्ड","qa_dashboard_text":"आप लोग्ड इन हो चुके हैं!","qa_edit":"संपादित करें","qa_login":"लॉग इन करें","qa_new_password":"नया पासवर्ड","qa_password_confirm":"नया पासवर्ड पुष्टि","qa_remember_me":"मुझे याद रखना","qa_reset_password":"पासवर्ड रीसेट","qa_reset_password_woops":"<strong>ओह!</strong> इनपुट में समस्याएं थीं:","qa_save":"बचाना","qa_there_were_problems_with_input":"इनपुट में समस्याएं थीं","quickadmin_title":"लेखा सीआरएम"},"hi.sitethemes::global":{"site-theme":{"make-default":"नई थीम सक्रिय की गई"},"site-themes":{"fields":{"description":"विवरण","is-active":"सक्रिय है","make-default":"थीम डिफ़ॉल्ट के रूप में सेट","settings-data":"सेटिंग्स डेटा","slug":"काउंटर","theme-color":"थीम का रंग","theme-title-key":"थीम शीर्षक कुंजी","title":"शीर्षक"},"make-default":"नई थीम सक्रिय की गई","no":"नहीं","not-allowed-default":"डिफ़ॉल्ट थीम को संपादित करने की अनुमति नहीं है। आप साइट सेटिंग्स में संपादित कर सकते हैं।","not-valid-theme":"उन्हें फ़ाइल मान्य नहीं है","not-valid-zip":"मान्य ज़िप फ़ाइल नहीं। कृपया मान्य ज़िप फ़ाइल अपलोड करें","theme-already-exists":"थीम पहले से मौजूद है","theme-install-success":"थीम सफलतापूर्वक स्थापित किया गया","title":"साइट थीम","yes":"हाँ"}},"hi.strings":{"A fresh verification link has been sent to your email address.":"आपके ईमेल पते पर एक ताजा सत्यापन लिंक भेजा गया है।","Before proceeding, please check your email for a verification link.":"आगे बढ़ने से पहले, कृपया सत्यापन लिंक के लिए अपना ईमेल देखें।","Confirm Password":"पासवर्ड की पुष्टि कीजिये","E-Mail Address":"ईमेल पता","If you did not receive the email":"यदि आपको ईमेल प्राप्त नहीं हुआ है","Name":"नाम","Password":"पारण शब्द","Register":"रजिस्टर","Verify Your Email Address":"अपने ईमेल पते की पुष्टि करें","click here to request another":"दूसरा अनुरोध करने के लिए यहां क्लिक करें"},"hi.validation":{"accepted":": विशेषता को स्वीकार किया जाना चाहिए।","active_url":": विशेषता एक मान्य URL नहीं है।","after":"ए: विशेषता के बाद की तारीख होनी चाहिए: तारीख।","after_or_equal":"विशेषता: तारीख के बाद या उसके बराबर की तारीख होना चाहिए।","alpha":": विशेषता में केवल अक्षर हो सकते हैं।","alpha_dash":": विशेषता में केवल अक्षर, संख्याएं, डैश और अंडरस्कोर हो सकते हैं।","alpha_num":": विशेषता में केवल अक्षर और संख्याएँ हो सकती हैं।","array":": विशेषता एक सरणी होनी चाहिए।","before":"विशेषता: तारीख से पहले की तारीख होनी चाहिए।","before_or_equal":"विशेषता: तिथि से पहले या उसके बराबर की तारीख होना चाहिए।","between":{"array":": गुण के बीच होना चाहिए: न्यूनतम और: अधिकतम आइटम।","file":"ए: विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम किलोबाइट।","numeric":"ए: विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम।","string":": विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम वर्ण।"},"boolean":": विशेषता फ़ील्ड सही या गलत होना चाहिए।","confirmed":": विशेषता पुष्टि मेल नहीं खाती।","custom":{"attribute-name":{"rule-name":"सीमा शुल्क संदेश"}},"date":": विशेषता मान्य दिनांक नहीं है।","date_format":": विशेषता प्रारूप से मेल नहीं खाती: प्रारूप।","different":": विशेषता और: अन्य अलग होना चाहिए।","digits":": गुण होना चाहिए: अंक अंक।","digits_between":": विशेषता के बीच होना चाहिए: न्यूनतम और: अधिकतम अंक।","dimensions":": विशेषता में अमान्य छवि आयाम हैं।","distinct":"विशेषता फ़ील्ड में डुप्लिकेट मान है।","email":": विशेषता एक मान्य ईमेल पता होना चाहिए।","exists":"चयनित: विशेषता अमान्य है।","file":": विशेषता एक फ़ाइल होनी चाहिए।","filled":"विशेषता फ़ील्ड का मान होना चाहिए।","gt":{"array":"गुण: मान आइटम से अधिक होना चाहिए।","file":"गुण: मान किलोबाइट से अधिक होना चाहिए।","numeric":"गुण: मान से अधिक होना चाहिए।","string":"गुण: मान वर्णों से अधिक होना चाहिए।"},"gte":{"array":"ए: विशेषता के पास होना चाहिए: मूल्य आइटम या अधिक।","file":"ए: विशेषता से अधिक या बराबर होना चाहिए: मूल्य किलोबाइट।","numeric":"गुण: मान से अधिक या बराबर होना चाहिए: मान।","string":"गुण: मान वर्ण से अधिक या बराबर होना चाहिए।"},"image":": विशेषता एक छवि होनी चाहिए।","in":"चयनित: विशेषता अमान्य है।","in_array":": विशेषता फ़ील्ड में मौजूद नहीं है: अन्य।","integer":"विशेषता: पूर्णांक होना आवश्यक है।","ip":": विशेषता एक मान्य IP पता होना चाहिए।","ipv4":"विशेषता: एक मान्य IPv4 पता होना चाहिए।","ipv6":"विशेषता: एक मान्य IPv6 पता होना चाहिए।","json":"विशेषता: एक वैध JSON स्ट्रिंग होना चाहिए।","lt":{"array":"गुण: से कम होना चाहिए: मूल्य आइटम।","file":"गुण: मान किलोबाइट से कम होना चाहिए।","numeric":"गुण: मान से कम होना चाहिए।","string":"गुण: मान वर्णों से कम होना चाहिए।"},"lte":{"array":": विशेषता से अधिक नहीं होना चाहिए: मूल्य आइटम।","file":"ए: विशेषता से कम या बराबर होना चाहिए: मूल्य किलोबाइट।","numeric":"गुण: मान इससे कम या बराबर होना चाहिए: मान।","string":"गुण: मान वर्ण से कम या बराबर होना चाहिए।"},"max":{"array":": विशेषता से अधिक नहीं हो सकता है: अधिकतम आइटम।","file":"विशेषता: अधिकतम किलोबाइट से अधिक नहीं हो सकती है।","numeric":"विशेषता: अधिकतम से अधिक नहीं हो सकती है।","string":": विशेषता से अधिक नहीं हो सकता है: अधिकतम वर्ण।"},"mimes":": विशेषता प्रकार की एक फ़ाइल होनी चाहिए: मान।","mimetypes":": विशेषता प्रकार की एक फ़ाइल होनी चाहिए: मान।","min":{"array":": विशेषता में कम से कम: न्यूनतम आइटम होना चाहिए।","file":"ए: विशेषता कम से कम होनी चाहिए: न्यूनतम किलोबाइट।","numeric":"ए: विशेषता कम से कम होनी चाहिए: न्यूनतम।","string":"ए: विशेषता कम से कम होनी चाहिए: मिन वर्ण।"},"not_in":"चयनित: विशेषता अमान्य है।","not_regex":": विशेषता स्वरूप अमान्य है।","numeric":": विशेषता एक संख्या होनी चाहिए।","present":": विशेषता फ़ील्ड मौजूद होना चाहिए।","regex":": विशेषता स्वरूप अमान्य है।","required":": विशेषता फ़ील्ड आवश्यक है।","required_if":": विशेषता फ़ील्ड आवश्यक है जब: अन्य है: मान।","required_unless":"जब तक: अन्य: में है: विशेषता फ़ील्ड आवश्यक है।","required_with":": मान मौजूद होने पर विशेषता फ़ील्ड आवश्यक है।","required_with_all":": मान मौजूद होने पर विशेषता फ़ील्ड आवश्यक है।","required_without":"जब मान मौजूद नहीं है: विशेषता फ़ील्ड आवश्यक है।","required_without_all":"जब कोई भी मान मौजूद नहीं है: विशेषता फ़ील्ड आवश्यक है।","same":": विशेषता और: अन्य मेल खाना चाहिए।","size":{"array":": विशेषता में: आइटम होना चाहिए।","file":"ए: विशेषता होनी चाहिए: आकार किलोबाइट।","numeric":"ए: विशेषता होनी चाहिए: आकार।","string":": गुण होना चाहिए: आकार वर्ण।"},"string":": विशेषता एक स्ट्रिंग होनी चाहिए।","timezone":": विशेषता मान्य क्षेत्र होनी चाहिए।","unique":"The: विशेषता को पहले ही लिया जा चुका है।","uploaded":": विशेषता अपलोड करने में विफल रही।","url":": विशेषता स्वरूप अमान्य है।"},"te._json":{"A fresh verification link has been sent to your email address":{"":"మీ ఇమెయిల్ చిరునామాకు తాజా ధృవీకరణ లింక్ పంపబడింది."},"Before proceeding, please check your email for a verification link":{"":"కొనసాగే ముందు, దయచేసి ధృవీకరణ లింక్ కోసం మీ ఇమెయిల్ను తనిఖీ చేయండి."},"Confirm Password":"పాస్వర్డ్ని నిర్ధారించండి","E-Mail Address":"ఇ-మెయిల్ చిరునామా","If you did not receive the email":"మీరు ఇమెయిల్ను అందుకోకపోతే","Name":"పేరు","Password":"పాస్వర్డ్","Register":"నమోదు","Verify Your Email Address":"మీ ఈ - మెయిల్ చిరునామాను తనిఖీ చేసుకోండి","click here to request another":"మరో అభ్యర్థనను ఇక్కడ క్లిక్ చేయండి"},"te.auth":{"suspended":"మమ్మల్ని క్షమించండి!. మీ ఖాతా సస్పెండ్ చేయబడింది. దయచేసి నిర్వాహకుడిని సంప్రదించండి","throttle":"చాలా ఎక్కువ లాగిన్ ప్రయత్నాలు. దయచేసి మళ్ళీ ప్రయత్నించండి: సెకన్లు సెకన్లు."},"te.custom":{"accounts":{"sum-of-all-accounts":". పేజీకి రికార్డుల మొత్తం"},"app_messages":"సందేశాలు","articles":{"category":"వర్గం :","related-articles":"ఈ విభాగంలోని వ్యాసాలు","tag":"ట్యాగ్:"},"common":{"active":"Active","are-you-sure":"మీరు చెప్పేది నిజమా?","are-you-sure-delete":"మీరు రికార్డ్ను ఖచ్చితంగా తొలగించాలనుకుంటున్నారా?","are-you-sure-duplicate":"మీరు ఖచ్చితంగా ఈ రికార్డ్ను నకిలీ చేయాలనుకుంటున్నారా?","browser":"బ్రౌజర్","cancel":"రద్దు","change-status":"స్థితి మార్చండి","city":"సిటీ","close":"Close","comments":"వ్యాఖ్యలు","country":"దేశం","description":"వివరణ","download-pdf":"PDF ను డౌన్లోడ్ చేయండి","duplicate":"క్లోన్","email":"ఇమెయిల్:","extra":"అదనపు","inactive":"ఇన్-యాక్టివ్","ip":"IP చిరునామా","loading":"లోడ్...","mark-as":"మార్క్ గా","next":"తరువాత","no":"తోబుట్టువుల","not-allowed":"క్షమించాలి! ఈ పేజీని యాక్సెస్ చేయడానికి మీకు అనుమతి లేదు","pdf":"PDF","percent":"శాతం (%)","phone":"ఫోన్:","preview":"ప్రివ్యూ","previous":"మునుపటి","print":"ప్రింట్","save":"సేవ్","send":"పంపండి","sms":"SMS","time":"సమయం","update-manage":"నవీకరణ &amp; నిర్వహించండి","value":"విలువ","view-pdf":"PDF ను వీక్షించండి","yes":"అవును"},"currencies":{"currency_layer_message":"అనువర్తనం కరెన్సీలేర్.కామ్ API ని అనుసంధానించింది. ఇది మీ ఇన్వాయిస్లకు నిజ-సమయ కరెన్సీ మార్పిడిని అందిస్తుంది. 168 ప్రపంచ కరెన్సీల కోసం ఖచ్చితమైన ఎక్స్ఛేంజ్ రేట్లు, 60 సెకనుల నుండి 60 సెకనుల వరకు డేటా నవీకరణలతో. దయచేసి సందర్శించండి: API కీని పొందడానికి url. దయచేసి API కీని నవీకరించండి: settings_url. మీరు ఉత్తమ ప్లాన్ చేస్తున్నారని నిర్ధారించుకోండి. గమనిక: ఉచిత ప్లాన్ కరెన్సీ మార్పిడికి మద్దతు ఇవ్వదు.","update_currency_online":"ఆన్లైన్లో కరెన్సీ మారక రేట్లను అప్డేట్ చేయాలా?"},"dashboard":{"phone1":"ఫోన్ 1:"},"email":{"attach-pdf":"PDF ను జోడించాలా?","bcc":"బిసిసి","bcc-admin":"Bcc కు నిర్వాహకుడికి పంపాలా?","cc":"CC","customer-name":"వినియోగదారుని పేరు","message-body":"సందేశం బాడీ","send":"పంపండి","subject":"Subject","to":"టు"},"expense":{"summary-in":"లో వ్యయ సారాంశం","total-expense":"మొత్తం ఖర్చు","total-expense-last-30days":"మొత్తం వ్యయం చివరి 30 రోజులు","total-expense-this-month":"మొత్తం ఖర్చు ఈ నెల","total-expense-this-week":"మొత్తం వ్యయం ఈ వారం"},"incomes":{"date":"తేదీ:","for":"కోసం:","id":"లావాదేవీ ID: TRN #","na":"N / A","paymethod":"చెల్లింపు పద్ధతి:","receipt":"స్వీకరణపై","receipt-generated-on":"ఎలక్ట్రానిక్ రసీదు. సృష్టించబడినది:","show-graph":"గ్రాఫ్ చూపించు","show-report":"రిపోర్ట్ చూపించు","spent-to":"దీనికి మించి:","summary-in":"ఇన్కమ్ సారాంశం","total-income":"మొత్తం రాబడి","total-income-last-30days":"మొత్తం ఆదాయం గత 30 రోజులు","total-income-this-month":"మొత్తం ఆదాయం ఈ నెల","total-income-this-week":"మొత్తం ఆదాయం ఈ వారం"},"invoices":{"Unpaid":"అన్ పెయిడ్","accepted":"ఆమోదించబడిన","account":"ఖాతా","amount":"మొత్తం","amount-due":"బకాయి మొత్తం :","app_back_to_invoice":"ఇన్వాయిస్కు తిరిగి వెళ్ళు","attn":"Attn:","authorized-person":"అర్హత కలిగిన వ్యక్తి","business-owner":"వ్యాపార యజమాని","cancelled":"రద్దు","category":"వర్గం","clear-signature":"సంతకంను క్లియర్ చేయండి","date":"తేదీ","description":"వివరణ","due":"కారణంగా (చెల్లించనిది)","due-date":"గడువు తేది :","duplicated":"ఇన్వాయిస్ విజయవంతంగా క్లోన్ చేయబడింది","edit":"ఇన్వాయిస్ను సవరించండి","email":"ఇమెయిల్","history":"ఆపరేషన్స్ చరిత్ర","invoice-date":"ఇన్వాయిస్లు తేదీ:","invoice-notification":"వాయిస్ నోటిఫికేషన్","invoice-status":"వాయిస్ స్థితి:","invoice-to":"ఇన్వాయిస్:","invoice-total":"ఇన్వాయిస్లు మొత్తం:","invoice_no":"ఇన్వోకీ #","invoice_total":"ఇన్వాయిస్ మొత్తం:","make-payment":"చెల్లింపు చేయండి","messages":{"account":"దయచేసి ఖాతాని ఎంచుకోండి","amount":"దయచేసి మొత్తాన్ని నమోదు చేయండి","category":"దయచేసి వర్గం ఎంచుకోండి","date":"దయచేసి తేదీని ఎంచుకోండి","paymethod":"దయచేసి చెల్లింపు పద్ధతిని ఎంచుకోండి","save-success":"చెల్లింపు విజయవంతంగా జోడించబడింది","toemail":"దయచేసి ఇమెయిల్ చిరునామాను నమోదు చేయండి","transaction_id":"దయచేసి లావాదేవీ ID ని నమోదు చేయండి"},"method":"పైకము చెల్లించు విదానం","no-payment":"చెల్లింపు ఇంకా","note":"గమనిక :","notification":"వాయిస్ నోటిఫికేషన్","ontime":"ఒక్కసారి","paid":"చెల్లింపు","partial":"పాక్షిక చెల్లింపు","payer":"చెల్లింపుదారు","payment-for":"చెల్లింపు","payment-method":"పైకము చెల్లించు విదానం :","payment-overdue":"చెల్లింపు మీరిన","payment-received":"చెల్లింపు అందినది","payment-refund":"రీఫండ్ సృష్టించబడింది","payment-reminder":"చెల్లింపు రిమైండర్","qty":"అంశాల","reference":"సూచన","rejected":"తిరస్కరించబడిన","related-transactions":"సంబంధిత లావాదేవీలు","repeat-on":"పునరావృతం:","sign-above":"పైన సైన్ ఇన్ చేయండి","signature":"సంతకం","signature-saved":"సంతకం విజయవంతంగా సేవ్ చేయబడింది","stripe":"గీత","title-caps":"వాయిస్","total-paid":"చెల్లించిన మొత్తం:","transaction_id":"లావాదేవి ఐడి","unpaid":"అన్ పెయిడ్","upload-documents":"పత్రాలను అప్లోడ్ చేయండి","upload-success":"ఫైల్లు విజయవంతంగా అప్లోడ్ చేయబడ్డాయి"},"menu":{"balance":"సంతులనం","create-contact":"పరిచయాన్ని సృష్టించండి","create-invoice":"కొత్త ఇన్వాయిస్","create-quote":"క్రొత్త కోట్","crm":"CRM","customers":"వినియోగదారుడు","miscellaneous":"ఇతరాలు","project":"ప్రాజెక్ట్","sales":"అమ్మకాలు","stock":"స్టాక్","support":"మద్దతు","tickets":"టికెట్లు"},"messages":{"already-exists":"ఈ పరిచయానికి ఇప్పటికే యూజర్ ఆక్సెస్ ఉంది","already-exists-email":"ఈ ఇమెయిల్ చిరునామా ఇప్పటికే ఉంది","click-here":"సవరించడానికి <a href=\":url\">ఇక్కడ</a> క్లిక్ <a href=\":url\">చేయండి</a>","contact-dont-have-email":"ఈ పరిచయానికి ఇమెయిల్ చిరునామా లేదు. ఈ - మెయిల్ అడ్రస్ నింపండి","crud_disabled":"CRUD కార్యకలాపాలు డెమోలో నిలిపివేయబడ్డాయి","failed":"విఫలమైంది:","info":"సమాచారం:","invalid_record":"చెల్లని రికార్డ్","mailsent":"ఇమెయిల్ విజయవంతంగా పంపబడింది","not_allowed":"క్షమించాలి! ఈ పేజీని యాక్సెస్ చేయడానికి మీకు అనుమతి లేదు","not_found":"క్షమించాలి! రికార్డ్ కనుగొనబడలేదు.","not_found_payment":"చెల్లింపు రికార్డ్ కనుగొనబడలేదు.","profile_updated":"ప్రొఫైల్ విజయవంతంగా నవీకరించబడింది","record_deleted":"రికార్డ్ విజయవంతంగా తొలగించబడింది","record_restored":"రికార్డ్ విజయవంతంగా పునరుద్ధరించబడింది","record_saved":"రికార్డ్ విజయవంతంగా సేవ్ చేయబడింది","record_updated":"రికార్డ్ విజయవంతంగా నవీకరించబడింది","records_deleted":"రికార్డ్లు విజయవంతంగా తొలగించబడ్డాయి","smssent":"SMS విజయవంతంగా పంపబడింది","somethiswentwrong":"ఏదో తప్పు జరిగింది","status-changed":"స్థితి విజయవంతంగా మార్చబడింది","success":"సక్సెస్:","time_out":"సమయం ముగిసినది"},"payments":{"amount":"మొత్తం :","customer":"కస్టమర్:","date":"తేదీ:","order-no":"ఆర్డర్ నం:","products":"ఉత్పత్తులు","status":"స్థితి","success":"మీ చెల్లింపు విజయం."},"products":{"action":"యాక్షన్","add_new":"వరుసను జోడించు","additional-discount":"అదనపు డిస్కౌంట్ (-)","additional-tax":"అదనపు పన్ను (+)","already-in-cart":"ఇప్పటికే కార్ట్ లో ఉత్పత్తి. మీరు పరిమాణం పెంచాలనుకుంటున్నారా?","already-in-cart-message":"ఇప్పటికే కార్ట్ లో ఉత్పత్తి.","amount":"మొత్తం","amount-payable":"చెల్లించవలసిన మొత్తం","currency_help":"ప్రత్యక్ష క్లయింట్ ఆధారంగా మీ క్లయింట్ కోసం చెల్లింపు కరెన్సీ","default_discount":"డిఫాల్ట్ డిస్కౌంట్ రేట్","default_tax":"డిఫాల్ట్ పన్ను రేట్","discount":"డిస్కౌంట్","discount_percent":"డిస్కౌంట్ (%)","fields":{"excerpt":"ఎక్సెర్ప్ట్","excerpt_placeholder":"ఉత్పత్తి గురించి చిన్న వివరణ","product_status":"స్థితి"},"grand_total":"సంపూర్ణ మొత్తము","item_name":"వస్తువు పేరు","keep_blank":"స్వయంచాలకంగా వాయిస్ నంబర్ను రూపొందించడానికి ఖాళీని ఉంచండి","please-select-product":"దయచేసి ఉత్పత్తిని ఎంచుకోండి","please_select":"దయచేసి ఎంచుకోండి","quantity":"మొత్తము","rate":"రేటు","should-be-one":"పరిమాణం సున్నా ఉండకూడదు","sub_total":"సబ్ మొత్తం","tax":"పన్ను","tax_percent":"పన్ను(%)","total_discount":"మొత్తం డిస్కౌంట్ (-)","total_tax":"మొత్తం పన్ను (+)"},"products-transfer":{"no_products_transfered":"ఏ ఉత్పత్తులు బదిలీ చేయలేదు","title":"ఉత్పత్తులు బదిలీ","transfer_from":"బదిలీ (గిడ్డంగి)","transfer_to":"బదిలీ (గిడ్డంగి)","transfered":"ఉత్పత్తులు విజయవంతంగా బదిలీ చేయబడ్డాయి"},"purchase_orders":{"accepted":"ఆమోదించబడిన","amount":"మొత్తం","app_back_to_quote":"ఆర్డర్స్కు తిరిగి వెళ్లు","are-you-sure":"మీరు చెప్పేది నిజమా?","authorized-person":"అర్హత కలిగిన వ్యక్తి","convert-to-invoice":"ఇన్వాయిస్కు మార్చండి","convert-to-invoice-are-you-sure":"కోట్ ఇన్వాయిస్గా మార్చండి. మీరు చెప్పేది నిజమా?","convertedtoinvoice":"ఆర్డర్ విజయవంతంగా ఇన్వాయిస్కు మార్చబడింది","date":"తేదీ","dead":"డెడ్","delivered":"పంపిణీ","description":"వివరణ","documents-uploaded":"పత్రాలు అప్లోడ్ చేయబడ్డాయి","due-date":"గడువు తేది :","edit":"మార్చు","history":"ఆర్డర్ చరిత్ర","invoice-created-quote":"కోట్ నుండి ఇన్వాయిస్ రూపొందించబడింది","note":"గమనిక :","on-hold":"హోల్డ్ ఆన్","order_no":"ఆర్డర్ నం.","payment-deleted":"చెల్లింపు విజయవంతంగా తొలగించబడింది","payment-inserted":"చెల్లింపు విజయవంతంగా చేర్చబడింది","quote-accepted":"ఆర్డర్ అంగీకరించబడింది","quote-already-convert":"ఆర్డర్ ఇప్పటికే ఇన్వాయిస్గా మార్చబడింది","quote-cancelled":"ఆర్డర్ రద్దు చేయబడింది","quote-created":"ఆర్డర్ సృష్టించబడింది","quote-created-duplicate":"మరొక కోట్ను నకిలీ చేస్తూ ఆర్డర్ సృష్టించబడింది","quote-date":"ఆర్డర్ తేదీ:","quote_no":"ఆర్డర్ #","recipient":"గ్రహీత","reference":"సూచన","rejected":"తిరస్కరించబడిన","related-transactions":"చెల్లింపు చరిత్ర","send-quote":"ఆర్డర్ సృష్టించబడింది","status-changed-accepted":"స్థితి ఆమోదించబడింది","status-changed-dead":"స్థితి చనిపోయిన మారింది","status-changed-delivered":"స్థితి డెలివర్ చెయ్యబడింది","status-changed-on-hold":"స్థితి హోల్డ్కు మార్చబడింది","status-changed-rejected":"స్థితి తిరస్కరించబడింది","title":"కొనుగోలు ఆర్డర్లు","title-single":"కొనుగోలు ఆర్డర్","total":"మొత్తం:","unpaid":"అన్ పెయిడ్","upload-documents":"పత్రాలను అప్లోడ్ చేయండి","upload-success":"ఫైల్ను విజయవంతంగా అప్లోడ్ చేయండి","view-now":"ఇప్పుడు చూడండి"},"reports":{"assets-report":"ఆస్తుల నివేదిక","expense-report":"ఖర్చు నివేదిక","generated-reports":"ఉత్పత్తి చేసిన నివేదికలు","income-report":"ఆదాయం నివేదిక","products-report":"ఉత్పత్తులు రిపోర్ట్","projects-report":"కాంటాక్ట్స్ ప్రాజెక్ట్స్ నివేదికలు","purchase-order-report":"కొనుగోలు ఆర్డర్స్ రిపోర్ట్","tasks-report":"టాస్క్స్ రిపోర్ట్","users-report":"వినియోగదారులు నివేదించు"},"settings":{"Authorized-Person":"అర్హత కలిగిన వ్యక్తి","Authorized-Person-Designation":"అధికారం గల వ్యక్తి హోదా","Authorized-Person-Signature":"అధికార వ్యక్తి సంతకం","Company-Address":"కంపెనీ చిరునామా","Company_Name_On_Invoice":"కంపెనీ పేరు వాయిస్ ఆన్","Invoice-Logo":"ఇన్వాయిస్ లోగో","TWILIO_SID":"ట్విలియోన్ SID","TWILIO_TOKEN EDIT":"ట్విలియో టోకెన్","account_type":"ఖాతా రకం","address":"చిరునామా","cash":"క్యాష్","company-name":"కంపెనీ పేరు","contact_email":"ఇమెయిల్ సంప్రదించండి","country_code":"దేశం కోడ్","crud_disabled":"CRUD కార్యకలాపాలు డెమోలో నిలిపివేయబడ్డాయి","currency":"కరెన్సీ","currency_code":"కరెన్సీ కోడ్","date_format":"తేదీ ఫార్మాట్","date_format_js":"తేదీ నుండి JS","default-account":"ఆర్డర్ చెల్లింపుల కోసం డిఫాల్ట్ ఖాతా","default-payment-gateway":"డిఫాల్ట్ చెల్లింపు గేట్వే","default-sms-gateway":"డిఫాల్ట్ SMS గేట్వే","description":"వివరణ","email":"ఇమెయిల్","enable-signature-part":"సంతకం భాగం ప్రారంభించు","enable_products_slider":"ఉత్పత్తులు స్లైడర్ ప్రారంభించు?","google_analytics":"గూగుల్ విశ్లేషణలు","hide_stripe_remember_me_box":"నాకు బాక్స్ గుర్తుంచుకో","home_page_caption":"హోమ్ పేజి శీర్షిక","home_page_tagline":"హోం పేజి ట్యాగ్ లైన్","image":"చిత్రం","key":"కీ","mail_driver":"మెయిల్ డ్రైవర్","mail_encryption":"ఎన్క్రిప్షన్","mail_host":"మెయిల్ హోస్ట్","mail_password":"మెయిల్ పాస్వర్డ్","mail_port":"మెయిల్ పోర్ట్","mail_username":"మెయిల్ యూజర్ పేరు","make_default":"డిఫాల్ట్గా చేయండి","message_type":"సందేశ పద్ధతి","meta_description":"మెటా వివరణ","meta_keywords":"మెటా కీవర్డ్లు","moduletype":"మాడ్యూల్ రకం","no_records_found":"ఎటువంటి పత్రాలు లభించలేదు","not_found":"రికార్డ్ కనుగొనబడలేదు","option-text":"ఎంపిక టెక్స్ట్","paypal":"Paypal","payu":"PayU","payu_merchant_key":"మర్చంట్ కీ","payu_salt":"ఉ ప్పు","payu_testmode":"టెస్ట్ మోడ్ ఉందా?","payu_working_key":"వర్కింగ్ కీ","phone":"ఫోన్","phone_number_expression":"ఫోన్ సంఖ్య వ్యక్తీకరణ","plivo_auth_id":"ప్లీవో ప్రమాణ ID","plivo_auth_token":"ప్లీవో ఆథ్ టోకెన్","products_selection":"ఉత్పత్తులు ఎంపిక","require_billing_address":"బిల్లింగ్ చిరునామా అవసరం","rights_reserved":"కోప్ రైట్స్","save":"సేవ్","settings":"సెట్టింగులు","site-logo":"సైట్ లోగో","site-mini-name":"సైట్ చిన్న పేరు","site-title":"సైట్ శీర్షిక","site_address":"చిరునామా","site_city":"సైట్ సిటీ","site_country":"సైట్ దేశం","site_favicon":"ఇష్టాంశ చిహ్నం","site_logo":"సైట్ లోగో","site_phone":"సైట్ ఫోన్","site_state":"సైట్ రాష్ట్రం","site_title":"సైట్ శీర్షిక","site_zipcode":"జిప్ కోడ్","slider_type":"సెట్టింగులు టైప్","sms_driver":"SMS డ్రైవర్","status":"స్థితి","stripe_checkout_button_label":"Checkout బటన్ లేబుల్","stripe_checkout_popup_description":"వివరణ","stripe_checkout_popup_image":"పాప్అప్ చిత్రం","stripe_checkout_popup_title":"పాప్అప్ టైటిల్","stripe_currency":"గీత కరెన్సీ","stripe_key":"గీత కీ","stripe_mode":"మోడ్","stripe_secret":"గీత సీక్రెట్","system_timezone":"సమయమండలం","theme_color":"థీమ్ రంగు","tool-tip":"టూల్ చిట్కా","total-options":"మొత్తం ఎంపికలు","twilio_sid":"ట్విలియో సిడ్","twilio_token":"ట్విలియో టోకెన్","type":"రకం","update":"నవీకరణ","value":"విలువ","with-out-payment":"చెల్లింపుతో ఆదేశాలను ఆమోదించాలా?"},"tasks":{"calendar":"పనులు క్యాలెండర్","messages":{"task-created":"టాస్క్ విజయవంతంగా సృష్టించబడింది","task-deleted":"విధి విజయవంతంగా తొలగించబడింది","task-updated":"విధి విజయవంతంగా నవీకరించబడింది"},"statuswise-tasks":"స్థితి స్థాయి పనులు"},"transfers":{"account-shouldnot-same":"అదే ఖాతా మధ్య మీరు బదిలీ చేయలేరు","amount-transfered":"మొత్తం విజయవంతంగా బదిలీ చేయబడింది"},"translations":{"title":"అనువాదాలు"}},"te.global":{"accounts":{"fields":{"account-number":"ఖాతా సంఖ్య","contact-person":"వ్యక్తి సంప్రదించండి","description":"వివరణ","initial-balance":"ప్రారంభ సంతులనం","name":"పేరు","phone":"ఫోన్","url":"URL"},"title":"అకౌంట్స్"},"app_action":"యాక్షన్","app_action_id":"చర్య ఐడి","app_action_model":"యాక్షన్ మోడల్","app_add_key":"కీని జోడించు","app_add_new":"కొత్తది జత పరచండి","app_address":"చిరునామా","app_administrator_can_create_other_users":"నిర్వాహకుడు (ఇతర వినియోగదారులు సృష్టించగలరు)","app_aggregate_function_use":"ఉపయోగించడానికి మొత్తం ఫంక్షన్","app_all":"అన్ని","app_all_messages":"అన్ని సందేశాలు","app_amount":"మొత్తం","app_answer":"సమాధానం","app_are_you_sure":"మీరు చెప్పేది నిజమా?","app_asset":"ఆస్తి","app_assets":"ఆస్తులు","app_assets_history":"ఆస్తుల చరిత్ర","app_assets_management":"ఆస్తుల నిర్వహణ","app_assigned_to":"కేటాయించిన","app_assigned_user":"కేటాయించిన (వినియోగదారు)","app_attachment":"జోడింపు","app_axis":"యాక్సిస్","app_back_to_list":"జాబితాకు తిరిగి వెళ్ళు","app_basic_crm":"ప్రాథమిక CRM","app_budget":"బడ్జెట్","app_calendar":"క్యాలెండర్","app_calendar_sources":"క్యాలెండర్ మూలాలు","app_campaign":"ప్రచారం","app_campaigns":"ప్రచారాలు","app_categories":"వర్గం","app_category":"వర్గం","app_category_name":"వర్గం పేరు","app_change_notifications_field_1_label":"వినియోగదారుకు ఇమెయిల్ నోటిఫికేషన్ను పంపండి","app_change_notifications_field_2_label":"CRUD ఎంట్రీ చేసినప్పుడు","app_change_password":"పాస్ వర్డ్ ను మార్చండి","app_chart_type":"చార్ట్ రకం","app_client":"క్లయింట్","app_client_management":"క్లయింట్ నిర్వహణ","app_client_management_settings":"క్లయింట్ నిర్వహణ సెట్టింగులు","app_client_status":"క్లయింట్ స్థితి","app_client_statuses":"క్లయింట్ స్థాయిలు","app_clients":"క్లయింట్లు","app_code":"కోడ్","app_colvis":"కాలమ్ దృశ్యమానత","app_companies":"కంపెనీలు","app_company":"కంపెనీ","app_company_name":"కంపెనీ పేరు","app_confirm_password":"పాస్వర్డ్ని నిర్ధారించండి","app_contact_management":"నిర్వహణ నిర్వహణ","app_contacts":"కాంటాక్ట్స్","app_content_management":"విషయ గ్రంథస్త నిర్వహణ","app_copy":"కాపీ","app_copy_paste_url_bellow":"బటన్, దిగువ URL ను మీ వెబ్ బ్రౌజర్లో కాపీ చేసి అతికించండి:","app_country":"దేశం","app_coupon_management":"కూపన్ మేనేజ్మెంట్","app_coupons":"కూపన్లు","app_coupons_amount":"కూపన్లు మొత్తం","app_create":"సృష్టించు","app_create_new_calendar_source":"కొత్త క్యాలెండర్ మూలాన్ని సృష్టించండి","app_create_new_notification":"కొత్త నోటిఫికేషన్ సృష్టించండి","app_create_new_report":"కొత్త నివేదికను సృష్టించండి","app_created_at":"వద్ద సృష్టించబడింది","app_crud_date_field":"క్రుడ్ డే ఫీల్డ్","app_crud_event_field":"ఈవెంట్ లేబుల్ ఫీల్డ్","app_crud_title":"క్రుడ్ టైటిల్","app_csv":"CSV","app_csvImport":"CSV దిగుమతి","app_csv_file_to_import":"CSV ఫైల్ దిగుమతి","app_currencies":"కరెన్సీలు","app_currency":"కరెన్సీ","app_current_password":"ప్రస్తుత పాస్వర్డ్","app_custom_controller_index":"కస్టమ్ కంట్రోలర్ సూచిక.","app_customer":"కస్టమర్","app_customers":"వినియోగదారుడు","app_dashboard":"డాష్బోర్డ్","app_dashboard_text":"మీరు లాగిన్ అయ్యారు!","app_delete":"తొలగించు","app_delete_selected":"ఎంచుకున్నవాటిని రద్దు చేయుట","app_deleted_at":"వద్ద తొలగించబడింది","app_description":"వివరణ","app_deselect_all":"అన్ని ఎంపికలను తీసివేయండి","app_discount_amount":"డిస్కౌంట్ మొత్తం","app_discount_percent":"డిస్కౌంట్ శాతం","app_documents":"పత్రాలు","app_due_date":"గడువు తేది","app_edit":"మార్చు","app_edit_calendar_source":"క్యాలెండర్ మూలాన్ని సవరించండి","app_email":"ఇమెయిల్","app_email_greet":"హలో","app_email_line1":"మీ ఖాతా కోసం పాస్వర్డ్ రీసెట్ అభ్యర్ధనను మేము స్వీకరించినందున మీరు ఈ ఇమెయిల్ని స్వీకరిస్తున్నారు.","app_email_line2":"మీరు పాస్వర్డ్ రీసెట్ను అభ్యర్థించకుంటే, తదుపరి చర్య అవసరం లేదు.","app_email_regards":"గౌరవంతో","app_end_time":"ముగింపు సమయం","app_entry_date":"ఎంట్రీ తేదీ","app_excel":"Excel","app_excerpt":"ఎక్సెర్ప్ట్","app_expense":"ఖర్చుల","app_expense_categories":"ఖర్చు వర్గం","app_expense_category":"ఖర్చు వర్గం","app_expense_management":"ఖర్చు నిర్వహణ","app_expenses":"ఖర్చులు","app_faq_management":"FAQ మేనేజ్మెంట్","app_featured_image":"ఫీచర్ చిత్రం","app_fee_percent":"ఫీజు శాతం","app_file":"ఫైలు","app_file_contains_header_row":"ఫైల్ శీర్షిక వరుసను కలిగి ఉంది?","app_first_name":"మొదటి పేరు","app_forgot_password":"మీ పాస్వర్డ్ను మర్చిపోయారా?","app_group_by":"ద్వారా సమూహం","app_if_you_are_having_trouble":"మీరు క్లిక్ చేయడం సమస్య ఉంటే","app_import_data":"డేటాను దిగుమతి చేయండి","app_imported_rows_to_table":"దిగుమతి చేయబడినవి: వరుసలు వరుసలు: పట్టిక పట్టిక","app_inbox":"ఇన్బాక్స్","app_income_categories":"ఆదాయం వర్గాలు","app_income_source":"ఆదాయం మూలం","app_income_sources":"ఆదాయం మూలాల","app_integer_float_placeholder":"దయచేసి పూర్ణాంక / ఫ్లోట్ ఫీల్డ్లలో ఒకదాన్ని ఎంచుకోండి","app_is_created":"సృష్టించబడింది","app_is_deleted":"తొలగించబడుతుంది","app_is_updated":"నవీకరించబడింది","app_label_field":"లేబుల్ ఫీల్డ్","app_last_name":"చివరి పేరు","app_list":"జాబితా","app_loading":"లోడ్","app_location":"స్థానం","app_locations":"స్థానాలు","app_login":"లాగిన్","app_logout":"లాగౌట్","app_main_currency":"ప్రధాన కరెన్సీ","app_make_default":"డిఫాల్ట్గా చేయండి","app_message":"సందేశం","app_messages":"సందేశాలు","app_monthly_report":"మంత్లీ రిపోర్ట్","app_name":"పేరు","app_new_calendar_source":"క్రొత్త క్యాలెండర్ మూలాన్ని సృష్టించండి","app_new_message":"కొత్త సందేశం","app_new_password":"కొత్త పాస్వర్డ్","app_no_calendar_sources":"ఇంకా క్యాలెండర్ వనరులు లేవు.","app_no_entries_in_table":"పట్టికలో ఎంట్రీలు లేవు","app_no_reports_yet":"ఇంకా నివేదికలు లేవు.","app_not_approved_p":"మీ ఖాతా ఇప్పటికీ నిర్వాహకునిచే ఆమోదించబడలేదు. దయచేసి, ఓపికపట్టండి మరియు తర్వాత మళ్లీ ప్రయత్నించండి.","app_not_approved_title":"మీరు ఆమోదించబడలేదు","app_note_text":"వచనాన్ని గమనించండి","app_notes":"గమనికలు","app_notifications":"ప్రకటనలు","app_notify_user":"వినియోగదారుని తెలియజేయండి","app_outbox":"ఔట్ బాక్స్","app_pages":"పేజీలు","app_parse_csv":"PARS CSV","app_password":"పాస్వర్డ్","app_password_confirm":"కొత్త పాస్వర్డ్ నిర్ధారణ","app_pdf":"PDF","app_permadel":"శాశ్వతంగా తొలగించు","app_permissions":"అనుమతులు","app_phone":"ఫోన్","app_phone1":"ఫోన్ 1","app_phone2":"ఫోన్ 2","app_photo":"ఫోటో (గరిష్టంగా 8mb)","app_photo1":"Photo1","app_photo2":"Photo2","app_photo3":"Photo3","app_please_select":"దయచేసి ఎంచుకోండి","app_prefix":"ఉపసర్గ","app_price":"ధర","app_print":"ప్రింట్","app_product_management":"ఉత్పత్తి నిర్వహణ","app_product_name":"ఉత్పత్తి పేరు","app_products":"ఉత్పత్తులు","app_project":"ప్రాజెక్ట్","app_project_status":"ప్రాజెక్ట్ స్థితి","app_project_statuses":"ప్రాజెక్ట్ హోదాలు","app_projects":"ప్రాజెక్ట్స్","app_question":"ప్రశ్న","app_questions":"ప్రశ్నలు","app_recipient":"గ్రహీత","app_redeem_time":"సమయాన్ని ఆదా చేయండి","app_refresh":"రిఫ్రెష్","app_register":"నమోదు","app_registration":"నమోదు","app_remember_me":"నన్ను గుర్తు పెట్టుకో","app_remember_token":"టోకెన్ గుర్తుంచుకో","app_reply":"ప్రత్యుత్తరం","app_reports":"నివేదికలు","app_reports_x_axis_field":"X- అక్షం - దయచేసి తేదీ / సమయ ఖాళీలను ఒకటి ఎంచుకోండి","app_reports_y_axis_field":"Y- యాక్సిస్ - దయచేసి సంఖ్య ఫీల్డ్లలో ఒకదాన్ని ఎంచుకోండి","app_reset_password":"రహస్యపదాన్ని మార్చుకోండి","app_reset_password_woops":"<strong>అయ్యో!</strong> ఇన్పుట్ తో సమస్యలు ఉన్నాయి:","app_restore":"పునరుద్ధరించు","app_role":"పాత్ర","app_roles":"పాత్రలు","app_sample_answer":"నమూనా సమాధానం","app_sample_category":"నమూనా వర్గం","app_sample_question":"నమూనా ప్రశ్న","app_save":"సేవ్","app_select_all":"అన్ని ఎంచుకోండి","app_select_crud_placeholder":"దయచేసి మీ CRUD లలో ఒకదాన్ని ఎంచుకోండి","app_select_dt_placeholder":"దయచేసి తేదీ / సమయ ఫీల్డ్లలో ఒకటి ఎంచుకోండి","app_select_users_placeholder":"దయచేసి మీ వినియోగదారుల్లో ఒకదాన్ని ఎంచుకోండి","app_send":"పంపండి","app_serial_number":"క్రమ సంఖ్య","app_settings":"సెట్టింగులు","app_show":"షో","app_simple_user":"సాధారణ యూజర్","app_skype":"స్కైప్","app_slug":"స్లగ్","app_start_date":"ప్రారంబపు తేది","app_start_time":"సమయం ప్రారంభించండి","app_status":"స్థితి","app_statuses":"హోదాలు","app_stripe_transactions":"గీత లావాదేవీలు","app_subject":"Subject","app_subscription-billing":"చందాలు","app_subscription-payments":"చెల్లింపులు","app_suffix":"Sufix","app_tag":"ట్యాగ్","app_tags":"టాగ్లు","app_task_management":"టాస్క్ మేనేజ్మెంట్","app_tasks":"పనులు","app_team-management":"జట్లు","app_team-management-singular":"జట్టు","app_text":"టెక్స్ట్","app_there_were_problems_with_input":"ఇన్పుట్ తో సమస్యలు ఉన్నాయి","app_time":"సమయం","app_time_entries":"సమయం ఎంట్రీలు","app_time_management":"సమయం నిర్వహణ","app_title":"శీర్షిక","app_transaction_date":"లావాదేవీ తేదీ","app_transaction_type":"లావాదేవీ రకం","app_transaction_types":"లావాదేవీ రకాలు","app_transactions":"ట్రాన్సాక్షన్స్","app_trash":"ట్రాష్","app_update":"నవీకరణ","app_updated_at":"వద్ద నవీకరించబడింది","app_upgrade_to_premium":"ప్రీమియంకు అప్గ్రేడ్ చేయండి","app_user":"వాడుకరి","app_user_actions":"వాడుకరి చర్యలు","app_user_management":"వాడుకరి నిర్వహణ","app_users":"వినియోగదారులు","app_valid_from":"నుండి చెల్లుబాటు అయ్యే","app_valid_to":"చెల్లుతుంది","app_values":"విలువలు","app_view":"చూడండి","app_website":"వెబ్సైట్","app_when_crud":"ఎప్పుడు CRUD","app_whoops":"అయ్యో!","app_work_type":"పని రకం","app_work_types":"పని రకాలు","app_x_axis_field":"X- అక్షం క్షేత్రం (తేదీ / సమయం)","app_x_axis_group_by":"X- అక్షం సమూహం","app_y_axis_field":"Y- అక్షం ఫీల్డ్","app_you_have_no_messages":"మీకు సందేశాలు లేవు.","articles":{"fields":{"available-for":"అందుబాటులో","category-id":"వర్గం","excerpt":"ఎక్సెర్ప్ట్","featured-image":"ఫీచర్ చిత్రం","page-text":"టెక్స్ట్","tag-id":"టాగ్లు","title":"శీర్షిక"},"title":"వ్యాసాలు"},"assets":{"fields":{"assigned-user":"కేటాయించిన (వినియోగదారు)","attachments":"అటాచ్మెంట్లు","category":"వర్గం","location":"స్థానం","notes":"గమనికలు","photo1":"సూక్ష్మచిత్రం","photo2":"గ్యాలరీ","serial-number":"క్రమ సంఖ్య","status":"స్థితి","title":"శీర్షిక"},"title":"ఆస్తులు"},"assets-categories":{"fields":{"title":"శీర్షిక"},"title":"వర్గం"},"assets-history":{"created_at":"సమయం","fields":{"asset":"ఆస్తి","assigned-user":"కేటాయించిన (వినియోగదారు)","location":"స్థానం","status":"స్థితి"},"title":"ఆస్తుల చరిత్ర"},"assets-locations":{"fields":{"title":"శీర్షిక"},"title":"స్థానాలు"},"assets-management":{"title":"ఆస్తుల నిర్వహణ"},"assets-statuses":{"fields":{"title":"శీర్షిక"},"title":"హోదాలు"},"balance-sheet":{"title":"బ్యాలెన్స్ షీట్"},"brands":{"fields":{"icon":"ఐకాన్","status":"స్థితి","title":"శీర్షిక"},"title":"బ్రాండ్స్"},"client-projects":{"fields":{"assigned-to":"కేటాయించిన","billing-type":"బిల్లింగ్ రకం","budget":"బడ్జెట్","client":"క్లయింట్","demo-url":"డెమో url","description":"వివరణ","due-date":"గడువు తేది","phase":"దశ","priority":"ప్రాధాన్యత","start-date":"ప్రారంబపు తేది","status":"స్థితి","title":"శీర్షిక"},"title":"క్లయింట్ ప్రాజెక్టులు"},"companies":{"fields":{"address":"చిరునామా","business-number":"వ్యాపారం సంఖ్య","city":"సిటీ","company-name":"కంపెనీ పేరు","country":"దేశం","email":"ఇమెయిల్","logo":"లోగో","phone":"ఫోన్","state-region":"రాష్ట్రం / ప్రాంతం","url":"url","zip-postal-code":"జిప్ / పోస్టల్ కోడ్"},"title":"కంపెనీలు"},"contact-companies":{"fields":{"address":"చిరునామా","email":"ఇమెయిల్","name":"కంపెనీ పేరు","website":"వెబ్సైట్"},"title":"కంపెనీలు"},"contact-documents":{"fields":{"attachments":"అటాచ్మెంట్లు","contact":"సంప్రదించండి","description":"వివరణ","name":"పేరు"},"title":"సంప్రదించండి పత్రాలు"},"contact-groups":{"fields":{"description":"వివరణ","name":"పేరు"},"title":"పరిచయ సమూహాలు"},"contact-management":{"title":"నిర్వహణ నిర్వహణ"},"contact-notes":{"fields":{"attachment":"జోడింపు","contact":"సంప్రదించండి","notes":"గమనికలు","title":"శీర్షిక"},"title":"సంప్రదింపు గమనికలు"},"contact-types":{"fields":{"description":"వివరణ","name":"పేరు"},"title":"సంప్రదించండి రకాలు"},"contacts":{"edit-profile":"ప్రొఫైల్ను సవరించండి","fields":{"address":"చిరునామా","city":"సిటీ","company":"కంపెనీ","contact-type":"పరిచయం రకం","country":"దేశం","email":"ఇమెయిల్","first-name":"మొదటి పేరు","group":"గ్రూప్","language":"భాషా","last-name":"చివరి పేరు","phone1":"ఫోన్ 1","phone1_code":"ఫోన్ 1 కోడ్","phone2":"ఫోన్ 2","phone2_code":"ఫోన్ 2 కోడ్","skype":"స్కైప్","state-region":"రాష్ట్రం / ప్రాంతం","tax-id":"పన్ను గుర్తింపు","zip-postal-code":"జిప్ / పోస్టల్ కోడ్"},"title":"కాంటాక్ట్స్","title_customer":"కస్టమర్","title_customers":"వినియోగదారుడు","title_lead":"లీడ్","title_leads":"దారితీస్తుంది","title_profile":"ప్రొఫైల్","title_supplier":"సరఫరాదారు","title_suppliers":"సప్లయర్స్"},"content-categories":{"fields":{"slug":"స్లగ్","title":"వర్గం"},"title":"వర్గం"},"content-management":{"title":"విషయ గ్రంథస్త నిర్వహణ"},"content-pages":{"fields":{"category-id":"వర్గం","created-at":"సమయం సృష్టించబడింది","excerpt":"ఎక్సెర్ప్ట్","featured-image":"ఫీచర్ చిత్రం","page-text":"టెక్స్ట్","tag-id":"టాగ్లు","title":"శీర్షిక"},"title":"పేజీలు"},"content-tags":{"fields":{"slug":"స్లగ్","title":"ట్యాగ్"},"title":"టాగ్లు"},"countries":{"fields":{"shortcode":"చిన్న కోడ్","title":"శీర్షిక"},"title":"దేశాలు"},"coupon-campaigns":{"fields":{"coupons-amount":"కూపన్లు మొత్తం","description":"వివరణ","discount-amount":"డిస్కౌంట్ మొత్తం","discount-percent":"డిస్కౌంట్ శాతం","title":"శీర్షిక","valid-from":"నుండి చెల్లుబాటు అయ్యే","valid-to":"చెల్లుతుంది"},"title":"ప్రచారాలు"},"coupon-management":{"title":"కూపన్ మేనేజ్మెంట్"},"coupons":{"fields":{"campaign":"ప్రచారం","code":"కోడ్","discount-amount":"డిస్కౌంట్ మొత్తం","discount-percent":"డిస్కౌంట్ శాతం","redeem-time":"సమయాన్ని ఆదా చేయండి","valid-from":"నుండి చెల్లుబాటు అయ్యే","valid-to":"చెల్లుతుంది"},"title":"కూపన్లు"},"currencies":{"fields":{"code":"కోడ్","is_default":"డిఫాల్ట్?","name":"పేరు","rate":"రేటు","status":"స్థితి","symbol":"చిహ్నం"},"title":"కరెన్సీలు"},"database-backup":{"title":"డేటాబేస్ బ్యాకప్"},"departments":{"fields":{"created-by":"సృష్టికర్త","description":"వివరణ","name":"పేరు"},"title":"విభాగాలు"},"discounts":{"fields":{"description":"వివరణ","discount":"డిస్కౌంట్","discount-type":"డిస్కౌంట్ రకం","name":"పేరు"},"title":"డిస్కౌంట్"},"download-template":"మూసను డౌన్లోడ్ చేయండి","email-templates":{"fields":{"body":"శరీర","name":"పేరు","subject":"Subject"},"title":"ఇమెయిల్ టెంప్లేట్లను"},"expense":{"fields":{"account":"ఖాతా","amount":"మొత్తం","description":"వివరణ","description-file":"వివరణ ఫైలు","entry-date":"ఎంట్రీ తేదీ","expense-category":"ఖర్చు వర్గం","payee":"చెల్లింపును స్వీకరించే","payment-method":"పైకము చెల్లించు విదానం","ref-no":"Ref #"},"title":"ఖర్చులు"},"expense-category":{"fields":{"name":"పేరు"},"title":"ఖర్చు వర్గం"},"expense-management":{"title":"అకౌంటింగ్"},"expense-types":{"title":"ఖర్చు రకాలు"},"faq-categories":{"fields":{"title":"వర్గం"},"title":"వర్గం"},"faq-management":{"faq":"తరచుగా అడిగే ప్రశ్నలు","title":"FAQ మేనేజ్మెంట్"},"faq-questions":{"fields":{"answer-text":"సమాధానం","category":"వర్గం","question-text":"ప్రశ్న"},"title":"ప్రశ్నలు"},"general-settings":{"title":"సాధారణ సెట్టింగులు"},"global-settings":{"title":"గ్లోబల్ సెట్టింగ్లు"},"global_title":"డిజి ఖాతా, ఇన్వాయిస్ &amp; బిల్లింగ్ CRM","income":{"fields":{"account":"ఖాతా","amount":"మొత్తం","description":"వివరణ","description-file":"వివరణ ఫైలు","entry-date":"ఎంట్రీ తేదీ","income-category":"ఆదాయం వర్గం","pay-method":"చెల్లించండి పద్ధతి","payer":"చెల్లింపుదారు","ref-no":"Ref #"},"title":"ఆదాయపు"},"income-category":{"fields":{"name":"పేరు"},"title":"ఆదాయం వర్గాలు"},"info":"సమాచారం","internal-notifications":{"fields":{"link":"లింక్","text":"టెక్స్ట్","users":"వినియోగదారులు"},"title":"ప్రకటనలు"},"invoices":{"fields":{"address":"చిరునామా","amount":"మొత్తం","currency":"కరెన్సీ","customer":"కస్టమర్","discount":"డిస్కౌంట్","discount_format":"డిస్కౌంట్ ఫార్మాట్","invoice-date":"చలానా తారీకు","invoice-due-date":"వాయిస్ గడువు తేదీ","invoice-no":"ఇన్వాయిస్ #","invoice-notes":"వాయిస్ గమనికలు","invoice-prefix":"వాయిస్ ఉపసర్గ","reference":"సూచన","show-quantity-as":"పరిమాణం చూపించు","status":"స్థితి","tax":"పన్ను","tax_format":"పన్ను ఫార్మాట్","title":"శీర్షిక"},"title":"రసీదులు"},"knowledgebase":{"title":"ఆధారితం"},"languages":{"fields":{"code":"కోడ్","is-rtl":"RTL ఉంది","language":"భాషా"},"title":"భాషలు"},"manage-projects":{"title":"ప్రాజెక్టులను నిర్వహించండి"},"master-settings":{"fields":{"description":"వివరణ","key":"కీ","module":"మాడ్యూల్"},"title":"మాస్టర్ సెట్టింగులు"},"measurement-units":{"fields":{"description":"వివరణ","status":"స్థితి","title":"శీర్షిక"},"title":"కొలత యూనిట్లు"},"monthly-report":{"title":"మంత్లీ రిపోర్ట్"},"navigation-menues":{"title":"నావిగేషన్ మెన్యుస్"},"operations_disabled":"ఆపరేషన్ మోడ్లో డిసేబుల్ చెయ్యబడింది","payment-gateways":{"fields":{"description":"వివరణ","logo":"లోగో","name":"పేరు"},"title":"చెల్లింపు ముఖద్వారాలు"},"payments":{"cancelled":"మీరు మీ చెల్లింపును రద్దు చేసారు","failed":"చెల్లింపు విఫలమైంది","title":"చెల్లింపులు"},"permissions":{"fields":{"title":"శీర్షిక"},"title":"అనుమతులు"},"product-categories":{"fields":{"description":"వివరణ","name":"వర్గం పేరు","photo":"ఫోటో (గరిష్టంగా 8mb)"},"title":"వర్గం"},"product-management":{"title":"ఉత్పత్తి నిర్వహణ"},"product-tags":{"fields":{"name":"పేరు"},"title":"టాగ్లు"},"products":{"fields":{"actual-price":"అసలు ధర","alert-quantity":"హెచ్చరిక పరిమాణం","brand":"బ్రాండ్","category":"వర్గం","description":"వివరణ","excerpt":"ఎక్సెర్ప్ట్","hsn-sac-code":"HSN / SAC కోడ్","image-gallery":"చిత్రం గ్యాలరీ","name":"ఉత్పత్తి పేరు","other-files":"ఇతర ఫైళ్ళు","product-code":"ఉత్పత్తి కోడ్","product-size":"ఉత్పత్తి పరిమాణం","product-weight":"ఉత్పత్తి బరువు","sale-price":"అమ్ముడు ధర","stock-quantity":"స్టాక్ పరిమాణం","tag":"ట్యాగ్","thumbnail":"సూక్ష్మచిత్రం","ware-house":"వేర్ హౌస్"},"gallery-file-types":"అంగీకరించిన ఫైల్ రకాలు: png, jpg, jpeg, gif","title":"ఉత్పత్తులు"},"products-return":{"fields":{"address":"చిరునామా","currency":"కరెన్సీ","customer":"కస్టమర్","discount":"డిస్కౌంట్","invoice-no":"ఇన్వాయిస్ #","invoice-prefix":"వాయిస్ ఉపసర్గ","notes":"గమనికలు","order-date":"ఆర్డర్ తేదీ","order-due-date":"ఆర్డర్ గడువు తేదీ","reference":"సూచన","show-quantity-as":"పరిమాణం చూపించు","status":"స్థితి","subject":"Subject","tax":"పన్ను","update-stock":"స్టాక్ను నవీకరించండి","ware-house":"వేర్ హౌస్"},"title":"ఉత్పత్తులు తిరిగి వస్తాయి"},"products-transfer":{"title":"ఉత్పత్తులు బదిలీ"},"project-billing-types":{"fields":{"description":"వివరణ","title":"శీర్షిక"},"title":"ప్రాజెక్ట్ బిల్లింగ్ రకాలు"},"project-statuses":{"fields":{"description":"వివరణ","name":"పేరు"},"title":"ప్రాజెక్ట్ హోదాలు"},"projects":{"title":"ప్రాజెక్ట్స్"},"purchase-orders":{"fields":{"address":"చిరునామా","amount":"మొత్తం","currency":"కరెన్సీ","customer":"సరఫరాదారు","discount":"డిస్కౌంట్","invoice-no":"ఇన్వాయిస్ #","invoice-prefix":"వాయిస్ ఉపసర్గ","notes":"గమనికలు","order-date":"జారి చెయ్యబడిన చోటు","order-due-date":"ఆర్డర్ గడువు తేదీ","reference":"సూచన","show-quantity-as":"పరిమాణం చూపించు","status":"స్థితి","subject":"Subject","tax":"పన్ను","update-stock":"స్టాక్ను నవీకరించండి","warehouse":"వేర్హౌస్"},"title":"ఆర్డర్లను కొనుగోలు చేయండి"},"quotes":{"fields":{"address":"చిరునామా","amount":"మొత్తం","currency":"కరెన్సీ","customer":"కస్టమర్","discount":"డిస్కౌంట్","proposal-text":"ప్రతిపాదన టెక్స్ట్","quote-date":"కోట్ తేదీ","quote-expiry-date":"కోట్ గడువు తేదీ","quote-no":"కోట్ లేదు","quote-prefix":"కోట్ ఉపసర్గ","reference":"సూచన","show-quantity-as":"పరిమాణం చూపించు","status":"స్థితి","tax":"పన్ను","title":"శీర్షిక"},"title":"వ్యాఖ్యలు"},"recurring-invoices":{"fields":{"address":"చిరునామా","amount":"మొత్తం","currency":"కరెన్సీ","customer":"కస్టమర్","discount":"డిస్కౌంట్","invoice-date":"చలానా తారీకు","invoice-due-date":"వాయిస్ గడువు తేదీ","invoice-no":"ఇన్వాయిస్ #","invoice-notes":"వాయిస్ గమనికలు","invoice-prefix":"వాయిస్ ఉపసర్గ","paymentstatus":"చెల్లింపు స్థితి","products":"ఉత్పత్తులు","recurring-period":"పునరావృత కాలం","reference":"సూచన","show-quantity-as":"పరిమాణం చూపించు","status":"స్థితి","tax":"పన్ను","title":"శీర్షిక"},"title":"పునరావృత ఇన్వాయిస్లు"},"recurring-periods":{"fields":{"description":"వివరణ","title":"శీర్షిక","value":"విలువ"},"title":"పునరావృత కాలాలు"},"roles":{"fields":{"permission":"అనుమతులు","title":"శీర్షిక"},"title":"పాత్రలు"},"sales":{"title":"అమ్మకాలు"},"sales-taxes":{"title":"సేల్స్ టాక్స్"},"support":{"fields":{"assigned-to":"కేటాయించిన","attachments":"అటాచ్మెంట్లు","created-by":"సృష్టికర్త","department":"శాఖ","description":"వివరణ","email":"ఇమెయిల్","name":"పేరు","priority":"ప్రాధాన్యత","subject":"Subject"},"title":"మద్దతు"},"task-calendar":{"status-wise":"స్థితి జ్ఞానం","title":"క్యాలెండర్"},"task-management":{"title":"టాస్క్ మేనేజ్మెంట్"},"task-statuses":{"fields":{"color":"రంగు","name":"పేరు"},"panel-danger":"డేంజర్ ప్యానెల్","panel-default":"డిఫాల్ట్ ప్యానెల్","panel-info":"సమాచార ప్యానెల్","panel-primary":"ప్రాథమిక ప్యానెల్","panel-success":"సక్సెస్ ప్యానెల్","panel-warning":"హెచ్చరిక ప్యానెల్","title":"హోదాలు"},"task-tags":{"fields":{"name":"పేరు"},"title":"టాగ్లు"},"tasks":{"fields":{"attachment":"జోడింపు","description":"వివరణ","due-date":"గడువు తేది","name":"పేరు","start-date":"ప్రారంబపు తేది","status":"స్థితి","tag":"టాగ్లు","user":"కేటాయించిన"},"task-status-updated":"విధి స్థితి విజయవంతంగా నవీకరించబడింది","title":"పనులు"},"taxes":{"fields":{"description":"వివరణ","name":"పేరు","rate":"రేటు","rate-type":"రేట్ రకం"},"title":"పన్నులు"},"time-entries":{"fields":{"description":"వివరణ","end-date":"ఆఖరి తేది","project":"ప్రాజెక్ట్","start-date":"ప్రారంబపు తేది"},"title":"సమయం ఎంట్రీలు"},"transfers":{"fields":{"amount":"మొత్తం","date":"తేదీ","description":"వివరణ","from":"నుండి","payment-method":"పైకము చెల్లించు విదానం","ref-no":"Ref #","to":"టు"},"title":"బదిలీలు"},"user-actions":{"created_at":"సమయం","fields":{"action":"యాక్షన్","action-id":"చర్య ఐడి","action-model":"యాక్షన్ మోడల్","user":"వాడుకరి"},"title":"వాడుకరి చర్యలు"},"user-management":{"title":"వాడుకరి నిర్వహణ"},"users":{"activate":"సక్రియం","active":"Active","fields":{"contact-reference":"సూచనను సంప్రదించండి","department":"శాఖ","email":"ఇమెయిల్","name":"పేరు","password":"పాస్వర్డ్","remember-token":"టోకెన్ గుర్తుంచుకో","role":"పాత్ర","status":"స్థితి"},"suspend":"సస్పెండ్","title":"వినియోగదారులు"},"warehouses":{"fields":{"address":"చిరునామా","description":"వివరణ","name":"పేరు"},"title":"గిడ్డంగులు"}},"te.validation":{"accepted":"ఆ లక్షణాన్ని అంగీకరించాలి.","active_url":"ఆ: లక్షణం చెల్లుబాటు అయ్యే URL కాదు.","after":"ది: లక్షణం తేదీ తర్వాత ఉండాలి: తేదీ.","after_or_equal":"ది: లక్షణం తేదీ తర్వాత లేదా సమానంగా ఉండాలి: తేదీ.","alpha":"ది: లక్షణం అక్షరాలు కలిగి ఉండవచ్చు.","alpha_dash":"ది: లక్షణం అక్షరాలు, సంఖ్యలు, డాష్లు మరియు అండర్స్కోర్లను మాత్రమే కలిగి ఉండవచ్చు.","alpha_num":"ది: లక్షణం అక్షరాలు మరియు సంఖ్యలను మాత్రమే కలిగి ఉండవచ్చు.","array":"ది: లక్షణం ఒక అర్రే అయి ఉండాలి.","before":"ది: లక్షణం తేదీ ముందు తప్పక ఉండాలి: తేదీ.","before_or_equal":"తేదీ: తేదీ ముందు లేదా సమానంగా తేదీ ఉండాలి: తేదీ.","between":{"array":"ది: లక్షణం మధ్య ఉండాలి: min మరియు: max అంశాలను.","file":"ది: లక్షణం మధ్య ఉండాలి: min మరియు: max kilobytes.","numeric":"ది: లక్షణం మధ్య ఉండాలి: min మరియు: max.","string":"ది: లక్షణం మధ్య ఉండాలి: min మరియు: max characters."},"boolean":"ఆ: లక్షణం ఫీల్డ్ నిజమైన లేదా తప్పుడు ఉండాలి.","confirmed":"ది: గుణం నిర్ధారణ సరిపోలడం లేదు.","custom":{"attribute-name":{"rule-name":"కస్టమ్ సందేశాన్ని"}},"date":"ఆ: లక్షణం చెల్లుబాటు అయ్యే తేదీ కాదు.","date_format":"ఫార్మాట్: లక్షణం ఫార్మాట్ సరిపోలడం లేదు.","different":"ది: లక్షణం మరియు: ఇతర భిన్నంగా ఉండాలి.","digits":"లక్షణం: అంకెలు అంకెలు ఉండాలి.","digits_between":"ది: లక్షణం మధ్య ఉండాలి: min మరియు: max అంకెలు.","dimensions":": లక్షణం చెల్లని ఇమేజ్ పరిమాణాలను కలిగి ఉంది.","distinct":": గుణం ఫీల్డ్ నకిలీ విలువను కలిగి ఉంది.","email":"ఆ: లక్షణం చెల్లుబాటు అయ్యే ఇమెయిల్ చిరునామా అయి ఉండాలి.","exists":"ఎంచుకున్నది: లక్షణం చెల్లనిది.","file":"ఆ లక్షణం తప్పనిసరిగా ఒక ఫైల్ అయి ఉండాలి.","filled":"ఆ: లక్షణం రంగంలో విలువ ఉండాలి.","gt":{"array":"విలువ: కంటే ఎక్కువ విలువ ఉండాలి.","file":"విలువ: కిలోబైట్ల విలువ కంటే ఎక్కువ ఉండాలి.","numeric":"ఆ: లక్షణం కంటే ఎక్కువ ఉండాలి: విలువ.","string":"విలువ: అక్షరాల కంటే ఎక్కువగా ఉండాలి."},"gte":{"array":"లక్షణం కలిగి ఉండాలి: విలువ అంశాలు లేదా ఎక్కువ.","file":"విలువ: కిలోబైట్ల విలువ కంటే ఎక్కువ లేదా సమానంగా ఉండాలి.","numeric":"విలువ: లక్షణం కంటే ఎక్కువ లేదా సమానంగా ఉండాలి: విలువ.","string":"విలువ: విలువలు ఎక్కువ లేదా సమానంగా ఉండాలి: విలువ అక్షరాలు."},"image":"ది: లక్షణం తప్పనిసరిగా ఒక చిత్రం అయి ఉండాలి.","in":"ఎంచుకున్నది: లక్షణం చెల్లనిది.","in_array":"ది: లక్షణం రంగంలో లేదు: ఇతర.","integer":"ది: లక్షణం పూర్ణాంకంగా ఉండాలి.","ip":"ది: లక్షణం చెల్లుబాటు అయ్యే IP చిరునామా అయి ఉండాలి.","ipv4":"ది: లక్షణం చెల్లుబాటు అయ్యే IPv4 చిరునామా అయి ఉండాలి.","ipv6":"ది: లక్షణం చెల్లుబాటు అయ్యే IPv6 చిరునామా అయి ఉండాలి.","json":": లక్షణం తప్పనిసరిగా చెల్లుబాటు అయ్యే JSON స్ట్రింగ్ అయి ఉండాలి.","lt":{"array":"విలువ: విలువ కంటే తక్కువగా ఉండాలి.","file":"విలువ: కిలోబైట్ల కంటే తక్కువగా ఉండాలి.","numeric":"విలువ: విలువ కంటే తక్కువగా ఉండాలి.","string":"విలువ: అక్షరాల కంటే తక్కువగా ఉండాలి."},"lte":{"array":"విలువ: విలువలు కంటే ఎక్కువ ఉండకూడదు.","file":"విలువ: కిలోబైట్ల కంటే తక్కువ లేదా సమానంగా ఉండాలి.","numeric":"విలువ: విలువ తప్పక లేదా సమానంగా ఉండాలి: విలువ.","string":"విలువ: అక్షరాల కంటే తక్కువగా లేదా సమానంగా ఉండాలి: విలువ అక్షరాలు."},"max":{"array":": లక్షణం కంటే ఎక్కువ ఉండకపోవచ్చు: గరిష్ట అంశాలు.","file":"ఆ: లక్షణం కంటే ఎక్కువ కాదు: గరిష్ట కిలోబైట్లు.","numeric":"ఆ: లక్షణం కంటే ఎక్కువ కాదు: గరిష్టంగా.","string":"ఆ: గుణం కంటే ఎక్కువ కాదు: గరిష్ట అక్షరాలు."},"mimes":": లక్షణం రకం యొక్క ఒక ఫైల్ తప్పనిసరిగా:: విలువలు.","mimetypes":": లక్షణం రకం యొక్క ఒక ఫైల్ తప్పనిసరిగా:: విలువలు.","min":{"array":"ది: లక్షణం కనీసం ఉండాలి: min అంశాలు.","file":"ది: లక్షణం కనీసం ఉండాలి: min kilobytes.","numeric":"ది: లక్షణం కనీసం ఉండాలి: min.","string":"ది: లక్షణం తప్పనిసరిగా కనీసం ఉండాలి: కనిష్ట అక్షరాలు."},"not_in":"ఎంచుకున్నది: లక్షణం చెల్లనిది.","not_regex":": గుణం ఫార్మాట్ చెల్లనిది.","numeric":"ది: లక్షణం ఒక సంఖ్యగా ఉండాలి.","present":"ది: గుణం ఫీల్డ్ ఉండాలి.","regex":": గుణం ఫార్మాట్ చెల్లనిది.","required":"ది: గుణం ఫీల్డ్ అవసరం.","required_if":"ఆ: లక్షణం ఫీల్డ్ అవసరం: ఇతరమైనది: విలువ.","required_unless":"ది: గుణం ఫీల్డ్ అవసరం తప్ప: మరొకది: విలువలు.","required_with":": లక్షణం ఫీల్డ్ అవసరం: విలువలు ఉంది.","required_with_all":": లక్షణం ఫీల్డ్ అవసరం: విలువలు ఉంది.","required_without":": లక్షణం ఫీల్డ్ అవసరం: విలువలు లేవు.","required_without_all":": ఎవరిలో అయినా విలువలు ఉన్నట్లయితే గుణం ఫీల్డ్ అవసరం.","same":"ది: లక్షణం మరియు: ఇతర తప్పక సరిపోవాలి.","size":{"array":"ది: లక్షణం కలిగి ఉండాలి: పరిమాణం అంశాలు.","file":"ది: లక్షణం తప్పక: పరిమాణం కిలోబైట్లు.","numeric":"ఆ గుణం: పరిమాణం ఉండాలి.","string":"లక్షణం: పరిమాణ అక్షరాలు ఉండాలి."},"string":"ది: లక్షణం ఒక స్ట్రింగ్ అయి ఉండాలి.","timezone":"ఆ: లక్షణం చెల్లుబాటు అయ్యే జోన్గా ఉండాలి.","unique":"ఆ లక్షణం ఇప్పటికే తీసుకోబడింది.","uploaded":": లక్షణం అప్లోడ్ విఫలమైంది.","url":": గుణం ఫార్మాట్ చెల్లనిది."}}

/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./resources/client/assets/js/app.js");


/***/ })

},[1]);